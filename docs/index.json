[
  {
    "__docId__": 1,
    "kind": "external",
    "name": "Infinity",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Infinity",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Infinity",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 2,
    "kind": "external",
    "name": "NaN",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/NaN",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~NaN",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 3,
    "kind": "external",
    "name": "undefined",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/undefined",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~undefined",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 4,
    "kind": "external",
    "name": "null",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/null",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~null",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 5,
    "kind": "external",
    "name": "Object",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Object",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 6,
    "kind": "external",
    "name": "object",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~object",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 7,
    "kind": "external",
    "name": "Function",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Function",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 8,
    "kind": "external",
    "name": "function",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~function",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 9,
    "kind": "external",
    "name": "Boolean",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Boolean",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Boolean",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 10,
    "kind": "external",
    "name": "boolean",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Boolean",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~boolean",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 11,
    "kind": "external",
    "name": "Symbol",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Symbol",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Symbol",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 12,
    "kind": "external",
    "name": "Error",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Error",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Error",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 13,
    "kind": "external",
    "name": "EvalError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/EvalError",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~EvalError",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 14,
    "kind": "external",
    "name": "InternalError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/InternalError",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~InternalError",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 15,
    "kind": "external",
    "name": "RangeError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/RangeError",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~RangeError",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 16,
    "kind": "external",
    "name": "ReferenceError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/ReferenceError",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~ReferenceError",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 17,
    "kind": "external",
    "name": "SyntaxError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/SyntaxError",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~SyntaxError",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 18,
    "kind": "external",
    "name": "TypeError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/TypeError",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~TypeError",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 19,
    "kind": "external",
    "name": "URIError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/URIError",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~URIError",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 20,
    "kind": "external",
    "name": "Number",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Number",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Number",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 21,
    "kind": "external",
    "name": "number",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Number",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~number",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 22,
    "kind": "external",
    "name": "Date",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Date",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 23,
    "kind": "external",
    "name": "String",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~String",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 24,
    "kind": "external",
    "name": "string",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~string",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 25,
    "kind": "external",
    "name": "RegExp",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/RegExp",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~RegExp",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 26,
    "kind": "external",
    "name": "Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Array",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 27,
    "kind": "external",
    "name": "Int8Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Int8Array",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Int8Array",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 28,
    "kind": "external",
    "name": "Uint8Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Uint8Array",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Uint8Array",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 29,
    "kind": "external",
    "name": "Uint8ClampedArray",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Uint8ClampedArray",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Uint8ClampedArray",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 30,
    "kind": "external",
    "name": "Int16Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Int16Array",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Int16Array",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 31,
    "kind": "external",
    "name": "Uint16Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Uint16Array",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Uint16Array",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 32,
    "kind": "external",
    "name": "Int32Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Int32Array",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Int32Array",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 33,
    "kind": "external",
    "name": "Uint32Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Uint32Array",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Uint32Array",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 34,
    "kind": "external",
    "name": "Float32Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Float32Array",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Float32Array",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 35,
    "kind": "external",
    "name": "Float64Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Float64Array",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Float64Array",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 36,
    "kind": "external",
    "name": "Map",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Map",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Map",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 37,
    "kind": "external",
    "name": "Set",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Set",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Set",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 38,
    "kind": "external",
    "name": "WeakMap",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/WeakMap",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~WeakMap",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 39,
    "kind": "external",
    "name": "WeakSet",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/WeakSet",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~WeakSet",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 40,
    "kind": "external",
    "name": "ArrayBuffer",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/ArrayBuffer",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~ArrayBuffer",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 41,
    "kind": "external",
    "name": "DataView",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/DataView",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~DataView",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 42,
    "kind": "external",
    "name": "JSON",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/JSON",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~JSON",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 43,
    "kind": "external",
    "name": "Promise",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Promise",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 44,
    "kind": "external",
    "name": "Generator",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Generator",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Generator",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 45,
    "kind": "external",
    "name": "GeneratorFunction",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/GeneratorFunction",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~GeneratorFunction",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 46,
    "kind": "external",
    "name": "Reflect",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Reflect",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Reflect",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 47,
    "kind": "external",
    "name": "Proxy",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Proxy",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Proxy",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 48,
    "kind": "file",
    "name": "src/controls/input.js",
    "content": "// @flow\r\nimport {objectIncludes, DIRECTION, type Selection} from '../core/utils.js';\r\nimport ActionDetails from '../core/action-details.js';\r\nimport MaskedDate from '../masked/date.js';\r\nimport createMask, {maskedClass} from '../masked/factory.js';\r\nimport type Masked from '../masked/base.js';\r\nimport {type Mask} from '../masked/base.js';\r\n\r\n\r\n/**\r\n  Generic element API to use with mask\r\n  @interface\r\n*/\r\ninterface UIElement {\r\n  value: string;\r\n  selectionStart: number;\r\n  selectionEnd: number;\r\n  setSelectionRange (number, number): void;\r\n  addEventListener(string, Function): void;\r\n  removeEventListener(string, Function): void;\r\n}\r\n\r\n\r\n/** Listens to element events and controls changes between element and {@link Masked} */\r\nexport default\r\nclass InputMask {\r\n  /**\r\n    View element\r\n    @readonly\r\n  */\r\n  el: UIElement;\r\n\r\n  /**\r\n    Internal {@link Masked} model\r\n    @readonly\r\n  */\r\n  masked: Masked<*>;\r\n  alignCursor: () => void;\r\n  alignCursorFriendly: () => void;\r\n\r\n  _listeners: {[string]: Array<Function>};\r\n  _value: string;\r\n  _changingCursorPos: number;\r\n  _unmaskedValue: string;\r\n  _saveSelection: (?Event) => void;\r\n  _selection: Selection;\r\n  _onInput: (Event) => void;\r\n  _onChange: () => void;\r\n  _onDrop: (Event) => void;\r\n  _cursorChanging: number;\r\n\r\n  /**\r\n    @param {UIElement} el\r\n    @param {Object} opts\r\n  */\r\n  constructor (el: UIElement, opts: {[string]: any}) {\r\n    this.el = el;\r\n    this.masked = createMask(opts);\r\n\r\n    this._listeners = {};\r\n    this._value = '';\r\n    this._unmaskedValue = '';\r\n\r\n    this._saveSelection = this._saveSelection.bind(this);\r\n    this._onInput = this._onInput.bind(this);\r\n    this._onChange = this._onChange.bind(this);\r\n    this._onDrop = this._onDrop.bind(this);\r\n    this.alignCursor = this.alignCursor.bind(this);\r\n    this.alignCursorFriendly = this.alignCursorFriendly.bind(this);\r\n\r\n    this._bindEvents();\r\n\r\n    // refresh\r\n    this.updateValue();\r\n    this._onChange();\r\n  }\r\n\r\n  /** Read or update mask */\r\n  get mask (): Mask {\r\n    return this.masked.mask;\r\n  }\r\n  set mask (mask: Mask) {\r\n    if (mask == null || mask === this.masked.mask) return;\r\n\r\n    if (this.masked.constructor === maskedClass(mask)) {\r\n      this.masked.mask = mask;\r\n      return;\r\n    }\r\n\r\n    const masked = createMask({mask});\r\n    masked.unmaskedValue = this.masked.unmaskedValue;\r\n    this.masked = masked;\r\n  }\r\n\r\n  /** Raw value */\r\n  get value (): string {\r\n    return this._value;\r\n  }\r\n\r\n  set value (str: string) {\r\n    this.masked.value = str;\r\n    this.updateControl();\r\n    this.alignCursor();\r\n  }\r\n\r\n  /** Unmasked value */\r\n  get unmaskedValue (): string {\r\n    return this._unmaskedValue;\r\n  }\r\n\r\n  set unmaskedValue (str: string) {\r\n    this.masked.unmaskedValue = str;\r\n    this.updateControl();\r\n    this.alignCursor();\r\n  }\r\n\r\n  /**\r\n    Starts listening to element events\r\n    @protected\r\n  */\r\n  _bindEvents () {\r\n    this.el.addEventListener('keydown', this._saveSelection);\r\n    this.el.addEventListener('input', this._onInput);\r\n    this.el.addEventListener('drop', this._onDrop);\r\n    this.el.addEventListener('click', this.alignCursorFriendly);\r\n    this.el.addEventListener('change', this._onChange);\r\n  }\r\n\r\n  /**\r\n    Stops listening to element events\r\n    @protected\r\n   */\r\n  _unbindEvents () {\r\n    this.el.removeEventListener('keydown', this._saveSelection);\r\n    this.el.removeEventListener('input', this._onInput);\r\n    this.el.removeEventListener('drop', this._onDrop);\r\n    this.el.removeEventListener('click', this.alignCursorFriendly);\r\n    this.el.removeEventListener('change', this._onChange);\r\n  }\r\n\r\n  /**\r\n    Fires custom event\r\n    @protected\r\n   */\r\n  _fireEvent (ev: string) {\r\n    const listeners = this._listeners[ev] || [];\r\n    listeners.forEach(l => l());\r\n  }\r\n\r\n  /**\r\n    Current selection start\r\n    @readonly\r\n  */\r\n  get selectionStart (): number {\r\n    return this._cursorChanging ?\r\n      this._changingCursorPos :\r\n\r\n      this.el.selectionStart;\r\n  }\r\n\r\n  /** Current cursor position */\r\n  get cursorPos (): number {\r\n    return this._cursorChanging ?\r\n      this._changingCursorPos :\r\n\r\n      this.el.selectionEnd;\r\n  }\r\n  set cursorPos (pos: number) {\r\n    if (this.el !== document.activeElement) return;\r\n\r\n    this.el.setSelectionRange(pos, pos);\r\n    this._saveSelection();\r\n  }\r\n\r\n  /**\r\n    Stores current selection\r\n    @protected\r\n  */\r\n  _saveSelection (/* ev */) {\r\n    if (this.value !== this.el.value) {\r\n      console.warn('Uncontrolled input change, refresh mask manually!'); // eslint-disable-line no-console\r\n    }\r\n    this._selection = {\r\n      start: this.selectionStart,\r\n      end: this.cursorPos\r\n    };\r\n  }\r\n\r\n  /** Syncronizes model value from view */\r\n  updateValue () {\r\n    this.masked.value = this.el.value;\r\n  }\r\n\r\n  /** Syncronizes view from model value, fires change events */\r\n  updateControl () {\r\n    const newUnmaskedValue = this.masked.unmaskedValue;\r\n    const newValue = this.masked.value;\r\n    const isChanged = (this.unmaskedValue !== newUnmaskedValue ||\r\n      this.value !== newValue);\r\n\r\n    this._unmaskedValue = newUnmaskedValue;\r\n    this._value = newValue;\r\n\r\n    if (this.el.value !== newValue) this.el.value = newValue;\r\n    if (isChanged) this._fireChangeEvents();\r\n  }\r\n\r\n  /** Updates options with deep equal check, recreates @{link Masked} model if mask type changes */\r\n  updateOptions (opts: {[string]: any}) {\r\n    opts = Object.assign({}, opts);  // clone\r\n    if (opts.mask === Date && this.masked instanceof MaskedDate) delete opts.mask;\r\n\r\n    // check if changed\r\n    if (objectIncludes(this.masked, opts)) return;\r\n\r\n    this.masked.updateOptions(opts);\r\n    this.updateControl();\r\n  }\r\n\r\n  /** Updates cursor */\r\n  updateCursor (cursorPos: number) {\r\n    if (cursorPos == null) return;\r\n    this.cursorPos = cursorPos;\r\n\r\n    // also queue change cursor for mobile browsers\r\n    this._delayUpdateCursor(cursorPos);\r\n  }\r\n\r\n  /**\r\n    Delays cursor update to support mobile browsers\r\n    @private\r\n  */\r\n  _delayUpdateCursor (cursorPos: number) {\r\n    this._abortUpdateCursor();\r\n    this._changingCursorPos = cursorPos;\r\n    this._cursorChanging = setTimeout(() => {\r\n      if (!this.el) return; // if was destroyed\r\n      this.cursorPos = this._changingCursorPos;\r\n      this._abortUpdateCursor();\r\n    }, 10);\r\n  }\r\n\r\n  /**\r\n    Fires custom events\r\n    @protected\r\n  */\r\n  _fireChangeEvents () {\r\n    this._fireEvent('accept');\r\n    if (this.masked.isComplete) this._fireEvent('complete');\r\n  }\r\n\r\n  /**\r\n    Aborts delayed cursor update\r\n    @private\r\n  */\r\n  _abortUpdateCursor () {\r\n    if (this._cursorChanging) {\r\n      clearTimeout(this._cursorChanging);\r\n      delete this._cursorChanging;\r\n    }\r\n  }\r\n\r\n  /** Aligns cursor to nearest available position */\r\n  alignCursor () {\r\n    this.cursorPos = this.masked.nearestInputPos(this.cursorPos, DIRECTION.LEFT);\r\n  }\r\n\r\n  /** Aligns cursor only if selection is empty */\r\n  alignCursorFriendly () {\r\n    if (this.selectionStart !== this.cursorPos) return;\r\n    this.alignCursor();\r\n  }\r\n\r\n  /** Adds listener on custom event */\r\n  on (ev: string, handler: Function) {\r\n    if (!this._listeners[ev]) this._listeners[ev] = [];\r\n    this._listeners[ev].push(handler);\r\n    return this;\r\n  }\r\n\r\n  /** Removes custom event listener */\r\n  off (ev: string, handler: Function) {\r\n    if (!this._listeners[ev]) return;\r\n    if (!handler) {\r\n      delete this._listeners[ev];\r\n      return;\r\n    }\r\n    const hIndex = this._listeners[ev].indexOf(handler);\r\n    if (hIndex >= 0) this._listeners[ev].splice(hIndex, 1);\r\n    return this;\r\n  }\r\n\r\n  /** Handles view input event */\r\n  _onInput () {\r\n    this._abortUpdateCursor();\r\n\r\n    const details = new ActionDetails(\r\n      // new state\r\n      this.el.value, this.cursorPos,\r\n      // old state\r\n      this.value, this._selection);\r\n\r\n    const offset = this.masked.splice(\r\n      details.startChangePos,\r\n      details.removed.length,\r\n      details.inserted,\r\n      details.removeDirection).offset;\r\n\r\n\r\n    const cursorPos = this.masked.nearestInputPos(details.startChangePos + offset);\r\n\r\n    this.updateControl();\r\n    this.updateCursor(cursorPos);\r\n  }\r\n\r\n  /** Handles view change event and commits model value */\r\n  _onChange () {\r\n    if (this.value !== this.el.value) {\r\n      this.updateValue();\r\n    }\r\n    this.masked.doCommit();\r\n    this.updateControl();\r\n  }\r\n\r\n  /** Handles view drop event, prevents by default */\r\n  _onDrop (ev: Event) {\r\n    ev.preventDefault();\r\n    ev.stopPropagation();\r\n  }\r\n\r\n  /** Unbind view events and removes element reference */\r\n  destroy () {\r\n    this._unbindEvents();\r\n    // $FlowFixMe why not do so?\r\n    this._listeners.length = 0;\r\n    delete this.el;\r\n  }\r\n}\r\n",
    "static": true,
    "longname": "C:/Projects/imaskjs/src/controls/input.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 49,
    "kind": "class",
    "name": "InputMask",
    "memberof": "src/controls/input.js",
    "static": true,
    "longname": "src/controls/input.js~InputMask",
    "access": "public",
    "export": true,
    "importPath": "imask/src/controls/input.js",
    "importStyle": "InputMask",
    "description": "Listens to element events and controls changes between element and {@link Masked}",
    "lineNumber": 26,
    "interface": false
  },
  {
    "__docId__": 50,
    "kind": "member",
    "name": "el",
    "memberof": "src/controls/input.js~InputMask",
    "static": false,
    "longname": "src/controls/input.js~InputMask#el",
    "access": "public",
    "description": "View element ",
    "lineNumber": 31,
    "unknown": [
      {
        "tagName": "@readonly",
        "tagValue": " "
      }
    ],
    "type": {
      "nullable": null,
      "types": [
        "UIElement"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 51,
    "kind": "member",
    "name": "masked",
    "memberof": "src/controls/input.js~InputMask",
    "static": false,
    "longname": "src/controls/input.js~InputMask#masked",
    "access": "public",
    "description": "Internal {@link Masked} model ",
    "lineNumber": 37,
    "unknown": [
      {
        "tagName": "@readonly",
        "tagValue": " "
      }
    ],
    "type": {
      "nullable": null,
      "types": [
        "Masked"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 54,
    "kind": "member",
    "name": "_listeners",
    "memberof": "src/controls/input.js~InputMask",
    "static": false,
    "longname": "src/controls/input.js~InputMask#_listeners",
    "access": "private",
    "description": "",
    "lineNumber": 41,
    "type": {
      "nullable": null,
      "types": [
        "object"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 55,
    "kind": "member",
    "name": "_value",
    "memberof": "src/controls/input.js~InputMask",
    "static": false,
    "longname": "src/controls/input.js~InputMask#_value",
    "access": "private",
    "description": "",
    "lineNumber": 42,
    "type": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 56,
    "kind": "member",
    "name": "_changingCursorPos",
    "memberof": "src/controls/input.js~InputMask",
    "static": false,
    "longname": "src/controls/input.js~InputMask#_changingCursorPos",
    "access": "private",
    "description": "",
    "lineNumber": 43,
    "type": {
      "nullable": null,
      "types": [
        "number"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 57,
    "kind": "member",
    "name": "_unmaskedValue",
    "memberof": "src/controls/input.js~InputMask",
    "static": false,
    "longname": "src/controls/input.js~InputMask#_unmaskedValue",
    "access": "private",
    "description": "",
    "lineNumber": 44,
    "type": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 59,
    "kind": "member",
    "name": "_selection",
    "memberof": "src/controls/input.js~InputMask",
    "static": false,
    "longname": "src/controls/input.js~InputMask#_selection",
    "access": "private",
    "description": "",
    "lineNumber": 46,
    "type": {
      "nullable": null,
      "types": [
        "Selection"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 63,
    "kind": "member",
    "name": "_cursorChanging",
    "memberof": "src/controls/input.js~InputMask",
    "static": false,
    "longname": "src/controls/input.js~InputMask#_cursorChanging",
    "access": "private",
    "description": "",
    "lineNumber": 50,
    "type": {
      "nullable": null,
      "types": [
        "number"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 64,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "src/controls/input.js~InputMask",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/controls/input.js~InputMask#constructor",
    "access": "public",
    "description": "",
    "lineNumber": 56,
    "params": [
      {
        "nullable": null,
        "types": [
          "UIElement"
        ],
        "spread": false,
        "optional": false,
        "name": "el",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "opts",
        "description": ""
      }
    ]
  },
  {
    "__docId__": 76,
    "kind": "get",
    "name": "mask",
    "memberof": "src/controls/input.js~InputMask",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/controls/input.js~InputMask#mask",
    "access": "public",
    "description": "Read or update mask ",
    "lineNumber": 79,
    "type": {
      "nullable": null,
      "types": [
        "Mask"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 77,
    "kind": "set",
    "name": "mask",
    "memberof": "src/controls/input.js~InputMask",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/controls/input.js~InputMask#mask",
    "access": "public",
    "description": "",
    "lineNumber": 82,
    "type": {
      "nullable": null,
      "types": [
        "Mask"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 79,
    "kind": "get",
    "name": "value",
    "memberof": "src/controls/input.js~InputMask",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/controls/input.js~InputMask#value",
    "access": "public",
    "description": "Raw value ",
    "lineNumber": 96,
    "type": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 80,
    "kind": "set",
    "name": "value",
    "memberof": "src/controls/input.js~InputMask",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/controls/input.js~InputMask#value",
    "access": "public",
    "description": "",
    "lineNumber": 100,
    "type": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 81,
    "kind": "get",
    "name": "unmaskedValue",
    "memberof": "src/controls/input.js~InputMask",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/controls/input.js~InputMask#unmaskedValue",
    "access": "public",
    "description": "Unmasked value ",
    "lineNumber": 107,
    "type": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 82,
    "kind": "set",
    "name": "unmaskedValue",
    "memberof": "src/controls/input.js~InputMask",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/controls/input.js~InputMask#unmaskedValue",
    "access": "public",
    "description": "",
    "lineNumber": 111,
    "type": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 83,
    "kind": "method",
    "name": "_bindEvents",
    "memberof": "src/controls/input.js~InputMask",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/controls/input.js~InputMask#_bindEvents",
    "access": "protected",
    "description": "Starts listening to element events ",
    "lineNumber": 121,
    "params": [],
    "return": null
  },
  {
    "__docId__": 84,
    "kind": "method",
    "name": "_unbindEvents",
    "memberof": "src/controls/input.js~InputMask",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/controls/input.js~InputMask#_unbindEvents",
    "access": "protected",
    "description": "Stops listening to element events ",
    "lineNumber": 133,
    "params": [],
    "return": null
  },
  {
    "__docId__": 85,
    "kind": "method",
    "name": "_fireEvent",
    "memberof": "src/controls/input.js~InputMask",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/controls/input.js~InputMask#_fireEvent",
    "access": "protected",
    "description": "Fires custom event ",
    "lineNumber": 145,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "ev",
        "description": ""
      }
    ],
    "return": null
  },
  {
    "__docId__": 86,
    "kind": "get",
    "name": "selectionStart",
    "memberof": "src/controls/input.js~InputMask",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/controls/input.js~InputMask#selectionStart",
    "access": "public",
    "description": "Current selection start ",
    "lineNumber": 154,
    "unknown": [
      {
        "tagName": "@readonly",
        "tagValue": " "
      }
    ],
    "type": {
      "nullable": null,
      "types": [
        "number"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 87,
    "kind": "get",
    "name": "cursorPos",
    "memberof": "src/controls/input.js~InputMask",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/controls/input.js~InputMask#cursorPos",
    "access": "public",
    "description": "Current cursor position ",
    "lineNumber": 162,
    "type": {
      "nullable": null,
      "types": [
        "number"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 88,
    "kind": "set",
    "name": "cursorPos",
    "memberof": "src/controls/input.js~InputMask",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/controls/input.js~InputMask#cursorPos",
    "access": "public",
    "description": "",
    "lineNumber": 168,
    "type": {
      "nullable": null,
      "types": [
        "number"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 89,
    "kind": "method",
    "name": "_saveSelection",
    "memberof": "src/controls/input.js~InputMask",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/controls/input.js~InputMask#_saveSelection",
    "access": "protected",
    "description": "Stores current selection ",
    "lineNumber": 179,
    "params": [],
    "return": null
  },
  {
    "__docId__": 91,
    "kind": "method",
    "name": "updateValue",
    "memberof": "src/controls/input.js~InputMask",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/controls/input.js~InputMask#updateValue",
    "access": "public",
    "description": "Syncronizes model value from view ",
    "lineNumber": 190,
    "params": [],
    "return": null
  },
  {
    "__docId__": 92,
    "kind": "method",
    "name": "updateControl",
    "memberof": "src/controls/input.js~InputMask",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/controls/input.js~InputMask#updateControl",
    "access": "public",
    "description": "Syncronizes view from model value, fires change events ",
    "lineNumber": 195,
    "params": [],
    "return": null
  },
  {
    "__docId__": 95,
    "kind": "method",
    "name": "updateOptions",
    "memberof": "src/controls/input.js~InputMask",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/controls/input.js~InputMask#updateOptions",
    "access": "public",
    "description": "Updates options with deep equal check, recreates @{link Masked} model if mask type changes ",
    "lineNumber": 209,
    "params": [
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "opts",
        "description": ""
      }
    ],
    "return": null
  },
  {
    "__docId__": 96,
    "kind": "method",
    "name": "updateCursor",
    "memberof": "src/controls/input.js~InputMask",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/controls/input.js~InputMask#updateCursor",
    "access": "public",
    "description": "Updates cursor ",
    "lineNumber": 221,
    "params": [
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "cursorPos",
        "description": ""
      }
    ],
    "return": null
  },
  {
    "__docId__": 98,
    "kind": "method",
    "name": "_delayUpdateCursor",
    "memberof": "src/controls/input.js~InputMask",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/controls/input.js~InputMask#_delayUpdateCursor",
    "access": "private",
    "description": "Delays cursor update to support mobile browsers ",
    "lineNumber": 233,
    "params": [
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "cursorPos",
        "description": ""
      }
    ],
    "return": null
  },
  {
    "__docId__": 102,
    "kind": "method",
    "name": "_fireChangeEvents",
    "memberof": "src/controls/input.js~InputMask",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/controls/input.js~InputMask#_fireChangeEvents",
    "access": "protected",
    "description": "Fires custom events ",
    "lineNumber": 247,
    "params": [],
    "return": null
  },
  {
    "__docId__": 103,
    "kind": "method",
    "name": "_abortUpdateCursor",
    "memberof": "src/controls/input.js~InputMask",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/controls/input.js~InputMask#_abortUpdateCursor",
    "access": "private",
    "description": "Aborts delayed cursor update ",
    "lineNumber": 256,
    "params": [],
    "return": null
  },
  {
    "__docId__": 104,
    "kind": "method",
    "name": "alignCursor",
    "memberof": "src/controls/input.js~InputMask",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/controls/input.js~InputMask#alignCursor",
    "access": "public",
    "description": "Aligns cursor to nearest available position ",
    "lineNumber": 264,
    "params": [],
    "return": null
  },
  {
    "__docId__": 106,
    "kind": "method",
    "name": "alignCursorFriendly",
    "memberof": "src/controls/input.js~InputMask",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/controls/input.js~InputMask#alignCursorFriendly",
    "access": "public",
    "description": "Aligns cursor only if selection is empty ",
    "lineNumber": 269,
    "params": [],
    "return": null
  },
  {
    "__docId__": 107,
    "kind": "method",
    "name": "on",
    "memberof": "src/controls/input.js~InputMask",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/controls/input.js~InputMask#on",
    "access": "public",
    "description": "Adds listener on custom event ",
    "lineNumber": 275,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "ev",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "Function"
        ],
        "spread": false,
        "optional": false,
        "name": "handler",
        "description": ""
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 108,
    "kind": "method",
    "name": "off",
    "memberof": "src/controls/input.js~InputMask",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/controls/input.js~InputMask#off",
    "access": "public",
    "description": "Removes custom event listener ",
    "lineNumber": 282,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "ev",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "Function"
        ],
        "spread": false,
        "optional": false,
        "name": "handler",
        "description": ""
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 109,
    "kind": "method",
    "name": "_onInput",
    "memberof": "src/controls/input.js~InputMask",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/controls/input.js~InputMask#_onInput",
    "access": "private",
    "description": "Handles view input event ",
    "lineNumber": 294,
    "params": [],
    "return": null
  },
  {
    "__docId__": 110,
    "kind": "method",
    "name": "_onChange",
    "memberof": "src/controls/input.js~InputMask",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/controls/input.js~InputMask#_onChange",
    "access": "private",
    "description": "Handles view change event and commits model value ",
    "lineNumber": 317,
    "params": [],
    "return": null
  },
  {
    "__docId__": 111,
    "kind": "method",
    "name": "_onDrop",
    "memberof": "src/controls/input.js~InputMask",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/controls/input.js~InputMask#_onDrop",
    "access": "private",
    "description": "Handles view drop event, prevents by default ",
    "lineNumber": 326,
    "params": [
      {
        "nullable": null,
        "types": [
          "Event"
        ],
        "spread": false,
        "optional": false,
        "name": "ev",
        "description": ""
      }
    ],
    "return": null
  },
  {
    "__docId__": 112,
    "kind": "method",
    "name": "destroy",
    "memberof": "src/controls/input.js~InputMask",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/controls/input.js~InputMask#destroy",
    "access": "public",
    "description": "Unbind view events and removes element reference ",
    "lineNumber": 332,
    "params": [],
    "return": null
  },
  {
    "__docId__": 113,
    "kind": "file",
    "name": "src/core/action-details.js",
    "content": "// @flow\r\nimport {type Direction, type Selection, DIRECTION} from './utils.js';\r\n\r\n\r\n/** Provides details of changing input */\r\nexport default\r\nclass ActionDetails {\r\n  /** Current input value */\r\n  value: string;\r\n  /** Current cursor position */\r\n  cursorPos: number;\r\n  /** Old input value */\r\n  oldValue: string;\r\n  /** Old selection */\r\n  oldSelection: Selection;\r\n\r\n  /**\r\n    @param {string} value\r\n    @param {number} cursorPos\r\n    @param {string} oldValue\r\n    @param {Selection} oldSelection\r\n  */\r\n  constructor (\r\n    value: string,\r\n    cursorPos: number,\r\n    oldValue: string,\r\n    oldSelection: Selection\r\n  ) {\r\n    this.value = value;\r\n    this.cursorPos = cursorPos;\r\n    this.oldValue = oldValue;\r\n    this.oldSelection = oldSelection;\r\n\r\n    // double check if left part was changed (autofilling, other non-standard input triggers)\r\n    while (this.value.slice(0, this.startChangePos) !== this.oldValue.slice(0, this.startChangePos)) {\r\n      --this.oldSelection.start;\r\n    }\r\n  }\r\n\r\n  /**\r\n    Start changing position\r\n    @readonly\r\n  */\r\n  get startChangePos (): number {\r\n    return Math.min(this.cursorPos, this.oldSelection.start);\r\n  }\r\n\r\n  /**\r\n    Inserted symbols count\r\n    @readonly\r\n  */\r\n  get insertedCount (): number {\r\n    return this.cursorPos - this.startChangePos;\r\n  }\r\n\r\n  /**\r\n    Inserted symbols\r\n    @readonly\r\n  */\r\n  get inserted (): string {\r\n    return this.value.substr(this.startChangePos, this.insertedCount);\r\n  }\r\n\r\n  /**\r\n    Removed symbols count\r\n    @readonly\r\n  */\r\n  get removedCount (): number {\r\n    // Math.max for opposite operation\r\n    return Math.max((this.oldSelection.end - this.startChangePos) ||\r\n      // for Delete\r\n      this.oldValue.length - this.value.length, 0);\r\n  }\r\n\r\n  /**\r\n    Removed symbols\r\n    @readonly\r\n  */\r\n  get removed (): string {\r\n    return this.oldValue.substr(this.startChangePos, this.removedCount);\r\n  }\r\n\r\n  /**\r\n    Unchanged head symbols\r\n    @readonly\r\n  */\r\n  get head (): string {\r\n    return this.value.substring(0, this.startChangePos);\r\n  }\r\n\r\n  /**\r\n    Unchanged tail symbols\r\n    @readonly\r\n  */\r\n  get tail (): string {\r\n    return this.value.substring(this.startChangePos + this.insertedCount);\r\n  }\r\n\r\n  /**\r\n    Remove direction\r\n    @readonly\r\n  */\r\n  get removeDirection (): Direction {\r\n    if (!this.removedCount || this.insertedCount) return DIRECTION.NONE;\r\n\r\n    // align right if delete at right or if range removed (event with backspace)\r\n    return (this.oldSelection.end === this.cursorPos || this.oldSelection.start === this.cursorPos) ?\r\n      DIRECTION.RIGHT :\r\n      DIRECTION.LEFT;\r\n  }\r\n}\r\n",
    "static": true,
    "longname": "C:/Projects/imaskjs/src/core/action-details.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 114,
    "kind": "class",
    "name": "ActionDetails",
    "memberof": "src/core/action-details.js",
    "static": true,
    "longname": "src/core/action-details.js~ActionDetails",
    "access": "public",
    "export": true,
    "importPath": "imask/src/core/action-details.js",
    "importStyle": "ActionDetails",
    "description": "Provides details of changing input",
    "lineNumber": 7,
    "interface": false
  },
  {
    "__docId__": 115,
    "kind": "member",
    "name": "value",
    "memberof": "src/core/action-details.js~ActionDetails",
    "static": false,
    "longname": "src/core/action-details.js~ActionDetails#value",
    "access": "public",
    "description": "Current input value ",
    "lineNumber": 9,
    "type": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 116,
    "kind": "member",
    "name": "cursorPos",
    "memberof": "src/core/action-details.js~ActionDetails",
    "static": false,
    "longname": "src/core/action-details.js~ActionDetails#cursorPos",
    "access": "public",
    "description": "Current cursor position ",
    "lineNumber": 11,
    "type": {
      "nullable": null,
      "types": [
        "number"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 117,
    "kind": "member",
    "name": "oldValue",
    "memberof": "src/core/action-details.js~ActionDetails",
    "static": false,
    "longname": "src/core/action-details.js~ActionDetails#oldValue",
    "access": "public",
    "description": "Old input value ",
    "lineNumber": 13,
    "type": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 118,
    "kind": "member",
    "name": "oldSelection",
    "memberof": "src/core/action-details.js~ActionDetails",
    "static": false,
    "longname": "src/core/action-details.js~ActionDetails#oldSelection",
    "access": "public",
    "description": "Old selection ",
    "lineNumber": 15,
    "type": {
      "nullable": null,
      "types": [
        "Selection"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 119,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "src/core/action-details.js~ActionDetails",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/core/action-details.js~ActionDetails#constructor",
    "access": "public",
    "description": "",
    "lineNumber": 23,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "value",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "cursorPos",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "oldValue",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "Selection"
        ],
        "spread": false,
        "optional": false,
        "name": "oldSelection",
        "description": ""
      }
    ]
  },
  {
    "__docId__": 124,
    "kind": "get",
    "name": "startChangePos",
    "memberof": "src/core/action-details.js~ActionDetails",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/core/action-details.js~ActionDetails#startChangePos",
    "access": "public",
    "description": "Start changing position ",
    "lineNumber": 44,
    "unknown": [
      {
        "tagName": "@readonly",
        "tagValue": " "
      }
    ],
    "type": {
      "nullable": null,
      "types": [
        "number"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 125,
    "kind": "get",
    "name": "insertedCount",
    "memberof": "src/core/action-details.js~ActionDetails",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/core/action-details.js~ActionDetails#insertedCount",
    "access": "public",
    "description": "Inserted symbols count ",
    "lineNumber": 52,
    "unknown": [
      {
        "tagName": "@readonly",
        "tagValue": " "
      }
    ],
    "type": {
      "nullable": null,
      "types": [
        "number"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 126,
    "kind": "get",
    "name": "inserted",
    "memberof": "src/core/action-details.js~ActionDetails",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/core/action-details.js~ActionDetails#inserted",
    "access": "public",
    "description": "Inserted symbols ",
    "lineNumber": 60,
    "unknown": [
      {
        "tagName": "@readonly",
        "tagValue": " "
      }
    ],
    "type": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 127,
    "kind": "get",
    "name": "removedCount",
    "memberof": "src/core/action-details.js~ActionDetails",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/core/action-details.js~ActionDetails#removedCount",
    "access": "public",
    "description": "Removed symbols count ",
    "lineNumber": 68,
    "unknown": [
      {
        "tagName": "@readonly",
        "tagValue": " "
      }
    ],
    "type": {
      "nullable": null,
      "types": [
        "number"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 128,
    "kind": "get",
    "name": "removed",
    "memberof": "src/core/action-details.js~ActionDetails",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/core/action-details.js~ActionDetails#removed",
    "access": "public",
    "description": "Removed symbols ",
    "lineNumber": 79,
    "unknown": [
      {
        "tagName": "@readonly",
        "tagValue": " "
      }
    ],
    "type": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 129,
    "kind": "get",
    "name": "head",
    "memberof": "src/core/action-details.js~ActionDetails",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/core/action-details.js~ActionDetails#head",
    "access": "public",
    "description": "Unchanged head symbols ",
    "lineNumber": 87,
    "unknown": [
      {
        "tagName": "@readonly",
        "tagValue": " "
      }
    ],
    "type": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 130,
    "kind": "get",
    "name": "tail",
    "memberof": "src/core/action-details.js~ActionDetails",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/core/action-details.js~ActionDetails#tail",
    "access": "public",
    "description": "Unchanged tail symbols ",
    "lineNumber": 95,
    "unknown": [
      {
        "tagName": "@readonly",
        "tagValue": " "
      }
    ],
    "type": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 131,
    "kind": "get",
    "name": "removeDirection",
    "memberof": "src/core/action-details.js~ActionDetails",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/core/action-details.js~ActionDetails#removeDirection",
    "access": "public",
    "description": "Remove direction ",
    "lineNumber": 103,
    "unknown": [
      {
        "tagName": "@readonly",
        "tagValue": " "
      }
    ],
    "type": {
      "nullable": null,
      "types": [
        "Direction"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 132,
    "kind": "file",
    "name": "src/core/change-details.js",
    "content": "// @flow\r\n\r\n\r\n/** Provides details of changing model value */\r\nexport default\r\nclass ChangeDetails {\r\n  /** Inserted symbols */\r\n  inserted: string;\r\n  /** Is overflowed */\r\n  overflow: boolean;\r\n  /** Removed symbols count */\r\n  removedCount: number;\r\n  /** Additional offset if any changes occurred before current position */\r\n  shift: number;\r\n  _rawInserted: string;\r\n\r\n  /**\r\n    @param {?{inserted: ?string, overflow: ?boolean, removeCount: ?number, shift: ?number}} details\r\n  */\r\n  constructor (details?: {\r\n    inserted?: $PropertyType<ChangeDetails, 'inserted'>,\r\n    overflow?: $PropertyType<ChangeDetails, 'overflow'>,\r\n    removedCount?: $PropertyType<ChangeDetails, 'removedCount'>,\r\n    shift?: $PropertyType<ChangeDetails, 'shift'>,\r\n  }) {\r\n    Object.assign(this, {\r\n      inserted: '',\r\n      overflow: false,\r\n      removedCount: 0,\r\n      shift: 0,\r\n    }, details);\r\n  }\r\n\r\n  /**\r\n    Aggregate changes\r\n    @returns {ChangeDetails} `this`\r\n  */\r\n  aggregate (details: ChangeDetails): ChangeDetails {\r\n    this.inserted += details.inserted;\r\n    this.removedCount += details.removedCount;\r\n    this.shift += details.shift;\r\n    this.overflow = this.overflow || details.overflow;\r\n    if (details.rawInserted) this.rawInserted += details.rawInserted;\r\n    return this;\r\n  }\r\n\r\n  /** Total offset considering all changes */\r\n  get offset (): number {\r\n    return this.shift + this.inserted.length - this.removedCount;\r\n  }\r\n\r\n  /** Raw inserted is used by dynamic mask */\r\n  get rawInserted (): string {\r\n    return this._rawInserted != null ?\r\n      this._rawInserted :\r\n      this.inserted;\r\n  }\r\n\r\n  set rawInserted (rawInserted: string): void {\r\n    this._rawInserted = rawInserted;\r\n  }\r\n}\r\n",
    "static": true,
    "longname": "C:/Projects/imaskjs/src/core/change-details.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 133,
    "kind": "class",
    "name": "ChangeDetails",
    "memberof": "src/core/change-details.js",
    "static": true,
    "longname": "src/core/change-details.js~ChangeDetails",
    "access": "public",
    "export": true,
    "importPath": "imask/src/core/change-details.js",
    "importStyle": "ChangeDetails",
    "description": "Provides details of changing model value",
    "lineNumber": 6,
    "interface": false
  },
  {
    "__docId__": 134,
    "kind": "member",
    "name": "inserted",
    "memberof": "src/core/change-details.js~ChangeDetails",
    "static": false,
    "longname": "src/core/change-details.js~ChangeDetails#inserted",
    "access": "public",
    "description": "Inserted symbols ",
    "lineNumber": 8,
    "type": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 135,
    "kind": "member",
    "name": "overflow",
    "memberof": "src/core/change-details.js~ChangeDetails",
    "static": false,
    "longname": "src/core/change-details.js~ChangeDetails#overflow",
    "access": "public",
    "description": "Is overflowed ",
    "lineNumber": 10,
    "type": {
      "nullable": null,
      "types": [
        "boolean"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 136,
    "kind": "member",
    "name": "removedCount",
    "memberof": "src/core/change-details.js~ChangeDetails",
    "static": false,
    "longname": "src/core/change-details.js~ChangeDetails#removedCount",
    "access": "public",
    "description": "Removed symbols count ",
    "lineNumber": 12,
    "type": {
      "nullable": null,
      "types": [
        "number"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 137,
    "kind": "member",
    "name": "shift",
    "memberof": "src/core/change-details.js~ChangeDetails",
    "static": false,
    "longname": "src/core/change-details.js~ChangeDetails#shift",
    "access": "public",
    "description": "Additional offset if any changes occurred before current position ",
    "lineNumber": 14,
    "type": {
      "nullable": null,
      "types": [
        "number"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 138,
    "kind": "member",
    "name": "_rawInserted",
    "memberof": "src/core/change-details.js~ChangeDetails",
    "static": false,
    "longname": "src/core/change-details.js~ChangeDetails#_rawInserted",
    "access": "private",
    "description": "",
    "lineNumber": 15,
    "type": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 139,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "src/core/change-details.js~ChangeDetails",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/core/change-details.js~ChangeDetails#constructor",
    "access": "public",
    "description": "",
    "lineNumber": 20,
    "params": [
      {
        "nullable": true,
        "types": [
          "{inserted: ?string, overflow: ?boolean, removeCount: ?number, shift: ?number}"
        ],
        "spread": false,
        "optional": false,
        "name": "details",
        "description": ""
      }
    ]
  },
  {
    "__docId__": 140,
    "kind": "method",
    "name": "aggregate",
    "memberof": "src/core/change-details.js~ChangeDetails",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/core/change-details.js~ChangeDetails#aggregate",
    "access": "public",
    "description": "Aggregate changes  ",
    "lineNumber": 38,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{ChangeDetails} `this`  "
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "ChangeDetails"
        ],
        "spread": false,
        "optional": false,
        "name": "details",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "ChangeDetails"
      ],
      "spread": false,
      "description": "`this`"
    }
  },
  {
    "__docId__": 146,
    "kind": "get",
    "name": "offset",
    "memberof": "src/core/change-details.js~ChangeDetails",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/core/change-details.js~ChangeDetails#offset",
    "access": "public",
    "description": "Total offset considering all changes ",
    "lineNumber": 48,
    "type": {
      "nullable": null,
      "types": [
        "number"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 147,
    "kind": "get",
    "name": "rawInserted",
    "memberof": "src/core/change-details.js~ChangeDetails",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/core/change-details.js~ChangeDetails#rawInserted",
    "access": "public",
    "description": "Raw inserted is used by dynamic mask ",
    "lineNumber": 53,
    "type": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 148,
    "kind": "set",
    "name": "rawInserted",
    "memberof": "src/core/change-details.js~ChangeDetails",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/core/change-details.js~ChangeDetails#rawInserted",
    "access": "public",
    "description": "",
    "lineNumber": 59,
    "type": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 150,
    "kind": "file",
    "name": "src/core/utils.js",
    "content": "// @flow\r\n\r\n\r\n/** Checks if value is string */\r\nexport\r\nfunction isString (str: mixed): boolean %checks {\r\n  return typeof str === 'string' || str instanceof String;\r\n}\r\n\r\n/** Conforms string with fallback */\r\nexport\r\nfunction conform (res: ?string | boolean, str: string, fallback: string=''): string {\r\n  return isString(res) ?\r\n    res :\r\n    res ?\r\n      str :\r\n      fallback;\r\n}\r\n\r\n/**\r\n  Direction\r\n  @prop {number} NONE\r\n  @prop {number} LEFT\r\n  @prop {number} RIGHT\r\n*/\r\nexport\r\nconst DIRECTION = {\r\n  NONE: 0,\r\n  LEFT: -1,\r\n  RIGHT: 1\r\n}\r\n/**\r\n  Direction\r\n  @enum {number}\r\n*/\r\nexport\r\ntype Direction = $Values<typeof DIRECTION>;\r\n\r\n/** Returns next char position in direction */\r\nexport\r\nfunction indexInDirection (pos: number, direction: Direction): number {\r\n  if (direction === DIRECTION.LEFT) --pos;\r\n  return pos;\r\n}\r\n\r\n/** Escapes regular expression control chars */\r\nexport\r\nfunction escapeRegExp (str: string): string {\r\n  return str.replace(/([.*+?^=!:${}()|[\\]/\\\\])/g, '\\\\$1');\r\n}\r\n\r\n\r\n// cloned from https://github.com/epoberezkin/fast-deep-equal with small changes\r\nexport\r\nfunction objectIncludes (b: any, a: any): boolean {\r\n  if (a === b) return true;\r\n\r\n  var arrA = Array.isArray(a)\r\n    , arrB = Array.isArray(b)\r\n    , i;\r\n\r\n  if (arrA && arrB) {\r\n    if (a.length != b.length) return false;\r\n    for (i = 0; i < a.length; i++)\r\n      if (!objectIncludes(a[i], b[i])) return false;\r\n    return true;\r\n  }\r\n\r\n  if (arrA != arrB) return false;\r\n\r\n  if (a && b && typeof a === 'object' && typeof b === 'object') {\r\n    var keys = Object.keys(a);\r\n    // if (keys.length !== Object.keys(b).length) return false;\r\n\r\n    var dateA = a instanceof Date\r\n      , dateB = b instanceof Date;\r\n    if (dateA && dateB) return a.getTime() == b.getTime();\r\n    if (dateA != dateB) return false;\r\n\r\n    var regexpA = a instanceof RegExp\r\n      , regexpB = b instanceof RegExp;\r\n    if (regexpA && regexpB) return a.toString() == b.toString();\r\n    if (regexpA != regexpB) return false;\r\n\r\n    for (i = 0; i < keys.length; i++)\r\n      if (!Object.prototype.hasOwnProperty.call(b, keys[i])) return false;\r\n\r\n    for (i = 0; i < keys.length; i++)\r\n      if(!objectIncludes(a[keys[i]], b[keys[i]])) return false;\r\n\r\n    return true;\r\n  }\r\n\r\n  return false;\r\n}\r\n\r\n/* eslint-disable no-undef */\r\nexport\r\nconst g: any = typeof window !== 'undefined' && window ||\r\n  typeof global !== 'undefined' && global.global === global && global ||\r\n  typeof self !== 'undefined' && self.self === self && self ||\r\n  {};\r\n/* eslint-enable no-undef */\r\n\r\n/** Selection range */\r\nexport\r\ntype Selection = {\r\n  start: number;\r\n  end: number;\r\n};\r\n",
    "static": true,
    "longname": "C:/Projects/imaskjs/src/core/utils.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 151,
    "kind": "function",
    "name": "isString",
    "memberof": "src/core/utils.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/core/utils.js~isString",
    "access": "public",
    "export": true,
    "importPath": "imask/src/core/utils.js",
    "importStyle": "{isString}",
    "description": "Checks if value is string",
    "lineNumber": 6,
    "params": [
      {
        "name": "str",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 152,
    "kind": "function",
    "name": "conform",
    "memberof": "src/core/utils.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/core/utils.js~conform",
    "access": "public",
    "export": true,
    "importPath": "imask/src/core/utils.js",
    "importStyle": "{conform}",
    "description": "Conforms string with fallback",
    "lineNumber": 12,
    "params": [
      {
        "name": "res",
        "types": [
          "*"
        ]
      },
      {
        "name": "str",
        "types": [
          "*"
        ]
      },
      {
        "name": "fallback",
        "optional": true,
        "types": [
          "string"
        ],
        "defaultRaw": "",
        "defaultValue": ""
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 153,
    "kind": "variable",
    "name": "DIRECTION",
    "memberof": "src/core/utils.js",
    "static": true,
    "longname": "src/core/utils.js~DIRECTION",
    "access": "public",
    "export": true,
    "importPath": "imask/src/core/utils.js",
    "importStyle": "{DIRECTION}",
    "description": "Direction",
    "lineNumber": 27,
    "unknown": [
      {
        "tagName": "@prop",
        "tagValue": "{number} NONE"
      },
      {
        "tagName": "@prop",
        "tagValue": "{number} LEFT"
      },
      {
        "tagName": "@prop",
        "tagValue": "{number} RIGHT"
      }
    ],
    "type": {
      "types": [
        "{\"NONE\": *, \"LEFT\": *, \"RIGHT\": number}"
      ]
    }
  },
  {
    "__docId__": 154,
    "kind": "function",
    "name": "indexInDirection",
    "memberof": "src/core/utils.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/core/utils.js~indexInDirection",
    "access": "public",
    "export": true,
    "importPath": "imask/src/core/utils.js",
    "importStyle": "{indexInDirection}",
    "description": "Returns next char position in direction",
    "lineNumber": 41,
    "params": [
      {
        "name": "pos",
        "types": [
          "*"
        ]
      },
      {
        "name": "direction",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 155,
    "kind": "function",
    "name": "escapeRegExp",
    "memberof": "src/core/utils.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/core/utils.js~escapeRegExp",
    "access": "public",
    "export": true,
    "importPath": "imask/src/core/utils.js",
    "importStyle": "{escapeRegExp}",
    "description": "Escapes regular expression control chars",
    "lineNumber": 48,
    "params": [
      {
        "name": "str",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 156,
    "kind": "function",
    "name": "objectIncludes",
    "memberof": "src/core/utils.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/core/utils.js~objectIncludes",
    "access": "public",
    "export": true,
    "importPath": "imask/src/core/utils.js",
    "importStyle": "{objectIncludes}",
    "description": " ",
    "lineNumber": 55,
    "params": [
      {
        "nullable": null,
        "types": [
          "any"
        ],
        "spread": false,
        "optional": false,
        "name": "b",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "any"
        ],
        "spread": false,
        "optional": false,
        "name": "a",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "boolean"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 157,
    "kind": "variable",
    "name": "g",
    "memberof": "src/core/utils.js",
    "static": true,
    "longname": "src/core/utils.js~g",
    "access": "public",
    "export": true,
    "importPath": "imask/src/core/utils.js",
    "importStyle": "{g}",
    "description": null,
    "lineNumber": 99,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 158,
    "kind": "file",
    "name": "src/imask.js",
    "content": "import {g} from './core/utils.js';\r\n\r\nimport InputMask from './controls/input.js';\r\n\r\nimport Masked from './masked/base.js';\r\nimport MaskedPattern from './masked/pattern.js';\r\nimport MaskedNumber from './masked/number.js';\r\nimport MaskedDate from './masked/date.js';\r\nimport MaskedRegExp from './masked/regexp.js';\r\nimport MaskedFunction from './masked/function.js';\r\nimport MaskedDynamic from './masked/dynamic.js';\r\nimport createMask from './masked/factory.js';\r\n\r\n\r\n/**\r\n * Applies mask on element.\r\n * @constructor\r\n * @param {HTMLInput|UIElement} el - Element to apply mask\r\n * @param {Object} opts - Custom mask options\r\n * @return {InputMask}\r\n */\r\nexport default\r\nfunction IMask (el, opts={}) {\r\n\t// currently available only for input-like elements\r\n  return new InputMask(el, opts);\r\n}\r\n\r\n/** InputMask */\r\nIMask.InputMask = InputMask;\r\n\r\n/** InputMask */\r\nIMask.Masked = Masked;\r\n/** MaskedPattern */\r\nIMask.MaskedPattern = MaskedPattern;\r\n/** MaskedNumber */\r\nIMask.MaskedNumber = MaskedNumber;\r\n/** MaskedDate */\r\nIMask.MaskedDate = MaskedDate;\r\n/** MaskedRegExp */\r\nIMask.MaskedRegExp = MaskedRegExp;\r\n/** MaskedFunction */\r\nIMask.MaskedFunction = MaskedFunction;\r\n/** MaskedDynamic */\r\nIMask.MaskedDynamic = MaskedDynamic;\r\n/** createMask */\r\nIMask.createMask = createMask;\r\n\r\ng.IMask = IMask;\r\n",
    "static": true,
    "longname": "C:/Projects/imaskjs/src/imask.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 159,
    "kind": "function",
    "name": "IMask",
    "memberof": "src/imask.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/imask.js~IMask",
    "access": "public",
    "export": true,
    "importPath": "imask/src/imask.js",
    "importStyle": "IMask",
    "description": "Applies mask on element.",
    "lineNumber": 23,
    "unknown": [
      {
        "tagName": "@constructor",
        "tagValue": ""
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "HTMLInput",
          "UIElement"
        ],
        "spread": false,
        "optional": false,
        "name": "el",
        "description": "Element to apply mask"
      },
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "opts",
        "description": "Custom mask options"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "InputMask"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 160,
    "kind": "file",
    "name": "src/imask.shim.js",
    "content": "import 'core-js/fn/object/keys';\r\nimport 'core-js/fn/string/repeat';\r\nimport 'core-js/fn/string/pad-start';\r\nimport 'core-js/fn/string/pad-end';\r\n\r\nimport IMask from './imask';\r\nexport default IMask;\r\n",
    "static": true,
    "longname": "C:/Projects/imaskjs/src/imask.shim.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 161,
    "kind": "file",
    "name": "src/masked/base.js",
    "content": "// @flow\r\nimport ChangeDetails from '../core/change-details.js';\r\nimport {type Direction} from '../core/utils.js';\r\n\r\n\r\n/** Supported mask type */\r\nexport\r\ntype Mask = string | String | RegExp | Class<Number> | Class<Date> | Array<any> | Function | Masked<*> | Class<Masked<*>>;\r\n\r\n/** Append flags */\r\nexport\r\ntype AppendFlags = {\r\n  input?: boolean,\r\n  tail?: boolean,\r\n  raw?: boolean\r\n};\r\n\r\n/** Extract flags */\r\nexport\r\ntype ExtractFlags = {\r\n  raw?: boolean\r\n};\r\n\r\nexport\r\ntype MaskedOptions<MaskType> = {\r\n  mask: $PropertyType<Masked<MaskType>, 'mask'>,\r\n  prepare?: $PropertyType<Masked<MaskType>, 'prepare'>,\r\n  validate?: $PropertyType<Masked<MaskType>, 'validate'>,\r\n  commit?: $PropertyType<Masked<MaskType>, 'commit'>,\r\n};\r\n\r\n\r\n/** Provides common masking stuff */\r\nexport default\r\nclass Masked<MaskType> {\r\n  static DEFAULTS: any; // $Shape<MaskedOptions>; TODO after fix https://github.com/facebook/flow/issues/4773\r\n\r\n  /** @type {Mask} */\r\n  mask: MaskType;\r\n  /** Transforms value before mask processing */\r\n  prepare: (string, Masked<MaskType>, AppendFlags) => string;\r\n  /** Validates if value is acceptable */\r\n  validate: (string, Masked<MaskType>, AppendFlags) => boolean;\r\n  /** Does additional processing in the end of editing */\r\n  commit: (string, AppendFlags) => void;\r\n  /** */\r\n  isInitialized: boolean;\r\n  _value: string;\r\n  _refreshing: boolean;\r\n\r\n  constructor (opts: {[string]: any}) {\r\n    this._value = '';\r\n    this._update({\r\n      ...Masked.DEFAULTS,\r\n      ...opts\r\n    });\r\n    this.isInitialized = true;\r\n  }\r\n\r\n  /** Sets and applies new options */\r\n  updateOptions (opts: {[string]: any}) {\r\n    this.withValueRefresh(this._update.bind(this, opts));\r\n  }\r\n\r\n  /**\r\n    Sets new options\r\n    @protected\r\n  */\r\n  _update (opts: {[string]: any}) {\r\n    Object.assign(this, opts);\r\n  }\r\n\r\n  /** Clones masked with options and value */\r\n  clone (): Masked<MaskType> {\r\n    const m = new Masked(this);\r\n    m._value = this.value.slice();\r\n    return m;\r\n  }\r\n\r\n  /** Resets value */\r\n  reset () {\r\n    this._value = '';\r\n  }\r\n\r\n  /** */\r\n  get value (): string {\r\n    return this._value;\r\n  }\r\n\r\n  set value (value: string) {\r\n    this.resolve(value);\r\n  }\r\n\r\n  /** Resolve new value */\r\n  resolve (value: string): string {\r\n    this.reset();\r\n    this._append(value, {input: true});\r\n    this._appendTail();\r\n    this.doCommit();\r\n    return this.value;\r\n  }\r\n\r\n  /** */\r\n  get unmaskedValue (): string {\r\n    return this.value;\r\n  }\r\n\r\n  set unmaskedValue (value: string) {\r\n    this.reset();\r\n    this._append(value);\r\n    this._appendTail();\r\n    this.doCommit();\r\n  }\r\n\r\n  /** Value that includes raw user input */\r\n  get rawInputValue (): string {\r\n    return this.extractInput(0, this.value.length, {raw: true});\r\n  }\r\n\r\n  set rawInputValue (value: string) {\r\n    this.reset();\r\n    this._append(value, {raw: true});\r\n    this._appendTail();\r\n    this.doCommit();\r\n  }\r\n\r\n  /** */\r\n  get isComplete (): boolean {\r\n    return true;\r\n  }\r\n\r\n  /** Finds nearest input position in direction */\r\n  nearestInputPos (cursorPos: number, direction?: Direction): number {\r\n    return cursorPos;\r\n  }\r\n\r\n  /** Extracts value in range considering flags */\r\n  extractInput (fromPos: number=0, toPos: number=this.value.length, flags?: ExtractFlags): string {\r\n    return this.value.slice(fromPos, toPos);\r\n  }\r\n\r\n  /** Extracts tail in range */\r\n  _extractTail (fromPos: number=0, toPos: number=this.value.length): any {\r\n    return this.extractInput(fromPos, toPos);\r\n  }\r\n\r\n  /** Appends tail */\r\n  _appendTail (tail: any=\"\"): ChangeDetails {\r\n    return this._append(tail, {tail: true});\r\n  }\r\n\r\n  /** Appends symbols considering flags */\r\n  _append (str: string, flags: AppendFlags={}): ChangeDetails {\r\n    const oldValueLength = this.value.length;\r\n    let consistentValue: Masked<MaskType> = this.clone();\r\n    let overflow = false;\r\n\r\n    str = this.doPrepare(str, flags);\r\n\r\n    for (let ci=0; ci<str.length; ++ci) {\r\n      this._value += str[ci];\r\n      if (this.doValidate(flags) === false) {\r\n        // $FlowFixMe\r\n        Object.assign(this, consistentValue);\r\n        if (!flags.input) {\r\n          // in `input` mode dont skip invalid chars\r\n          overflow = true;\r\n          break;\r\n        }\r\n      }\r\n\r\n      consistentValue = this.clone();\r\n    }\r\n\r\n    return new ChangeDetails({\r\n      inserted: this.value.slice(oldValueLength),\r\n      overflow\r\n    });\r\n  }\r\n\r\n  /** Appends symbols considering tail */\r\n  appendWithTail (str: string, tail: string): ChangeDetails {\r\n    // TODO refactor\r\n    const aggregateDetails = new ChangeDetails();\r\n    let consistentValue = this.clone();\r\n    let consistentAppended: Masked<MaskType>;\r\n\r\n    for (let ci=0; ci<str.length; ++ci) {\r\n      const ch = str[ci];\r\n\r\n      const appendDetails = this._append(ch, {input: true});\r\n      consistentAppended = this.clone();\r\n      const tailAppended = !appendDetails.overflow && !this._appendTail(tail).overflow;\r\n      if (!tailAppended || this.doValidate({tail: true}) === false) {\r\n        // $FlowFixMe\r\n        Object.assign(this, consistentValue);\r\n        break;\r\n      }\r\n\r\n      // $FlowFixMe\r\n      Object.assign(this, consistentAppended);\r\n      consistentValue = this.clone();\r\n      aggregateDetails.aggregate(appendDetails);\r\n    }\r\n\r\n    // TODO needed for cases when\r\n    // 1) REMOVE ONLY AND NO LOOP AT ALL\r\n    // 2) last loop iteration removes tail\r\n    // 3) when breaks on tail insert\r\n\r\n    // aggregate only shift from tail\r\n    aggregateDetails.shift += this._appendTail(tail).shift;\r\n\r\n    return aggregateDetails;\r\n  }\r\n\r\n  /** */\r\n  remove (from: number=0, count: number=this.value.length-from) {\r\n    this._value = this.value.slice(0, from) + this.value.slice(from + count);\r\n  }\r\n\r\n  /** Calls function and reapplies current value */\r\n  withValueRefresh<T>(fn: () => T): T {\r\n    if (this._refreshing || !this.isInitialized) return fn();\r\n    this._refreshing = true;\r\n\r\n    const unmasked = this.unmaskedValue;\r\n\r\n    const ret = fn();\r\n\r\n    this.unmaskedValue = unmasked;\r\n\r\n    delete this._refreshing;\r\n    return ret;\r\n  }\r\n\r\n  /**\r\n    Prepares string before mask processing\r\n    @protected\r\n  */\r\n  doPrepare (str: string, flags: AppendFlags={}): string {\r\n    return this.prepare(str, this, flags);\r\n  }\r\n\r\n  /**\r\n    Validates if value is acceptable\r\n    @protected\r\n  */\r\n  doValidate (flags: AppendFlags): boolean {\r\n    return this.validate(this.value, this, flags);\r\n  }\r\n\r\n  /**\r\n    Does additional processing in the end of editing\r\n    @protected\r\n  */\r\n  doCommit () {\r\n    this.commit(this.value, this);\r\n  }\r\n\r\n  // TODO\r\n  // insert (str, fromPos, flags)\r\n\r\n  /** */\r\n  splice (start: number, deleteCount: number, inserted: string, removeDirection: Direction): ChangeDetails {\r\n    const tailPos = start + deleteCount;\r\n    const tail = this._extractTail(tailPos);\r\n\r\n    const startChangePos = this.nearestInputPos(start, removeDirection);\r\n    this.remove(startChangePos);\r\n    const changeDetails = this.appendWithTail(inserted, tail);\r\n\r\n    // adjust shift if start was aligned\r\n    changeDetails.shift += startChangePos - start;\r\n    return changeDetails;\r\n  }\r\n}\r\n\r\n\r\nMasked.DEFAULTS = {\r\n  prepare: val => val,\r\n  validate: () => true,\r\n  commit: () => {},\r\n};\r\n",
    "static": true,
    "longname": "C:/Projects/imaskjs/src/masked/base.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 162,
    "kind": "class",
    "name": "Masked",
    "memberof": "src/masked/base.js",
    "static": true,
    "longname": "src/masked/base.js~Masked",
    "access": "public",
    "export": true,
    "importPath": "imask/src/masked/base.js",
    "importStyle": "Masked",
    "description": "Provides common masking stuff",
    "lineNumber": 35,
    "interface": false
  },
  {
    "__docId__": 163,
    "kind": "member",
    "name": "DEFAULTS",
    "memberof": "src/masked/base.js~Masked",
    "static": true,
    "longname": "src/masked/base.js~Masked.DEFAULTS",
    "access": "public",
    "description": "",
    "lineNumber": 36,
    "type": {
      "nullable": null,
      "types": [
        "any"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 164,
    "kind": "member",
    "name": "mask",
    "memberof": "src/masked/base.js~Masked",
    "static": false,
    "longname": "src/masked/base.js~Masked#mask",
    "access": "public",
    "description": "",
    "lineNumber": 39,
    "type": {
      "nullable": null,
      "types": [
        "MaskType"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 165,
    "kind": "member",
    "name": "prepare",
    "memberof": "src/masked/base.js~Masked",
    "static": false,
    "longname": "src/masked/base.js~Masked#prepare",
    "access": "public",
    "description": "Transforms value before mask processing ",
    "lineNumber": 41,
    "type": {
      "nullable": null,
      "types": [
        "function"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 166,
    "kind": "member",
    "name": "validate",
    "memberof": "src/masked/base.js~Masked",
    "static": false,
    "longname": "src/masked/base.js~Masked#validate",
    "access": "public",
    "description": "Validates if value is acceptable ",
    "lineNumber": 43,
    "type": {
      "nullable": null,
      "types": [
        "function"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 167,
    "kind": "member",
    "name": "commit",
    "memberof": "src/masked/base.js~Masked",
    "static": false,
    "longname": "src/masked/base.js~Masked#commit",
    "access": "public",
    "description": "Does additional processing in the end of editing ",
    "lineNumber": 45,
    "type": {
      "nullable": null,
      "types": [
        "function"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 168,
    "kind": "member",
    "name": "isInitialized",
    "memberof": "src/masked/base.js~Masked",
    "static": false,
    "longname": "src/masked/base.js~Masked#isInitialized",
    "access": "public",
    "description": " ",
    "lineNumber": 47,
    "type": {
      "nullable": null,
      "types": [
        "boolean"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 169,
    "kind": "member",
    "name": "_value",
    "memberof": "src/masked/base.js~Masked",
    "static": false,
    "longname": "src/masked/base.js~Masked#_value",
    "access": "private",
    "description": "",
    "lineNumber": 48,
    "type": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 170,
    "kind": "member",
    "name": "_refreshing",
    "memberof": "src/masked/base.js~Masked",
    "static": false,
    "longname": "src/masked/base.js~Masked#_refreshing",
    "access": "private",
    "description": "",
    "lineNumber": 49,
    "type": {
      "nullable": null,
      "types": [
        "boolean"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 171,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "src/masked/base.js~Masked",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/masked/base.js~Masked#constructor",
    "access": "public",
    "description": null,
    "lineNumber": 51,
    "undocument": true
  },
  {
    "__docId__": 174,
    "kind": "method",
    "name": "updateOptions",
    "memberof": "src/masked/base.js~Masked",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/masked/base.js~Masked#updateOptions",
    "access": "public",
    "description": "Sets and applies new options ",
    "lineNumber": 61,
    "params": [
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "opts",
        "description": ""
      }
    ],
    "return": null
  },
  {
    "__docId__": 175,
    "kind": "method",
    "name": "_update",
    "memberof": "src/masked/base.js~Masked",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/masked/base.js~Masked#_update",
    "access": "protected",
    "description": "Sets new options ",
    "lineNumber": 69,
    "params": [
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "opts",
        "description": ""
      }
    ],
    "return": null
  },
  {
    "__docId__": 176,
    "kind": "method",
    "name": "clone",
    "memberof": "src/masked/base.js~Masked",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/masked/base.js~Masked#clone",
    "access": "public",
    "description": "Clones masked with options and value  ",
    "lineNumber": 74,
    "return": {
      "nullable": null,
      "types": [
        "Masked"
      ],
      "spread": false,
      "description": ""
    },
    "params": []
  },
  {
    "__docId__": 177,
    "kind": "method",
    "name": "reset",
    "memberof": "src/masked/base.js~Masked",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/masked/base.js~Masked#reset",
    "access": "public",
    "description": "Resets value ",
    "lineNumber": 81,
    "params": [],
    "return": null
  },
  {
    "__docId__": 179,
    "kind": "get",
    "name": "value",
    "memberof": "src/masked/base.js~Masked",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/masked/base.js~Masked#value",
    "access": "public",
    "description": " ",
    "lineNumber": 86,
    "type": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 180,
    "kind": "set",
    "name": "value",
    "memberof": "src/masked/base.js~Masked",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/masked/base.js~Masked#value",
    "access": "public",
    "description": "",
    "lineNumber": 90,
    "type": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 181,
    "kind": "method",
    "name": "resolve",
    "memberof": "src/masked/base.js~Masked",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/masked/base.js~Masked#resolve",
    "access": "public",
    "description": "Resolve new value  ",
    "lineNumber": 95,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "value",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 182,
    "kind": "get",
    "name": "unmaskedValue",
    "memberof": "src/masked/base.js~Masked",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/masked/base.js~Masked#unmaskedValue",
    "access": "public",
    "description": " ",
    "lineNumber": 104,
    "type": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 183,
    "kind": "set",
    "name": "unmaskedValue",
    "memberof": "src/masked/base.js~Masked",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/masked/base.js~Masked#unmaskedValue",
    "access": "public",
    "description": "",
    "lineNumber": 108,
    "type": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 184,
    "kind": "get",
    "name": "rawInputValue",
    "memberof": "src/masked/base.js~Masked",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/masked/base.js~Masked#rawInputValue",
    "access": "public",
    "description": "Value that includes raw user input ",
    "lineNumber": 116,
    "type": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 185,
    "kind": "set",
    "name": "rawInputValue",
    "memberof": "src/masked/base.js~Masked",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/masked/base.js~Masked#rawInputValue",
    "access": "public",
    "description": "",
    "lineNumber": 120,
    "type": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 186,
    "kind": "get",
    "name": "isComplete",
    "memberof": "src/masked/base.js~Masked",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/masked/base.js~Masked#isComplete",
    "access": "public",
    "description": " ",
    "lineNumber": 128,
    "type": {
      "nullable": null,
      "types": [
        "boolean"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 187,
    "kind": "method",
    "name": "nearestInputPos",
    "memberof": "src/masked/base.js~Masked",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/masked/base.js~Masked#nearestInputPos",
    "access": "public",
    "description": "Finds nearest input position in direction  ",
    "lineNumber": 133,
    "params": [
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "cursorPos",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "Direction"
        ],
        "spread": false,
        "optional": false,
        "name": "direction",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "number"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 188,
    "kind": "method",
    "name": "extractInput",
    "memberof": "src/masked/base.js~Masked",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/masked/base.js~Masked#extractInput",
    "access": "public",
    "description": "Extracts value in range considering flags  ",
    "lineNumber": 138,
    "params": [
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "undefined",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "undefined",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "ExtractFlags"
        ],
        "spread": false,
        "optional": false,
        "name": "flags",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 189,
    "kind": "method",
    "name": "_extractTail",
    "memberof": "src/masked/base.js~Masked",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/masked/base.js~Masked#_extractTail",
    "access": "private",
    "description": "Extracts tail in range  ",
    "lineNumber": 143,
    "params": [
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "undefined",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "undefined",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "any"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 190,
    "kind": "method",
    "name": "_appendTail",
    "memberof": "src/masked/base.js~Masked",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/masked/base.js~Masked#_appendTail",
    "access": "private",
    "description": "Appends tail  ",
    "lineNumber": 148,
    "params": [
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "undefined",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "ChangeDetails"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 191,
    "kind": "method",
    "name": "_append",
    "memberof": "src/masked/base.js~Masked",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/masked/base.js~Masked#_append",
    "access": "private",
    "description": "Appends symbols considering flags  ",
    "lineNumber": 153,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "str",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "undefined",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "ChangeDetails"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 193,
    "kind": "method",
    "name": "appendWithTail",
    "memberof": "src/masked/base.js~Masked",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/masked/base.js~Masked#appendWithTail",
    "access": "public",
    "description": "Appends symbols considering tail  ",
    "lineNumber": 182,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "str",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "tail",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "ChangeDetails"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 194,
    "kind": "method",
    "name": "remove",
    "memberof": "src/masked/base.js~Masked",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/masked/base.js~Masked#remove",
    "access": "public",
    "description": " ",
    "lineNumber": 218,
    "params": [
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "undefined",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "undefined",
        "description": ""
      }
    ],
    "return": null
  },
  {
    "__docId__": 196,
    "kind": "method",
    "name": "withValueRefresh",
    "memberof": "src/masked/base.js~Masked",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/masked/base.js~Masked#withValueRefresh",
    "access": "public",
    "description": "Calls function and reapplies current value  ",
    "lineNumber": 223,
    "params": [
      {
        "nullable": null,
        "types": [
          "function"
        ],
        "spread": false,
        "optional": false,
        "name": "fn",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "T"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 199,
    "kind": "method",
    "name": "doPrepare",
    "memberof": "src/masked/base.js~Masked",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/masked/base.js~Masked#doPrepare",
    "access": "protected",
    "description": "Prepares string before mask processing  ",
    "lineNumber": 241,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "str",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "undefined",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 200,
    "kind": "method",
    "name": "doValidate",
    "memberof": "src/masked/base.js~Masked",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/masked/base.js~Masked#doValidate",
    "access": "protected",
    "description": "Validates if value is acceptable  ",
    "lineNumber": 249,
    "params": [
      {
        "nullable": null,
        "types": [
          "AppendFlags"
        ],
        "spread": false,
        "optional": false,
        "name": "flags",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "boolean"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 201,
    "kind": "method",
    "name": "doCommit",
    "memberof": "src/masked/base.js~Masked",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/masked/base.js~Masked#doCommit",
    "access": "protected",
    "description": "Does additional processing in the end of editing ",
    "lineNumber": 257,
    "params": [],
    "return": null
  },
  {
    "__docId__": 202,
    "kind": "method",
    "name": "splice",
    "memberof": "src/masked/base.js~Masked",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/masked/base.js~Masked#splice",
    "access": "public",
    "description": "  ",
    "lineNumber": 265,
    "params": [
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "start",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "deleteCount",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "inserted",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "Direction"
        ],
        "spread": false,
        "optional": false,
        "name": "removeDirection",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "ChangeDetails"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 203,
    "kind": "file",
    "name": "src/masked/date.js",
    "content": "// @flow\r\nimport MaskedPattern from './pattern.js';\r\nimport PatternGroup from './pattern/group.js';\r\n\r\n\r\n/** Date mask */\r\nexport default\r\nclass MaskedDate extends MaskedPattern {\r\n  static GET_DEFAULT_GROUPS: () => {[string]: PatternGroup};\r\n  static DEFAULTS: any;\r\n\r\n  /** Parse string to Date */\r\n  parse: (string) => Date;\r\n  /** Format Date to string */\r\n  format: (Date) => string;\r\n  /** Pattern mask for date according to {@link MaskedDate#format} */\r\n  pattern: string;\r\n  /** Start date */\r\n  min: ?Date;\r\n  /** End date */\r\n  max: ?Date;\r\n\r\n  /**\r\n    @param {Object} opts\r\n  */\r\n  constructor (opts: any) {\r\n    super({\r\n      ...MaskedDate.DEFAULTS,\r\n      ...opts\r\n    });\r\n  }\r\n\r\n  /**\r\n    @override\r\n  */\r\n  _update (opts: any) {\r\n    if (opts.mask === Date) delete opts.mask;\r\n    if (opts.pattern) {\r\n      opts.mask = opts.pattern;\r\n      delete opts.pattern;\r\n    }\r\n\r\n    const groups = opts.groups;\r\n    opts.groups = Object.assign({}, MaskedDate.GET_DEFAULT_GROUPS());\r\n    // adjust year group\r\n    if (opts.min) opts.groups.Y.from = opts.min.getFullYear();\r\n    if (opts.max) opts.groups.Y.to = opts.max.getFullYear();\r\n    Object.assign(opts.groups, groups);\r\n\r\n    super._update(opts);\r\n  }\r\n\r\n  /**\r\n    @override\r\n  */\r\n  doValidate (...args: *) {\r\n    const valid = super.doValidate(...args);\r\n    const date = this.date;\r\n\r\n    return valid &&\r\n      (!this.isComplete ||\r\n        this.isDateExist(this.value) && date &&\r\n        (this.min == null || this.min <= date) &&\r\n        (this.max == null || date <= this.max));\r\n  }\r\n\r\n  /** Checks if date is exists */\r\n  isDateExist (str: string): boolean {\r\n    return this.format(this.parse(str)) === str;\r\n  }\r\n\r\n  /** Parsed Date */\r\n  get date (): ?Date {\r\n    return this.isComplete ?\r\n      this.parse(this.value) :\r\n      null;\r\n  }\r\n\r\n  set date (date: Date) {\r\n    this.value = this.format(date);\r\n  }\r\n}\r\nMaskedDate.DEFAULTS = {\r\n  pattern: 'd{.}`m{.}`Y',\r\n  format: date => {\r\n    const day = String(date.getDate()).padStart(2, '0');\r\n    const month = String(date.getMonth() + 1).padStart(2, '0');\r\n    const year = date.getFullYear();\r\n\r\n    return [day, month, year].join('.');\r\n  },\r\n  parse: str => {\r\n    const [day, month, year] = str.split('.');\r\n    return new Date(year, month - 1, day);\r\n  },\r\n};\r\nMaskedDate.GET_DEFAULT_GROUPS = () => {\r\n  return {\r\n    d: new PatternGroup.Range([1, 31]),\r\n    m: new PatternGroup.Range([1, 12]),\r\n    Y: new PatternGroup.Range([1900, 9999]),\r\n  };\r\n}",
    "static": true,
    "longname": "C:/Projects/imaskjs/src/masked/date.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 204,
    "kind": "class",
    "name": "MaskedDate",
    "memberof": "src/masked/date.js",
    "static": true,
    "longname": "src/masked/date.js~MaskedDate",
    "access": "public",
    "export": true,
    "importPath": "imask/src/masked/date.js",
    "importStyle": "MaskedDate",
    "description": "Date mask",
    "lineNumber": 8,
    "interface": false,
    "extends": [
      "src/masked/pattern.js~MaskedPattern"
    ]
  },
  {
    "__docId__": 205,
    "kind": "member",
    "name": "GET_DEFAULT_GROUPS",
    "memberof": "src/masked/date.js~MaskedDate",
    "static": true,
    "longname": "src/masked/date.js~MaskedDate.GET_DEFAULT_GROUPS",
    "access": "public",
    "description": "",
    "lineNumber": 9,
    "type": {
      "nullable": null,
      "types": [
        "function"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 206,
    "kind": "member",
    "name": "DEFAULTS",
    "memberof": "src/masked/date.js~MaskedDate",
    "static": true,
    "longname": "src/masked/date.js~MaskedDate.DEFAULTS",
    "access": "public",
    "description": "",
    "lineNumber": 10,
    "type": {
      "nullable": null,
      "types": [
        "any"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 207,
    "kind": "member",
    "name": "parse",
    "memberof": "src/masked/date.js~MaskedDate",
    "static": false,
    "longname": "src/masked/date.js~MaskedDate#parse",
    "access": "public",
    "description": "Parse string to Date ",
    "lineNumber": 13,
    "type": {
      "nullable": null,
      "types": [
        "function"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 208,
    "kind": "member",
    "name": "format",
    "memberof": "src/masked/date.js~MaskedDate",
    "static": false,
    "longname": "src/masked/date.js~MaskedDate#format",
    "access": "public",
    "description": "Format Date to string ",
    "lineNumber": 15,
    "type": {
      "nullable": null,
      "types": [
        "function"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 209,
    "kind": "member",
    "name": "pattern",
    "memberof": "src/masked/date.js~MaskedDate",
    "static": false,
    "longname": "src/masked/date.js~MaskedDate#pattern",
    "access": "public",
    "description": "Pattern mask for date according to {@link MaskedDate#format} ",
    "lineNumber": 17,
    "type": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 210,
    "kind": "member",
    "name": "min",
    "memberof": "src/masked/date.js~MaskedDate",
    "static": false,
    "longname": "src/masked/date.js~MaskedDate#min",
    "access": "public",
    "description": "Start date ",
    "lineNumber": 19,
    "type": {
      "nullable": null,
      "types": [
        "nullable"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 211,
    "kind": "member",
    "name": "max",
    "memberof": "src/masked/date.js~MaskedDate",
    "static": false,
    "longname": "src/masked/date.js~MaskedDate#max",
    "access": "public",
    "description": "End date ",
    "lineNumber": 21,
    "type": {
      "nullable": null,
      "types": [
        "nullable"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 212,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "src/masked/date.js~MaskedDate",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/masked/date.js~MaskedDate#constructor",
    "access": "public",
    "description": "",
    "lineNumber": 26,
    "params": [
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "opts",
        "description": ""
      }
    ]
  },
  {
    "__docId__": 213,
    "kind": "method",
    "name": "_update",
    "memberof": "src/masked/date.js~MaskedDate",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/masked/date.js~MaskedDate#_update",
    "access": "private",
    "description": " ",
    "lineNumber": 36,
    "params": [
      {
        "nullable": null,
        "types": [
          "any"
        ],
        "spread": false,
        "optional": false,
        "name": "opts",
        "description": ""
      }
    ],
    "override": true,
    "return": null
  },
  {
    "__docId__": 214,
    "kind": "method",
    "name": "doValidate",
    "memberof": "src/masked/date.js~MaskedDate",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/masked/date.js~MaskedDate#doValidate",
    "access": "public",
    "description": " ",
    "lineNumber": 56,
    "params": [
      {
        "nullable": null,
        "types": [
          "existentialtypeparam"
        ],
        "spread": false,
        "optional": false,
        "name": "undefined",
        "description": ""
      }
    ],
    "override": true,
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 215,
    "kind": "method",
    "name": "isDateExist",
    "memberof": "src/masked/date.js~MaskedDate",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/masked/date.js~MaskedDate#isDateExist",
    "access": "public",
    "description": "Checks if date is exists  ",
    "lineNumber": 68,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "str",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "boolean"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 216,
    "kind": "get",
    "name": "date",
    "memberof": "src/masked/date.js~MaskedDate",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/masked/date.js~MaskedDate#date",
    "access": "public",
    "description": "Parsed Date ",
    "lineNumber": 73,
    "type": {
      "nullable": null,
      "types": [
        "nullable"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 217,
    "kind": "set",
    "name": "date",
    "memberof": "src/masked/date.js~MaskedDate",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/masked/date.js~MaskedDate#date",
    "access": "public",
    "description": "",
    "lineNumber": 79,
    "type": {
      "nullable": null,
      "types": [
        "Date"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 218,
    "kind": "member",
    "name": "value",
    "memberof": "src/masked/date.js~MaskedDate",
    "static": false,
    "longname": "src/masked/date.js~MaskedDate#value",
    "access": "public",
    "description": null,
    "lineNumber": 80,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 219,
    "kind": "file",
    "name": "src/masked/dynamic.js",
    "content": "// @flow\r\nimport ChangeDetails from '../core/change-details.js';\r\nimport createMask from './factory.js';\r\nimport Masked, {type AppendFlags} from './base.js';\r\n\r\n\r\n/** Dynamic mask for choosing apropriate mask in run-time */\r\nexport default\r\nclass MaskedDynamic extends Masked<Array<{[string]: any}>> {\r\n  /** Currently chosen mask */\r\n  currentMask: ?Masked<*>;\r\n  /** Compliled {@link Masked} options */\r\n  compiledMasks: Array<Masked<*>>;\r\n  /** Chooses {@link Masked} depending on input value */\r\n  dispatch: (string, Masked<*>, AppendFlags) => Masked<*>;\r\n\r\n  /**\r\n    @param {Object} opts\r\n  */\r\n  constructor (opts: any) {\r\n    super({\r\n      ...MaskedDynamic.DEFAULTS,\r\n      ...opts\r\n    });\r\n\r\n    this.currentMask = null;\r\n  }\r\n\r\n  /**\r\n    @override\r\n  */\r\n  _update (opts: any) {\r\n    super._update(opts);\r\n    this.compiledMasks = Array.isArray(opts.mask) ?\r\n      opts.mask.map(m => createMask(m)) :\r\n      [];\r\n  }\r\n\r\n  /**\r\n    @override\r\n  */\r\n  _append (str: string, ...args: *) {\r\n    const oldValueLength = this.value.length;\r\n    const details = new ChangeDetails();\r\n\r\n    str = this.doPrepare(str, ...args);\r\n\r\n    const inputValue = this.rawInputValue;\r\n    this.currentMask = this.doDispatch(str, ...args);\r\n    if (this.currentMask) {\r\n      // update current mask\r\n      this.currentMask.rawInputValue = inputValue;\r\n      details.shift = this.value.length - oldValueLength;\r\n      details.aggregate(this.currentMask._append(str, ...args));\r\n    }\r\n\r\n    return details;\r\n  }\r\n\r\n  /**\r\n    @override\r\n  */\r\n  doDispatch(appended: string, flags: AppendFlags={}) {\r\n    return this.dispatch(appended, this, flags);\r\n  }\r\n\r\n  /**\r\n    @override\r\n  */\r\n  clone () {\r\n    const m = new MaskedDynamic(this);\r\n    m._value = this.value;\r\n    if (this.currentMask) m.currentMask = this.currentMask.clone();\r\n    return m;\r\n  }\r\n\r\n  /**\r\n    @override\r\n  */\r\n  reset () {\r\n    if (this.currentMask) this.currentMask.reset();\r\n    this.compiledMasks.forEach(cm => cm.reset());\r\n  }\r\n\r\n  /**\r\n    @override\r\n  */\r\n  get value (): string {\r\n    return this.currentMask ? this.currentMask.value : '';\r\n  }\r\n\r\n  set value (value: string) {\r\n    super.value = value;\r\n  }\r\n\r\n  /**\r\n    @override\r\n  */\r\n  get unmaskedValue (): string {\r\n    return this.currentMask ? this.currentMask.unmaskedValue : '';\r\n  }\r\n\r\n  set unmaskedValue (unmaskedValue: string) {\r\n    super.unmaskedValue = unmaskedValue;\r\n  }\r\n\r\n  /**\r\n    @override\r\n  */\r\n  get isComplete (): boolean {\r\n    return !!this.currentMask && this.currentMask.isComplete;\r\n  }\r\n\r\n  /**\r\n    @override\r\n  */\r\n  remove (...args: *) {\r\n    if (this.currentMask) this.currentMask.remove(...args);\r\n  }\r\n\r\n  /**\r\n    @override\r\n  */\r\n  extractInput (...args: *) {\r\n    return this.currentMask ?\r\n      this.currentMask.extractInput(...args) :\r\n      '';\r\n  }\r\n\r\n  /**\r\n    @override\r\n  */\r\n  doCommit () {\r\n    if (this.currentMask) this.currentMask.doCommit();\r\n    super.doCommit();\r\n  }\r\n\r\n  /**\r\n    @override\r\n  */\r\n  nearestInputPos(...args: *) {\r\n    return this.currentMask ?\r\n      this.currentMask.nearestInputPos(...args) :\r\n      super.nearestInputPos(...args);\r\n  }\r\n}\r\n\r\nMaskedDynamic.DEFAULTS = {\r\n  dispatch: (appended, masked, flags) => {\r\n    if (!masked.compiledMasks.length) return;\r\n\r\n    const inputValue = masked.rawInputValue;\r\n\r\n    // update all\r\n    masked.compiledMasks.forEach(cm => {\r\n      cm.rawInputValue = inputValue;\r\n      cm._append(appended, flags);\r\n    });\r\n\r\n    // pop masks with longer values first\r\n    const inputs = masked.compiledMasks.map((cm, index) => ({value: cm.rawInputValue.length, index}));\r\n    inputs.sort((i1, i2) => i2.value - i1.value);\r\n\r\n    return masked.compiledMasks[inputs[0].index];\r\n  }\r\n};\r\n",
    "static": true,
    "longname": "C:/Projects/imaskjs/src/masked/dynamic.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 220,
    "kind": "class",
    "name": "MaskedDynamic",
    "memberof": "src/masked/dynamic.js",
    "static": true,
    "longname": "src/masked/dynamic.js~MaskedDynamic",
    "access": "public",
    "export": true,
    "importPath": "imask/src/masked/dynamic.js",
    "importStyle": "MaskedDynamic",
    "description": "Dynamic mask for choosing apropriate mask in run-time",
    "lineNumber": 9,
    "interface": false,
    "extends": [
      "src/masked/base.js~Masked"
    ]
  },
  {
    "__docId__": 221,
    "kind": "member",
    "name": "currentMask",
    "memberof": "src/masked/dynamic.js~MaskedDynamic",
    "static": false,
    "longname": "src/masked/dynamic.js~MaskedDynamic#currentMask",
    "access": "public",
    "description": "Currently chosen mask ",
    "lineNumber": 11,
    "type": {
      "nullable": null,
      "types": [
        "nullable"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 222,
    "kind": "member",
    "name": "compiledMasks",
    "memberof": "src/masked/dynamic.js~MaskedDynamic",
    "static": false,
    "longname": "src/masked/dynamic.js~MaskedDynamic#compiledMasks",
    "access": "public",
    "description": "Compliled {@link Masked} options ",
    "lineNumber": 13,
    "type": {
      "nullable": null,
      "types": [
        "Array"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 223,
    "kind": "member",
    "name": "dispatch",
    "memberof": "src/masked/dynamic.js~MaskedDynamic",
    "static": false,
    "longname": "src/masked/dynamic.js~MaskedDynamic#dispatch",
    "access": "public",
    "description": "Chooses {@link Masked} depending on input value ",
    "lineNumber": 15,
    "type": {
      "nullable": null,
      "types": [
        "function"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 224,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "src/masked/dynamic.js~MaskedDynamic",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/masked/dynamic.js~MaskedDynamic#constructor",
    "access": "public",
    "description": "",
    "lineNumber": 20,
    "params": [
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "opts",
        "description": ""
      }
    ]
  },
  {
    "__docId__": 226,
    "kind": "method",
    "name": "_update",
    "memberof": "src/masked/dynamic.js~MaskedDynamic",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/masked/dynamic.js~MaskedDynamic#_update",
    "access": "private",
    "description": " ",
    "lineNumber": 32,
    "params": [
      {
        "nullable": null,
        "types": [
          "any"
        ],
        "spread": false,
        "optional": false,
        "name": "opts",
        "description": ""
      }
    ],
    "override": true,
    "return": null
  },
  {
    "__docId__": 228,
    "kind": "method",
    "name": "_append",
    "memberof": "src/masked/dynamic.js~MaskedDynamic",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/masked/dynamic.js~MaskedDynamic#_append",
    "access": "private",
    "description": " ",
    "lineNumber": 42,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "str",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "existentialtypeparam"
        ],
        "spread": false,
        "optional": false,
        "name": "undefined",
        "description": ""
      }
    ],
    "override": true,
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 230,
    "kind": "method",
    "name": "doDispatch",
    "memberof": "src/masked/dynamic.js~MaskedDynamic",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/masked/dynamic.js~MaskedDynamic#doDispatch",
    "access": "public",
    "description": " ",
    "lineNumber": 63,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "appended",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "undefined",
        "description": ""
      }
    ],
    "override": true,
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 231,
    "kind": "method",
    "name": "clone",
    "memberof": "src/masked/dynamic.js~MaskedDynamic",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/masked/dynamic.js~MaskedDynamic#clone",
    "access": "public",
    "description": " ",
    "lineNumber": 70,
    "override": true,
    "params": [],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 232,
    "kind": "method",
    "name": "reset",
    "memberof": "src/masked/dynamic.js~MaskedDynamic",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/masked/dynamic.js~MaskedDynamic#reset",
    "access": "public",
    "description": " ",
    "lineNumber": 80,
    "override": true,
    "params": [],
    "return": null
  },
  {
    "__docId__": 233,
    "kind": "get",
    "name": "value",
    "memberof": "src/masked/dynamic.js~MaskedDynamic",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/masked/dynamic.js~MaskedDynamic#value",
    "access": "public",
    "description": " ",
    "lineNumber": 88,
    "type": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": null
    },
    "override": true
  },
  {
    "__docId__": 234,
    "kind": "set",
    "name": "value",
    "memberof": "src/masked/dynamic.js~MaskedDynamic",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/masked/dynamic.js~MaskedDynamic#value",
    "access": "public",
    "description": "",
    "lineNumber": 92,
    "type": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 235,
    "kind": "get",
    "name": "unmaskedValue",
    "memberof": "src/masked/dynamic.js~MaskedDynamic",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/masked/dynamic.js~MaskedDynamic#unmaskedValue",
    "access": "public",
    "description": " ",
    "lineNumber": 99,
    "type": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": null
    },
    "override": true
  },
  {
    "__docId__": 236,
    "kind": "set",
    "name": "unmaskedValue",
    "memberof": "src/masked/dynamic.js~MaskedDynamic",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/masked/dynamic.js~MaskedDynamic#unmaskedValue",
    "access": "public",
    "description": "",
    "lineNumber": 103,
    "type": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 237,
    "kind": "get",
    "name": "isComplete",
    "memberof": "src/masked/dynamic.js~MaskedDynamic",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/masked/dynamic.js~MaskedDynamic#isComplete",
    "access": "public",
    "description": " ",
    "lineNumber": 110,
    "type": {
      "nullable": null,
      "types": [
        "boolean"
      ],
      "spread": false,
      "description": null
    },
    "override": true
  },
  {
    "__docId__": 238,
    "kind": "method",
    "name": "remove",
    "memberof": "src/masked/dynamic.js~MaskedDynamic",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/masked/dynamic.js~MaskedDynamic#remove",
    "access": "public",
    "description": " ",
    "lineNumber": 117,
    "params": [
      {
        "nullable": null,
        "types": [
          "existentialtypeparam"
        ],
        "spread": false,
        "optional": false,
        "name": "undefined",
        "description": ""
      }
    ],
    "override": true,
    "return": null
  },
  {
    "__docId__": 239,
    "kind": "method",
    "name": "extractInput",
    "memberof": "src/masked/dynamic.js~MaskedDynamic",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/masked/dynamic.js~MaskedDynamic#extractInput",
    "access": "public",
    "description": " ",
    "lineNumber": 124,
    "params": [
      {
        "nullable": null,
        "types": [
          "existentialtypeparam"
        ],
        "spread": false,
        "optional": false,
        "name": "undefined",
        "description": ""
      }
    ],
    "override": true,
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 240,
    "kind": "method",
    "name": "doCommit",
    "memberof": "src/masked/dynamic.js~MaskedDynamic",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/masked/dynamic.js~MaskedDynamic#doCommit",
    "access": "public",
    "description": " ",
    "lineNumber": 133,
    "override": true,
    "params": [],
    "return": null
  },
  {
    "__docId__": 241,
    "kind": "method",
    "name": "nearestInputPos",
    "memberof": "src/masked/dynamic.js~MaskedDynamic",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/masked/dynamic.js~MaskedDynamic#nearestInputPos",
    "access": "public",
    "description": " ",
    "lineNumber": 141,
    "params": [
      {
        "nullable": null,
        "types": [
          "existentialtypeparam"
        ],
        "spread": false,
        "optional": false,
        "name": "undefined",
        "description": ""
      }
    ],
    "override": true,
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 242,
    "kind": "file",
    "name": "src/masked/factory.js",
    "content": "// @flow\r\nimport {g, isString} from '../core/utils.js';\r\nimport type Masked from './base.js';\r\nimport {type Mask} from './base.js';\r\n\r\n\r\n/** Get Masked class by mask type */\r\nexport\r\nfunction maskedClass (mask: Mask): Class<Masked<*>> {\r\n  if (mask == null) {\r\n    throw new Error('mask property should be defined');\r\n  }\r\n\r\n  if (mask instanceof RegExp) return g.IMask.MaskedRegExp;\r\n  if (isString(mask)) return g.IMask.MaskedPattern;\r\n  if (mask instanceof Date || mask === Date) return g.IMask.MaskedDate;\r\n  if (mask instanceof Number || typeof mask === 'number' || mask === Number) return g.IMask.MaskedNumber;\r\n  if (Array.isArray(mask) || mask === Array) return g.IMask.MaskedDynamic;\r\n  // $FlowFixMe\r\n  if (mask.prototype instanceof g.IMask.Masked) return mask;\r\n  // $FlowFixMe\r\n  if (mask instanceof Function) return g.IMask.MaskedFunction;\r\n\r\n  console.warn('Mask not found for mask', mask);  // eslint-disable-line no-console\r\n  return g.IMask.Masked;\r\n}\r\n\r\n/** Creates new {@link Masked} depending on mask type */\r\nexport default\r\nfunction createMask (opts: {mask: Mask}): Masked<*> {\r\n  opts = Object.assign({}, opts);  // clone\r\n  const mask = opts.mask;\r\n\r\n  if (mask instanceof g.IMask.Masked) return mask;\r\n\r\n  const MaskedClass = maskedClass(mask);\r\n  return new MaskedClass(opts);\r\n}\r\n",
    "static": true,
    "longname": "C:/Projects/imaskjs/src/masked/factory.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 243,
    "kind": "function",
    "name": "maskedClass",
    "memberof": "src/masked/factory.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/masked/factory.js~maskedClass",
    "access": "public",
    "export": true,
    "importPath": "imask/src/masked/factory.js",
    "importStyle": "{maskedClass}",
    "description": "Get Masked class by mask type",
    "lineNumber": 9,
    "params": [
      {
        "name": "mask",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 244,
    "kind": "function",
    "name": "createMask",
    "memberof": "src/masked/factory.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/masked/factory.js~createMask",
    "access": "public",
    "export": true,
    "importPath": "imask/src/masked/factory.js",
    "importStyle": "createMask",
    "description": "Creates new {@link Masked} depending on mask type",
    "lineNumber": 30,
    "params": [
      {
        "name": "opts",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 245,
    "kind": "file",
    "name": "src/masked/function.js",
    "content": "// @flow\r\nimport Masked, {type MaskedOptions} from './base.js';\r\n\r\n\r\n/** Masking by custom Function */\r\nexport default\r\nclass MaskedFunction extends Masked<Function> {\r\n  /**\r\n    @override\r\n    @param {Object} opts\r\n  */\r\n  _update (opts: MaskedOptions<Function>) {\r\n    opts.validate = opts.mask;\r\n    super._update(opts);\r\n  }\r\n}\r\n",
    "static": true,
    "longname": "C:/Projects/imaskjs/src/masked/function.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 246,
    "kind": "class",
    "name": "MaskedFunction",
    "memberof": "src/masked/function.js",
    "static": true,
    "longname": "src/masked/function.js~MaskedFunction",
    "access": "public",
    "export": true,
    "importPath": "imask/src/masked/function.js",
    "importStyle": "MaskedFunction",
    "description": "Masking by custom Function",
    "lineNumber": 7,
    "interface": false,
    "extends": [
      "src/masked/base.js~Masked"
    ]
  },
  {
    "__docId__": 247,
    "kind": "method",
    "name": "_update",
    "memberof": "src/masked/function.js~MaskedFunction",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/masked/function.js~MaskedFunction#_update",
    "access": "private",
    "description": " ",
    "lineNumber": 12,
    "params": [
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "opts",
        "description": ""
      }
    ],
    "override": true,
    "return": null
  },
  {
    "__docId__": 248,
    "kind": "file",
    "name": "src/masked/number.js",
    "content": "// @flow\r\nimport {escapeRegExp, indexInDirection, type Direction} from '../core/utils.js';\r\nimport Masked, {type MaskedOptions, type AppendFlags} from './base.js';\r\n\r\n\r\ntype MaskedNumberOptions = {\r\n  ...MaskedOptions<Number>,\r\n  radix: $PropertyType<MaskedNumber, 'radix'>,\r\n  thousandsSeparator: $PropertyType<MaskedNumber, 'thousandsSeparator'>,\r\n  mapToRadix: $PropertyType<MaskedNumber, 'mapToRadix'>,\r\n  scale: $PropertyType<MaskedNumber, 'scale'>,\r\n  signed: $PropertyType<MaskedNumber, 'signed'>,\r\n  normalizeZeros: $PropertyType<MaskedNumber, 'normalizeZeros'>,\r\n  padFractionalZeros: $PropertyType<MaskedNumber, 'padFractionalZeros'>,\r\n};\r\n\r\n/** Number mask */\r\nexport default\r\nclass MaskedNumber extends Masked<Number> {\r\n  static DEFAULTS: $Shape<MaskedNumberOptions>;\r\n\r\n  /** Single char */\r\n  radix: string;\r\n  /** Single char */\r\n  thousandsSeparator: string;\r\n  /** Array of single chars */\r\n  mapToRadix: Array<string>;\r\n  /** */\r\n  min: number;\r\n  /** */\r\n  max: number;\r\n  /** Digits after point */\r\n  scale: number;\r\n  /** */\r\n  signed: boolean;\r\n  /** Flag to remove leading and trailing zeros in the end of editing */\r\n  normalizeZeros: boolean;\r\n  /** Flag to pad trailing zeros after point in the end of editing */\r\n  padFractionalZeros: boolean;\r\n  _numberRegExp: RegExp;\r\n  _numberRegExpInput: RegExp;\r\n  _thousandsSeparatorRegExp: RegExp;\r\n  _mapToRadixRegExp: RegExp;\r\n\r\n  /**\r\n    @param {Object} opts\r\n  */\r\n  constructor (opts: $Shape<MaskedNumberOptions>) {\r\n    super({\r\n      ...MaskedNumber.DEFAULTS,\r\n      ...opts\r\n    });\r\n  }\r\n\r\n  /**\r\n    @override\r\n  */\r\n  _update (opts: MaskedNumberOptions) {\r\n    super._update(opts);\r\n    this._updateRegExps();\r\n  }\r\n\r\n  /** */\r\n  _updateRegExps () {\r\n    // use different regexp to process user input (more strict, input suffix) and tail shifting\r\n    const start = '^'\r\n\r\n    let midInput = '';\r\n    let mid = '';\r\n    if (this.allowNegative) {\r\n      midInput += '([+|\\\\-]?|([+|\\\\-]?(0|([1-9]+\\\\d*))))';\r\n      mid += '[+|\\\\-]?';\r\n    } else {\r\n      midInput += '(0|([1-9]+\\\\d*))';\r\n    }\r\n    mid += '\\\\d*';\r\n\r\n    let end = (this.scale ?\r\n      '(' + this.radix + '\\\\d{0,' + this.scale + '})?' :\r\n      '') + '$';\r\n\r\n    this._numberRegExpInput = new RegExp(start + midInput + end);\r\n    this._numberRegExp = new RegExp(start + mid + end);\r\n    this._mapToRadixRegExp = new RegExp('[' +\r\n      this.mapToRadix.map(escapeRegExp).join('') +\r\n    ']', 'g');\r\n    this._thousandsSeparatorRegExp = new RegExp(escapeRegExp(this.thousandsSeparator), 'g');\r\n  }\r\n\r\n  /**\r\n    @override\r\n  */\r\n  _extractTail (fromPos: number=0, toPos: number=this.value.length): string {\r\n    return this._removeThousandsSeparators(super._extractTail(fromPos, toPos));\r\n  }\r\n\r\n  /** */\r\n  _removeThousandsSeparators (value: string): string {\r\n    return value.replace(this._thousandsSeparatorRegExp, '');\r\n  }\r\n\r\n  /** */\r\n  _insertThousandsSeparators (value: string): string {\r\n    // https://stackoverflow.com/questions/2901102/how-to-print-a-number-with-commas-as-thousands-separators-in-javascript\r\n    const parts = value.split(this.radix);\r\n    parts[0] = parts[0].replace(/\\B(?=(\\d{3})+(?!\\d))/g, this.thousandsSeparator);\r\n    return parts.join(this.radix);\r\n  }\r\n\r\n  /**\r\n    @override\r\n  */\r\n  doPrepare (str: string, ...args: *) {\r\n    return super.doPrepare(this._removeThousandsSeparators(str.replace(this._mapToRadixRegExp, this.radix)), ...args);\r\n  }\r\n\r\n  /**\r\n    @override\r\n  */\r\n  appendWithTail (...args: *) {\r\n    let previousValue = this.value;\r\n    this._value = this._removeThousandsSeparators(this.value);\r\n    let startChangePos = this.value.length;\r\n\r\n    const appendDetails = super.appendWithTail(...args);\r\n    this._value = this._insertThousandsSeparators(this.value);\r\n\r\n    // calculate offsets after insert separators\r\n    let beforeTailPos = startChangePos + appendDetails.inserted.length;\r\n    for (let pos = 0; pos <= beforeTailPos; ++pos) {\r\n      if (this.value[pos] === this.thousandsSeparator) {\r\n        if (pos < startChangePos ||\r\n          // check high bound\r\n          // if separator is still there - consider it also\r\n          (pos === startChangePos && previousValue[pos] === this.thousandsSeparator)) {\r\n          ++startChangePos;\r\n        }\r\n        if (pos < beforeTailPos) ++beforeTailPos;\r\n      }\r\n    }\r\n\r\n    // adjust details with separators\r\n    appendDetails.rawInserted = appendDetails.inserted;\r\n    appendDetails.inserted = this.value.slice(startChangePos, beforeTailPos);\r\n    appendDetails.shift += startChangePos - previousValue.length;\r\n\r\n    return appendDetails;\r\n  }\r\n\r\n  /**\r\n    @override\r\n  */\r\n  nearestInputPos (cursorPos: number, direction?: Direction): number {\r\n    if (!direction) return cursorPos;\r\n\r\n    const nextPos = indexInDirection(cursorPos, direction);\r\n    if (this.value[nextPos] === this.thousandsSeparator) cursorPos += direction;\r\n    return cursorPos;\r\n  }\r\n\r\n  /**\r\n    @override\r\n  */\r\n  doValidate (flags: AppendFlags) {\r\n    const regexp = flags.input ? this._numberRegExpInput : this._numberRegExp;\r\n\r\n    // validate as string\r\n    let valid = regexp.test(this._removeThousandsSeparators(this.value));\r\n\r\n    if (valid) {\r\n      // validate as number\r\n      const number = this.number;\r\n      valid = valid && !isNaN(number) &&\r\n        // check min bound for negative values\r\n        (this.min == null || this.min >= 0 || this.min <= this.number) &&\r\n        // check max bound for positive values\r\n        (this.max == null || this.max <= 0 || this.number <= this.max);\r\n    }\r\n\r\n    return valid && super.doValidate(flags);\r\n  }\r\n\r\n  /**\r\n    @override\r\n  */\r\n  doCommit () {\r\n    const number = this.number;\r\n    let validnum = number;\r\n\r\n    // check bounds\r\n    if (this.min != null) validnum = Math.max(validnum, this.min);\r\n    if (this.max != null) validnum = Math.min(validnum, this.max);\r\n\r\n    if (validnum !== number) this.unmaskedValue = String(validnum);\r\n\r\n    let formatted = this.value;\r\n\r\n    if (this.normalizeZeros) formatted = this._normalizeZeros(formatted);\r\n    if (this.padFractionalZeros) formatted = this._padFractionalZeros(formatted);\r\n\r\n    this._value = formatted;\r\n    super.doCommit();\r\n  }\r\n\r\n  /** */\r\n  _normalizeZeros (value: string): string {\r\n    const parts = this._removeThousandsSeparators(value).split(this.radix);\r\n\r\n    // remove leading zeros\r\n    parts[0] = parts[0].replace(/^(\\D*)(0*)(\\d*)/, (match, sign, zeros, num) => sign + num);\r\n    // add leading zero\r\n    if (value.length && !/\\d$/.test(parts[0])) parts[0] = parts[0] + '0';\r\n\r\n    if (parts.length > 1) {\r\n      parts[1] = parts[1].replace(/0*$/, '');  // remove trailing zeros\r\n      if (!parts[1].length) parts.length = 1;  // remove fractional\r\n    }\r\n\r\n    return this._insertThousandsSeparators(parts.join(this.radix));\r\n  }\r\n\r\n  /** */\r\n  _padFractionalZeros (value: string): string {\r\n    if (!value) return value;\r\n\r\n    const parts = value.split(this.radix);\r\n    if (parts.length < 2) parts.push('');\r\n    parts[1] = parts[1].padEnd(this.scale, '0');\r\n    return parts.join(this.radix);\r\n  }\r\n\r\n  /**\r\n    @override\r\n  */\r\n  get unmaskedValue (): string {\r\n    return this._removeThousandsSeparators(\r\n      this._normalizeZeros(\r\n        this.value))\r\n      .replace(this.radix, '.');\r\n  }\r\n\r\n  set unmaskedValue (unmaskedValue: string) {\r\n    super.unmaskedValue = unmaskedValue.replace('.', this.radix);\r\n  }\r\n\r\n  /** Parsed Number */\r\n  get number (): number {\r\n    return Number(this.unmaskedValue);\r\n  }\r\n\r\n  set number (number: number) {\r\n    this.unmaskedValue = String(number);\r\n  }\r\n\r\n  /**\r\n    Is negative allowed\r\n    @readonly\r\n  */\r\n  get allowNegative (): boolean {\r\n    return this.signed ||\r\n      (this.min != null && this.min < 0) ||\r\n      (this.max != null && this.max < 0);\r\n  }\r\n}\r\nMaskedNumber.DEFAULTS = {\r\n  radix: ',',\r\n  thousandsSeparator: '',\r\n  mapToRadix: ['.'],\r\n  scale: 2,\r\n  signed: false,\r\n  normalizeZeros: true,\r\n  padFractionalZeros: false,\r\n};\r\n",
    "static": true,
    "longname": "C:/Projects/imaskjs/src/masked/number.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 249,
    "kind": "class",
    "name": "MaskedNumber",
    "memberof": "src/masked/number.js",
    "static": true,
    "longname": "src/masked/number.js~MaskedNumber",
    "access": "public",
    "export": true,
    "importPath": "imask/src/masked/number.js",
    "importStyle": "MaskedNumber",
    "description": "Number mask",
    "lineNumber": 19,
    "interface": false,
    "extends": [
      "src/masked/base.js~Masked"
    ]
  },
  {
    "__docId__": 250,
    "kind": "member",
    "name": "DEFAULTS",
    "memberof": "src/masked/number.js~MaskedNumber",
    "static": true,
    "longname": "src/masked/number.js~MaskedNumber.DEFAULTS",
    "access": "public",
    "description": "",
    "lineNumber": 20,
    "type": {
      "nullable": null,
      "types": [
        "$Shape"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 251,
    "kind": "member",
    "name": "radix",
    "memberof": "src/masked/number.js~MaskedNumber",
    "static": false,
    "longname": "src/masked/number.js~MaskedNumber#radix",
    "access": "public",
    "description": "Single char ",
    "lineNumber": 23,
    "type": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 252,
    "kind": "member",
    "name": "thousandsSeparator",
    "memberof": "src/masked/number.js~MaskedNumber",
    "static": false,
    "longname": "src/masked/number.js~MaskedNumber#thousandsSeparator",
    "access": "public",
    "description": "Single char ",
    "lineNumber": 25,
    "type": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 253,
    "kind": "member",
    "name": "mapToRadix",
    "memberof": "src/masked/number.js~MaskedNumber",
    "static": false,
    "longname": "src/masked/number.js~MaskedNumber#mapToRadix",
    "access": "public",
    "description": "Array of single chars ",
    "lineNumber": 27,
    "type": {
      "nullable": null,
      "types": [
        "Array"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 254,
    "kind": "member",
    "name": "min",
    "memberof": "src/masked/number.js~MaskedNumber",
    "static": false,
    "longname": "src/masked/number.js~MaskedNumber#min",
    "access": "public",
    "description": " ",
    "lineNumber": 29,
    "type": {
      "nullable": null,
      "types": [
        "number"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 255,
    "kind": "member",
    "name": "max",
    "memberof": "src/masked/number.js~MaskedNumber",
    "static": false,
    "longname": "src/masked/number.js~MaskedNumber#max",
    "access": "public",
    "description": " ",
    "lineNumber": 31,
    "type": {
      "nullable": null,
      "types": [
        "number"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 256,
    "kind": "member",
    "name": "scale",
    "memberof": "src/masked/number.js~MaskedNumber",
    "static": false,
    "longname": "src/masked/number.js~MaskedNumber#scale",
    "access": "public",
    "description": "Digits after point ",
    "lineNumber": 33,
    "type": {
      "nullable": null,
      "types": [
        "number"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 257,
    "kind": "member",
    "name": "signed",
    "memberof": "src/masked/number.js~MaskedNumber",
    "static": false,
    "longname": "src/masked/number.js~MaskedNumber#signed",
    "access": "public",
    "description": " ",
    "lineNumber": 35,
    "type": {
      "nullable": null,
      "types": [
        "boolean"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 258,
    "kind": "member",
    "name": "normalizeZeros",
    "memberof": "src/masked/number.js~MaskedNumber",
    "static": false,
    "longname": "src/masked/number.js~MaskedNumber#normalizeZeros",
    "access": "public",
    "description": "Flag to remove leading and trailing zeros in the end of editing ",
    "lineNumber": 37,
    "type": {
      "nullable": null,
      "types": [
        "boolean"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 259,
    "kind": "member",
    "name": "padFractionalZeros",
    "memberof": "src/masked/number.js~MaskedNumber",
    "static": false,
    "longname": "src/masked/number.js~MaskedNumber#padFractionalZeros",
    "access": "public",
    "description": "Flag to pad trailing zeros after point in the end of editing ",
    "lineNumber": 39,
    "type": {
      "nullable": null,
      "types": [
        "boolean"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 260,
    "kind": "member",
    "name": "_numberRegExp",
    "memberof": "src/masked/number.js~MaskedNumber",
    "static": false,
    "longname": "src/masked/number.js~MaskedNumber#_numberRegExp",
    "access": "private",
    "description": "",
    "lineNumber": 40,
    "type": {
      "nullable": null,
      "types": [
        "RegExp"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 261,
    "kind": "member",
    "name": "_numberRegExpInput",
    "memberof": "src/masked/number.js~MaskedNumber",
    "static": false,
    "longname": "src/masked/number.js~MaskedNumber#_numberRegExpInput",
    "access": "private",
    "description": "",
    "lineNumber": 41,
    "type": {
      "nullable": null,
      "types": [
        "RegExp"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 262,
    "kind": "member",
    "name": "_thousandsSeparatorRegExp",
    "memberof": "src/masked/number.js~MaskedNumber",
    "static": false,
    "longname": "src/masked/number.js~MaskedNumber#_thousandsSeparatorRegExp",
    "access": "private",
    "description": "",
    "lineNumber": 42,
    "type": {
      "nullable": null,
      "types": [
        "RegExp"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 263,
    "kind": "member",
    "name": "_mapToRadixRegExp",
    "memberof": "src/masked/number.js~MaskedNumber",
    "static": false,
    "longname": "src/masked/number.js~MaskedNumber#_mapToRadixRegExp",
    "access": "private",
    "description": "",
    "lineNumber": 43,
    "type": {
      "nullable": null,
      "types": [
        "RegExp"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 264,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "src/masked/number.js~MaskedNumber",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/masked/number.js~MaskedNumber#constructor",
    "access": "public",
    "description": "",
    "lineNumber": 48,
    "params": [
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "opts",
        "description": ""
      }
    ]
  },
  {
    "__docId__": 265,
    "kind": "method",
    "name": "_update",
    "memberof": "src/masked/number.js~MaskedNumber",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/masked/number.js~MaskedNumber#_update",
    "access": "private",
    "description": " ",
    "lineNumber": 58,
    "params": [
      {
        "nullable": null,
        "types": [
          "MaskedNumberOptions"
        ],
        "spread": false,
        "optional": false,
        "name": "opts",
        "description": ""
      }
    ],
    "override": true,
    "return": null
  },
  {
    "__docId__": 266,
    "kind": "method",
    "name": "_updateRegExps",
    "memberof": "src/masked/number.js~MaskedNumber",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/masked/number.js~MaskedNumber#_updateRegExps",
    "access": "private",
    "description": " ",
    "lineNumber": 64,
    "params": [],
    "return": null
  },
  {
    "__docId__": 271,
    "kind": "method",
    "name": "_extractTail",
    "memberof": "src/masked/number.js~MaskedNumber",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/masked/number.js~MaskedNumber#_extractTail",
    "access": "private",
    "description": "  ",
    "lineNumber": 93,
    "params": [
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "undefined",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "undefined",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": ""
    },
    "override": true
  },
  {
    "__docId__": 272,
    "kind": "method",
    "name": "_removeThousandsSeparators",
    "memberof": "src/masked/number.js~MaskedNumber",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/masked/number.js~MaskedNumber#_removeThousandsSeparators",
    "access": "private",
    "description": "  ",
    "lineNumber": 98,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "value",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 273,
    "kind": "method",
    "name": "_insertThousandsSeparators",
    "memberof": "src/masked/number.js~MaskedNumber",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/masked/number.js~MaskedNumber#_insertThousandsSeparators",
    "access": "private",
    "description": "  ",
    "lineNumber": 103,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "value",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 274,
    "kind": "method",
    "name": "doPrepare",
    "memberof": "src/masked/number.js~MaskedNumber",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/masked/number.js~MaskedNumber#doPrepare",
    "access": "public",
    "description": " ",
    "lineNumber": 113,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "str",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "existentialtypeparam"
        ],
        "spread": false,
        "optional": false,
        "name": "undefined",
        "description": ""
      }
    ],
    "override": true,
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 275,
    "kind": "method",
    "name": "appendWithTail",
    "memberof": "src/masked/number.js~MaskedNumber",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/masked/number.js~MaskedNumber#appendWithTail",
    "access": "public",
    "description": " ",
    "lineNumber": 120,
    "params": [
      {
        "nullable": null,
        "types": [
          "existentialtypeparam"
        ],
        "spread": false,
        "optional": false,
        "name": "undefined",
        "description": ""
      }
    ],
    "override": true,
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 276,
    "kind": "member",
    "name": "_value",
    "memberof": "src/masked/number.js~MaskedNumber",
    "static": false,
    "longname": "src/masked/number.js~MaskedNumber#_value",
    "access": "private",
    "description": null,
    "lineNumber": 122,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 278,
    "kind": "method",
    "name": "nearestInputPos",
    "memberof": "src/masked/number.js~MaskedNumber",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/masked/number.js~MaskedNumber#nearestInputPos",
    "access": "public",
    "description": "  ",
    "lineNumber": 153,
    "params": [
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "cursorPos",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "Direction"
        ],
        "spread": false,
        "optional": false,
        "name": "direction",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "number"
      ],
      "spread": false,
      "description": ""
    },
    "override": true
  },
  {
    "__docId__": 279,
    "kind": "method",
    "name": "doValidate",
    "memberof": "src/masked/number.js~MaskedNumber",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/masked/number.js~MaskedNumber#doValidate",
    "access": "public",
    "description": " ",
    "lineNumber": 164,
    "params": [
      {
        "nullable": null,
        "types": [
          "AppendFlags"
        ],
        "spread": false,
        "optional": false,
        "name": "flags",
        "description": ""
      }
    ],
    "override": true,
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 280,
    "kind": "method",
    "name": "doCommit",
    "memberof": "src/masked/number.js~MaskedNumber",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/masked/number.js~MaskedNumber#doCommit",
    "access": "public",
    "description": " ",
    "lineNumber": 186,
    "override": true,
    "params": [],
    "return": null
  },
  {
    "__docId__": 283,
    "kind": "method",
    "name": "_normalizeZeros",
    "memberof": "src/masked/number.js~MaskedNumber",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/masked/number.js~MaskedNumber#_normalizeZeros",
    "access": "private",
    "description": "  ",
    "lineNumber": 206,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "value",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 284,
    "kind": "method",
    "name": "_padFractionalZeros",
    "memberof": "src/masked/number.js~MaskedNumber",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/masked/number.js~MaskedNumber#_padFractionalZeros",
    "access": "private",
    "description": "  ",
    "lineNumber": 223,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "value",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 285,
    "kind": "get",
    "name": "unmaskedValue",
    "memberof": "src/masked/number.js~MaskedNumber",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/masked/number.js~MaskedNumber#unmaskedValue",
    "access": "public",
    "description": " ",
    "lineNumber": 235,
    "type": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": null
    },
    "override": true
  },
  {
    "__docId__": 286,
    "kind": "set",
    "name": "unmaskedValue",
    "memberof": "src/masked/number.js~MaskedNumber",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/masked/number.js~MaskedNumber#unmaskedValue",
    "access": "public",
    "description": "",
    "lineNumber": 242,
    "type": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 287,
    "kind": "get",
    "name": "number",
    "memberof": "src/masked/number.js~MaskedNumber",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/masked/number.js~MaskedNumber#number",
    "access": "public",
    "description": "Parsed Number ",
    "lineNumber": 247,
    "type": {
      "nullable": null,
      "types": [
        "number"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 288,
    "kind": "set",
    "name": "number",
    "memberof": "src/masked/number.js~MaskedNumber",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/masked/number.js~MaskedNumber#number",
    "access": "public",
    "description": "",
    "lineNumber": 251,
    "type": {
      "nullable": null,
      "types": [
        "number"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 290,
    "kind": "get",
    "name": "allowNegative",
    "memberof": "src/masked/number.js~MaskedNumber",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/masked/number.js~MaskedNumber#allowNegative",
    "access": "public",
    "description": "Is negative allowed ",
    "lineNumber": 259,
    "unknown": [
      {
        "tagName": "@readonly",
        "tagValue": " "
      }
    ],
    "type": {
      "nullable": null,
      "types": [
        "boolean"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 291,
    "kind": "file",
    "name": "src/masked/pattern/definition.js",
    "content": "// @flow\r\nimport createMask from '../factory.js';\r\nimport type Masked from '../base.js';\r\nimport {type Mask} from '../base.js';\r\n\r\n\r\ntype Definitions = {[string]: Mask};\r\ntype DefinitionType = $Values<typeof PatternDefinition.TYPES>;\r\ntype DefinitionTypes = {[string]: DefinitionType};\r\n\r\nexport default\r\nclass PatternDefinition {\r\n  static TYPES: DefinitionTypes;\r\n  static DEFAULTS: Definitions;\r\n\r\n  char: ?string;\r\n  stopAlign: ?boolean;\r\n  optional: boolean;\r\n  isHollow: boolean;\r\n  isRawInput: boolean;\r\n  type: DefinitionType;\r\n  _masked: Masked<*>;\r\n\r\n  constructor(opts: any) {  // TODO flow\r\n    Object.assign(this, opts);\r\n\r\n    if (this.mask) {\r\n      this._masked = createMask(opts);\r\n    }\r\n  }\r\n\r\n  reset () {\r\n    this.isHollow = false;\r\n    this.isRawInput = false;\r\n    if (this._masked) this._masked.reset();\r\n  }\r\n\r\n  get isInput (): boolean {\r\n    return this.type === PatternDefinition.TYPES.INPUT;\r\n  }\r\n\r\n  get isHiddenHollow (): boolean {\r\n    return this.isHollow && this.optional;\r\n  }\r\n\r\n  resolve (ch: string): boolean | string {\r\n    if (!this._masked) return false;\r\n    return this._masked.resolve(ch);\r\n  }\r\n}\r\nPatternDefinition.DEFAULTS = {\r\n  '0': /\\d/,\r\n  'a': /[\\u0041-\\u005A\\u0061-\\u007A\\u00AA\\u00B5\\u00BA\\u00C0-\\u00D6\\u00D8-\\u00F6\\u00F8-\\u02C1\\u02C6-\\u02D1\\u02E0-\\u02E4\\u02EC\\u02EE\\u0370-\\u0374\\u0376\\u0377\\u037A-\\u037D\\u0386\\u0388-\\u038A\\u038C\\u038E-\\u03A1\\u03A3-\\u03F5\\u03F7-\\u0481\\u048A-\\u0527\\u0531-\\u0556\\u0559\\u0561-\\u0587\\u05D0-\\u05EA\\u05F0-\\u05F2\\u0620-\\u064A\\u066E\\u066F\\u0671-\\u06D3\\u06D5\\u06E5\\u06E6\\u06EE\\u06EF\\u06FA-\\u06FC\\u06FF\\u0710\\u0712-\\u072F\\u074D-\\u07A5\\u07B1\\u07CA-\\u07EA\\u07F4\\u07F5\\u07FA\\u0800-\\u0815\\u081A\\u0824\\u0828\\u0840-\\u0858\\u08A0\\u08A2-\\u08AC\\u0904-\\u0939\\u093D\\u0950\\u0958-\\u0961\\u0971-\\u0977\\u0979-\\u097F\\u0985-\\u098C\\u098F\\u0990\\u0993-\\u09A8\\u09AA-\\u09B0\\u09B2\\u09B6-\\u09B9\\u09BD\\u09CE\\u09DC\\u09DD\\u09DF-\\u09E1\\u09F0\\u09F1\\u0A05-\\u0A0A\\u0A0F\\u0A10\\u0A13-\\u0A28\\u0A2A-\\u0A30\\u0A32\\u0A33\\u0A35\\u0A36\\u0A38\\u0A39\\u0A59-\\u0A5C\\u0A5E\\u0A72-\\u0A74\\u0A85-\\u0A8D\\u0A8F-\\u0A91\\u0A93-\\u0AA8\\u0AAA-\\u0AB0\\u0AB2\\u0AB3\\u0AB5-\\u0AB9\\u0ABD\\u0AD0\\u0AE0\\u0AE1\\u0B05-\\u0B0C\\u0B0F\\u0B10\\u0B13-\\u0B28\\u0B2A-\\u0B30\\u0B32\\u0B33\\u0B35-\\u0B39\\u0B3D\\u0B5C\\u0B5D\\u0B5F-\\u0B61\\u0B71\\u0B83\\u0B85-\\u0B8A\\u0B8E-\\u0B90\\u0B92-\\u0B95\\u0B99\\u0B9A\\u0B9C\\u0B9E\\u0B9F\\u0BA3\\u0BA4\\u0BA8-\\u0BAA\\u0BAE-\\u0BB9\\u0BD0\\u0C05-\\u0C0C\\u0C0E-\\u0C10\\u0C12-\\u0C28\\u0C2A-\\u0C33\\u0C35-\\u0C39\\u0C3D\\u0C58\\u0C59\\u0C60\\u0C61\\u0C85-\\u0C8C\\u0C8E-\\u0C90\\u0C92-\\u0CA8\\u0CAA-\\u0CB3\\u0CB5-\\u0CB9\\u0CBD\\u0CDE\\u0CE0\\u0CE1\\u0CF1\\u0CF2\\u0D05-\\u0D0C\\u0D0E-\\u0D10\\u0D12-\\u0D3A\\u0D3D\\u0D4E\\u0D60\\u0D61\\u0D7A-\\u0D7F\\u0D85-\\u0D96\\u0D9A-\\u0DB1\\u0DB3-\\u0DBB\\u0DBD\\u0DC0-\\u0DC6\\u0E01-\\u0E30\\u0E32\\u0E33\\u0E40-\\u0E46\\u0E81\\u0E82\\u0E84\\u0E87\\u0E88\\u0E8A\\u0E8D\\u0E94-\\u0E97\\u0E99-\\u0E9F\\u0EA1-\\u0EA3\\u0EA5\\u0EA7\\u0EAA\\u0EAB\\u0EAD-\\u0EB0\\u0EB2\\u0EB3\\u0EBD\\u0EC0-\\u0EC4\\u0EC6\\u0EDC-\\u0EDF\\u0F00\\u0F40-\\u0F47\\u0F49-\\u0F6C\\u0F88-\\u0F8C\\u1000-\\u102A\\u103F\\u1050-\\u1055\\u105A-\\u105D\\u1061\\u1065\\u1066\\u106E-\\u1070\\u1075-\\u1081\\u108E\\u10A0-\\u10C5\\u10C7\\u10CD\\u10D0-\\u10FA\\u10FC-\\u1248\\u124A-\\u124D\\u1250-\\u1256\\u1258\\u125A-\\u125D\\u1260-\\u1288\\u128A-\\u128D\\u1290-\\u12B0\\u12B2-\\u12B5\\u12B8-\\u12BE\\u12C0\\u12C2-\\u12C5\\u12C8-\\u12D6\\u12D8-\\u1310\\u1312-\\u1315\\u1318-\\u135A\\u1380-\\u138F\\u13A0-\\u13F4\\u1401-\\u166C\\u166F-\\u167F\\u1681-\\u169A\\u16A0-\\u16EA\\u1700-\\u170C\\u170E-\\u1711\\u1720-\\u1731\\u1740-\\u1751\\u1760-\\u176C\\u176E-\\u1770\\u1780-\\u17B3\\u17D7\\u17DC\\u1820-\\u1877\\u1880-\\u18A8\\u18AA\\u18B0-\\u18F5\\u1900-\\u191C\\u1950-\\u196D\\u1970-\\u1974\\u1980-\\u19AB\\u19C1-\\u19C7\\u1A00-\\u1A16\\u1A20-\\u1A54\\u1AA7\\u1B05-\\u1B33\\u1B45-\\u1B4B\\u1B83-\\u1BA0\\u1BAE\\u1BAF\\u1BBA-\\u1BE5\\u1C00-\\u1C23\\u1C4D-\\u1C4F\\u1C5A-\\u1C7D\\u1CE9-\\u1CEC\\u1CEE-\\u1CF1\\u1CF5\\u1CF6\\u1D00-\\u1DBF\\u1E00-\\u1F15\\u1F18-\\u1F1D\\u1F20-\\u1F45\\u1F48-\\u1F4D\\u1F50-\\u1F57\\u1F59\\u1F5B\\u1F5D\\u1F5F-\\u1F7D\\u1F80-\\u1FB4\\u1FB6-\\u1FBC\\u1FBE\\u1FC2-\\u1FC4\\u1FC6-\\u1FCC\\u1FD0-\\u1FD3\\u1FD6-\\u1FDB\\u1FE0-\\u1FEC\\u1FF2-\\u1FF4\\u1FF6-\\u1FFC\\u2071\\u207F\\u2090-\\u209C\\u2102\\u2107\\u210A-\\u2113\\u2115\\u2119-\\u211D\\u2124\\u2126\\u2128\\u212A-\\u212D\\u212F-\\u2139\\u213C-\\u213F\\u2145-\\u2149\\u214E\\u2183\\u2184\\u2C00-\\u2C2E\\u2C30-\\u2C5E\\u2C60-\\u2CE4\\u2CEB-\\u2CEE\\u2CF2\\u2CF3\\u2D00-\\u2D25\\u2D27\\u2D2D\\u2D30-\\u2D67\\u2D6F\\u2D80-\\u2D96\\u2DA0-\\u2DA6\\u2DA8-\\u2DAE\\u2DB0-\\u2DB6\\u2DB8-\\u2DBE\\u2DC0-\\u2DC6\\u2DC8-\\u2DCE\\u2DD0-\\u2DD6\\u2DD8-\\u2DDE\\u2E2F\\u3005\\u3006\\u3031-\\u3035\\u303B\\u303C\\u3041-\\u3096\\u309D-\\u309F\\u30A1-\\u30FA\\u30FC-\\u30FF\\u3105-\\u312D\\u3131-\\u318E\\u31A0-\\u31BA\\u31F0-\\u31FF\\u3400-\\u4DB5\\u4E00-\\u9FCC\\uA000-\\uA48C\\uA4D0-\\uA4FD\\uA500-\\uA60C\\uA610-\\uA61F\\uA62A\\uA62B\\uA640-\\uA66E\\uA67F-\\uA697\\uA6A0-\\uA6E5\\uA717-\\uA71F\\uA722-\\uA788\\uA78B-\\uA78E\\uA790-\\uA793\\uA7A0-\\uA7AA\\uA7F8-\\uA801\\uA803-\\uA805\\uA807-\\uA80A\\uA80C-\\uA822\\uA840-\\uA873\\uA882-\\uA8B3\\uA8F2-\\uA8F7\\uA8FB\\uA90A-\\uA925\\uA930-\\uA946\\uA960-\\uA97C\\uA984-\\uA9B2\\uA9CF\\uAA00-\\uAA28\\uAA40-\\uAA42\\uAA44-\\uAA4B\\uAA60-\\uAA76\\uAA7A\\uAA80-\\uAAAF\\uAAB1\\uAAB5\\uAAB6\\uAAB9-\\uAABD\\uAAC0\\uAAC2\\uAADB-\\uAADD\\uAAE0-\\uAAEA\\uAAF2-\\uAAF4\\uAB01-\\uAB06\\uAB09-\\uAB0E\\uAB11-\\uAB16\\uAB20-\\uAB26\\uAB28-\\uAB2E\\uABC0-\\uABE2\\uAC00-\\uD7A3\\uD7B0-\\uD7C6\\uD7CB-\\uD7FB\\uF900-\\uFA6D\\uFA70-\\uFAD9\\uFB00-\\uFB06\\uFB13-\\uFB17\\uFB1D\\uFB1F-\\uFB28\\uFB2A-\\uFB36\\uFB38-\\uFB3C\\uFB3E\\uFB40\\uFB41\\uFB43\\uFB44\\uFB46-\\uFBB1\\uFBD3-\\uFD3D\\uFD50-\\uFD8F\\uFD92-\\uFDC7\\uFDF0-\\uFDFB\\uFE70-\\uFE74\\uFE76-\\uFEFC\\uFF21-\\uFF3A\\uFF41-\\uFF5A\\uFF66-\\uFFBE\\uFFC2-\\uFFC7\\uFFCA-\\uFFCF\\uFFD2-\\uFFD7\\uFFDA-\\uFFDC]/,  // http://stackoverflow.com/a/22075070\r\n  '*': /./\r\n};\r\nPatternDefinition.TYPES = {\r\n  INPUT: 'input',\r\n  FIXED: 'fixed'\r\n};\r\n",
    "static": true,
    "longname": "C:/Projects/imaskjs/src/masked/pattern/definition.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 292,
    "kind": "class",
    "name": "PatternDefinition",
    "memberof": "src/masked/pattern/definition.js",
    "static": true,
    "longname": "src/masked/pattern/definition.js~PatternDefinition",
    "access": "public",
    "export": true,
    "importPath": "imask/src/masked/pattern/definition.js",
    "importStyle": "PatternDefinition",
    "description": null,
    "lineNumber": 12,
    "undocument": true,
    "interface": false
  },
  {
    "__docId__": 293,
    "kind": "member",
    "name": "TYPES",
    "memberof": "src/masked/pattern/definition.js~PatternDefinition",
    "static": true,
    "longname": "src/masked/pattern/definition.js~PatternDefinition.TYPES",
    "access": "public",
    "description": "",
    "lineNumber": 13,
    "type": {
      "nullable": null,
      "types": [
        "DefinitionTypes"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 294,
    "kind": "member",
    "name": "DEFAULTS",
    "memberof": "src/masked/pattern/definition.js~PatternDefinition",
    "static": true,
    "longname": "src/masked/pattern/definition.js~PatternDefinition.DEFAULTS",
    "access": "public",
    "description": "",
    "lineNumber": 14,
    "type": {
      "nullable": null,
      "types": [
        "Definitions"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 295,
    "kind": "member",
    "name": "char",
    "memberof": "src/masked/pattern/definition.js~PatternDefinition",
    "static": false,
    "longname": "src/masked/pattern/definition.js~PatternDefinition#char",
    "access": "public",
    "description": "",
    "lineNumber": 16,
    "type": {
      "nullable": null,
      "types": [
        "nullable"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 296,
    "kind": "member",
    "name": "stopAlign",
    "memberof": "src/masked/pattern/definition.js~PatternDefinition",
    "static": false,
    "longname": "src/masked/pattern/definition.js~PatternDefinition#stopAlign",
    "access": "public",
    "description": "",
    "lineNumber": 17,
    "type": {
      "nullable": null,
      "types": [
        "nullable"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 297,
    "kind": "member",
    "name": "optional",
    "memberof": "src/masked/pattern/definition.js~PatternDefinition",
    "static": false,
    "longname": "src/masked/pattern/definition.js~PatternDefinition#optional",
    "access": "public",
    "description": "",
    "lineNumber": 18,
    "type": {
      "nullable": null,
      "types": [
        "boolean"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 298,
    "kind": "member",
    "name": "isHollow",
    "memberof": "src/masked/pattern/definition.js~PatternDefinition",
    "static": false,
    "longname": "src/masked/pattern/definition.js~PatternDefinition#isHollow",
    "access": "public",
    "description": "",
    "lineNumber": 19,
    "type": {
      "nullable": null,
      "types": [
        "boolean"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 299,
    "kind": "member",
    "name": "isRawInput",
    "memberof": "src/masked/pattern/definition.js~PatternDefinition",
    "static": false,
    "longname": "src/masked/pattern/definition.js~PatternDefinition#isRawInput",
    "access": "public",
    "description": "",
    "lineNumber": 20,
    "type": {
      "nullable": null,
      "types": [
        "boolean"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 300,
    "kind": "member",
    "name": "type",
    "memberof": "src/masked/pattern/definition.js~PatternDefinition",
    "static": false,
    "longname": "src/masked/pattern/definition.js~PatternDefinition#type",
    "access": "public",
    "description": "",
    "lineNumber": 21,
    "type": {
      "nullable": null,
      "types": [
        "DefinitionType"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 301,
    "kind": "member",
    "name": "_masked",
    "memberof": "src/masked/pattern/definition.js~PatternDefinition",
    "static": false,
    "longname": "src/masked/pattern/definition.js~PatternDefinition#_masked",
    "access": "private",
    "description": "",
    "lineNumber": 22,
    "type": {
      "nullable": null,
      "types": [
        "Masked"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 302,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "src/masked/pattern/definition.js~PatternDefinition",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/masked/pattern/definition.js~PatternDefinition#constructor",
    "access": "public",
    "description": null,
    "lineNumber": 24,
    "undocument": true
  },
  {
    "__docId__": 304,
    "kind": "method",
    "name": "reset",
    "memberof": "src/masked/pattern/definition.js~PatternDefinition",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/masked/pattern/definition.js~PatternDefinition#reset",
    "access": "public",
    "description": "",
    "lineNumber": 32,
    "params": [],
    "return": null
  },
  {
    "__docId__": 307,
    "kind": "get",
    "name": "isInput",
    "memberof": "src/masked/pattern/definition.js~PatternDefinition",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/masked/pattern/definition.js~PatternDefinition#isInput",
    "access": "public",
    "description": "",
    "lineNumber": 38,
    "type": {
      "nullable": null,
      "types": [
        "boolean"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 308,
    "kind": "get",
    "name": "isHiddenHollow",
    "memberof": "src/masked/pattern/definition.js~PatternDefinition",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/masked/pattern/definition.js~PatternDefinition#isHiddenHollow",
    "access": "public",
    "description": "",
    "lineNumber": 42,
    "type": {
      "nullable": null,
      "types": [
        "boolean"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 309,
    "kind": "method",
    "name": "resolve",
    "memberof": "src/masked/pattern/definition.js~PatternDefinition",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/masked/pattern/definition.js~PatternDefinition#resolve",
    "access": "public",
    "description": " ",
    "lineNumber": 46,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "ch",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "union"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 310,
    "kind": "file",
    "name": "src/masked/pattern/group.js",
    "content": "// @flow\r\nimport type MaskedPattern from '../pattern.js';\r\nimport {type AppendFlags} from '../base.js';\r\n\r\n\r\n/** */\r\nexport\r\ninterface PatternGroupTemplate {\r\n  validate: $PropertyType<PatternGroup, 'validate'>;\r\n  mask: $PropertyType<PatternGroup, 'mask'>;\r\n}\r\n\r\n/** */\r\ntype PatternGroupOptions = PatternGroupTemplate & {\r\n  name: $PropertyType<PatternGroup, 'name'>,\r\n  offset: $PropertyType<PatternGroup, 'offset'>,\r\n};\r\n\r\n/**  */\r\nexport default\r\nclass PatternGroup {\r\n  /** */\r\n  static Range: Class<RangeGroup>;\r\n  /** */\r\n  static Enum: Class<EnumGroup>;\r\n\r\n  /** Internal {@link masked} model */\r\n  masked: MaskedPattern;\r\n  /** Group name */\r\n  name: string;\r\n  /** Group offset in masked definitions array */\r\n  offset: number;\r\n  /** Group mask */\r\n  mask: string;\r\n  /** Custom group validator */\r\n  validate: (string, PatternGroup, AppendFlags) => boolean;\r\n\r\n  /**\r\n    @param {MaskedPattern} masked\r\n    @param {{name: string, offset: number, mask: string, validate: ?Function}} opts\r\n  */\r\n  constructor(masked: MaskedPattern, {name, offset, mask, validate}: PatternGroupOptions) {\r\n    this.masked = masked;\r\n    this.name = name;\r\n    this.offset = offset;\r\n    this.mask = mask;\r\n    this.validate = validate || (() => true);\r\n  }\r\n\r\n  /** Slice of internal {@link masked} value */\r\n  get value (): string {\r\n    return this.masked.value.slice(\r\n      this.masked.mapDefIndexToPos(this.offset),\r\n      this.masked.mapDefIndexToPos(this.offset + this.mask.length));\r\n  }\r\n\r\n  /** Unmasked slice of internal {@link masked} value */\r\n  get unmaskedValue (): string {\r\n    return this.masked.extractInput(\r\n      this.masked.mapDefIndexToPos(this.offset),\r\n      this.masked.mapDefIndexToPos(this.offset + this.mask.length));\r\n  }\r\n\r\n  /** Validates if current value is acceptable */\r\n  doValidate (flags: AppendFlags) {\r\n    return this.validate(this.value, this, flags);\r\n  }\r\n}\r\n\r\n/** Pattern group that validates number ranges */\r\nexport\r\nclass RangeGroup implements PatternGroupTemplate {\r\n  /** @type {string} */\r\n  mask: $PropertyType<PatternGroup, 'mask'>;\r\n  /** @type {Function} */\r\n  validate: $PropertyType<PatternGroup, 'validate'>;\r\n  _maxLength: number;\r\n  _from: number;\r\n  _to: number;\r\n\r\n  /**\r\n    @param {number[]} range - [from, to]\r\n    @param {?number} maxlen - Maximum number length, will be padded with leading zeros\r\n  */\r\n  constructor ([from, to]: [number, number], maxlen: number=String(to).length) {\r\n    this._from = from;\r\n    this._to = to;\r\n    this._maxLength = maxlen;\r\n    this.validate = this.validate.bind(this);\r\n\r\n    this._update();\r\n  }\r\n\r\n  get to (): number {\r\n    return this._to;\r\n  }\r\n\r\n  set to (to: number) {\r\n    this._to = to;\r\n    this._update();\r\n  }\r\n\r\n  get from (): number {\r\n    return this._from;\r\n  }\r\n\r\n  set from (from: number) {\r\n    this._from = from;\r\n    this._update();\r\n  }\r\n\r\n  get maxLength (): number {\r\n    return this._maxLength;\r\n  }\r\n\r\n  set maxLength (maxLength: number) {\r\n    this._maxLength = maxLength;\r\n    this._update();\r\n  }\r\n\r\n  get _matchFrom (): number {\r\n    return this.maxLength - String(this.from).length;\r\n  }\r\n\r\n  _update() {\r\n    this._maxLength = Math.max(this._maxLength, String(this.to).length);\r\n    this.mask = '0'.repeat(this._maxLength);\r\n  }\r\n\r\n  validate (str: string): boolean {\r\n    let minstr = '';\r\n    let maxstr = '';\r\n\r\n    const [, placeholder, num] = str.match(/^(\\D*)(\\d*)(\\D*)/) || [];\r\n    if (num) {\r\n      minstr = ('0'.repeat(placeholder.length) + num);\r\n      maxstr = ('9'.repeat(placeholder.length) + num);\r\n    }\r\n\r\n    const firstNonZero = str.search(/[^0]/);\r\n    if (firstNonZero === -1 && str.length <= this._matchFrom) return true;\r\n\r\n    minstr = minstr.padEnd(this._maxLength, '0');\r\n    maxstr = maxstr.padEnd(this._maxLength, '9');\r\n\r\n    return this.from <= Number(maxstr) && Number(minstr) <= this.to;\r\n  }\r\n}\r\n\r\n/** Pattern group that validates enum values */\r\nexport\r\nfunction EnumGroup (enums: Array<string>): PatternGroupTemplate {\r\n  return {\r\n    mask: '*'.repeat(enums[0].length),\r\n    validate: (value: string, group: PatternGroup, flags: AppendFlags) => enums.some(e => e.indexOf(group.unmaskedValue) >= 0)\r\n  };\r\n}\r\n\r\nPatternGroup.Range = RangeGroup;\r\nPatternGroup.Enum = EnumGroup;\r\n",
    "static": true,
    "longname": "C:/Projects/imaskjs/src/masked/pattern/group.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 311,
    "kind": "class",
    "name": "PatternGroup",
    "memberof": "src/masked/pattern/group.js",
    "static": true,
    "longname": "src/masked/pattern/group.js~PatternGroup",
    "access": "public",
    "export": true,
    "importPath": "imask/src/masked/pattern/group.js",
    "importStyle": "PatternGroup",
    "description": "",
    "lineNumber": 21,
    "interface": false
  },
  {
    "__docId__": 312,
    "kind": "member",
    "name": "Range",
    "memberof": "src/masked/pattern/group.js~PatternGroup",
    "static": true,
    "longname": "src/masked/pattern/group.js~PatternGroup.Range",
    "access": "public",
    "description": " ",
    "lineNumber": 23,
    "type": {
      "nullable": null,
      "types": [
        "Class"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 313,
    "kind": "member",
    "name": "Enum",
    "memberof": "src/masked/pattern/group.js~PatternGroup",
    "static": true,
    "longname": "src/masked/pattern/group.js~PatternGroup.Enum",
    "access": "public",
    "description": " ",
    "lineNumber": 25,
    "type": {
      "nullable": null,
      "types": [
        "Class"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 314,
    "kind": "member",
    "name": "masked",
    "memberof": "src/masked/pattern/group.js~PatternGroup",
    "static": false,
    "longname": "src/masked/pattern/group.js~PatternGroup#masked",
    "access": "public",
    "description": "Internal {@link masked} model ",
    "lineNumber": 28,
    "type": {
      "nullable": null,
      "types": [
        "MaskedPattern"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 315,
    "kind": "member",
    "name": "name",
    "memberof": "src/masked/pattern/group.js~PatternGroup",
    "static": false,
    "longname": "src/masked/pattern/group.js~PatternGroup#name",
    "access": "public",
    "description": "Group name ",
    "lineNumber": 30,
    "type": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 316,
    "kind": "member",
    "name": "offset",
    "memberof": "src/masked/pattern/group.js~PatternGroup",
    "static": false,
    "longname": "src/masked/pattern/group.js~PatternGroup#offset",
    "access": "public",
    "description": "Group offset in masked definitions array ",
    "lineNumber": 32,
    "type": {
      "nullable": null,
      "types": [
        "number"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 317,
    "kind": "member",
    "name": "mask",
    "memberof": "src/masked/pattern/group.js~PatternGroup",
    "static": false,
    "longname": "src/masked/pattern/group.js~PatternGroup#mask",
    "access": "public",
    "description": "Group mask ",
    "lineNumber": 34,
    "type": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 318,
    "kind": "member",
    "name": "validate",
    "memberof": "src/masked/pattern/group.js~PatternGroup",
    "static": false,
    "longname": "src/masked/pattern/group.js~PatternGroup#validate",
    "access": "public",
    "description": "Custom group validator ",
    "lineNumber": 36,
    "type": {
      "nullable": null,
      "types": [
        "function"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 319,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "src/masked/pattern/group.js~PatternGroup",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/masked/pattern/group.js~PatternGroup#constructor",
    "access": "public",
    "description": "",
    "lineNumber": 42,
    "params": [
      {
        "nullable": null,
        "types": [
          "MaskedPattern"
        ],
        "spread": false,
        "optional": false,
        "name": "masked",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "{name: string, offset: number, mask: string, validate: ?Function}"
        ],
        "spread": false,
        "optional": false,
        "name": "opts",
        "description": ""
      }
    ]
  },
  {
    "__docId__": 325,
    "kind": "get",
    "name": "value",
    "memberof": "src/masked/pattern/group.js~PatternGroup",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/masked/pattern/group.js~PatternGroup#value",
    "access": "public",
    "description": "Slice of internal {@link masked} value ",
    "lineNumber": 51,
    "type": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 326,
    "kind": "get",
    "name": "unmaskedValue",
    "memberof": "src/masked/pattern/group.js~PatternGroup",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/masked/pattern/group.js~PatternGroup#unmaskedValue",
    "access": "public",
    "description": "Unmasked slice of internal {@link masked} value ",
    "lineNumber": 58,
    "type": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 327,
    "kind": "method",
    "name": "doValidate",
    "memberof": "src/masked/pattern/group.js~PatternGroup",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/masked/pattern/group.js~PatternGroup#doValidate",
    "access": "public",
    "description": "Validates if current value is acceptable ",
    "lineNumber": 65,
    "params": [
      {
        "nullable": null,
        "types": [
          "AppendFlags"
        ],
        "spread": false,
        "optional": false,
        "name": "flags",
        "description": ""
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 328,
    "kind": "class",
    "name": "RangeGroup",
    "memberof": "src/masked/pattern/group.js",
    "static": true,
    "longname": "src/masked/pattern/group.js~RangeGroup",
    "access": "public",
    "export": true,
    "importPath": "imask/src/masked/pattern/group.js",
    "importStyle": "{RangeGroup}",
    "description": "Pattern group that validates number ranges",
    "lineNumber": 72,
    "interface": false
  },
  {
    "__docId__": 329,
    "kind": "member",
    "name": "mask",
    "memberof": "src/masked/pattern/group.js~RangeGroup",
    "static": false,
    "longname": "src/masked/pattern/group.js~RangeGroup#mask",
    "access": "public",
    "description": "",
    "lineNumber": 74,
    "type": {
      "nullable": null,
      "types": [
        "$PropertyType"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 331,
    "kind": "member",
    "name": "_maxLength",
    "memberof": "src/masked/pattern/group.js~RangeGroup",
    "static": false,
    "longname": "src/masked/pattern/group.js~RangeGroup#_maxLength",
    "access": "private",
    "description": "",
    "lineNumber": 77,
    "type": {
      "nullable": null,
      "types": [
        "number"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 332,
    "kind": "member",
    "name": "_from",
    "memberof": "src/masked/pattern/group.js~RangeGroup",
    "static": false,
    "longname": "src/masked/pattern/group.js~RangeGroup#_from",
    "access": "private",
    "description": "",
    "lineNumber": 78,
    "type": {
      "nullable": null,
      "types": [
        "number"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 333,
    "kind": "member",
    "name": "_to",
    "memberof": "src/masked/pattern/group.js~RangeGroup",
    "static": false,
    "longname": "src/masked/pattern/group.js~RangeGroup#_to",
    "access": "private",
    "description": "",
    "lineNumber": 79,
    "type": {
      "nullable": null,
      "types": [
        "number"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 334,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "src/masked/pattern/group.js~RangeGroup",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/masked/pattern/group.js~RangeGroup#constructor",
    "access": "public",
    "description": "",
    "lineNumber": 85,
    "params": [
      {
        "nullable": null,
        "types": [
          "number[]"
        ],
        "spread": false,
        "optional": false,
        "name": "range",
        "description": "[from, to]"
      },
      {
        "nullable": true,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "maxlen",
        "description": "Maximum number length, will be padded with leading zeros"
      }
    ]
  },
  {
    "__docId__": 339,
    "kind": "get",
    "name": "to",
    "memberof": "src/masked/pattern/group.js~RangeGroup",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/masked/pattern/group.js~RangeGroup#to",
    "access": "public",
    "description": "",
    "lineNumber": 94,
    "type": {
      "nullable": null,
      "types": [
        "number"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 340,
    "kind": "set",
    "name": "to",
    "memberof": "src/masked/pattern/group.js~RangeGroup",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/masked/pattern/group.js~RangeGroup#to",
    "access": "public",
    "description": "",
    "lineNumber": 98,
    "type": {
      "nullable": null,
      "types": [
        "number"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 342,
    "kind": "get",
    "name": "from",
    "memberof": "src/masked/pattern/group.js~RangeGroup",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/masked/pattern/group.js~RangeGroup#from",
    "access": "public",
    "description": "",
    "lineNumber": 103,
    "type": {
      "nullable": null,
      "types": [
        "number"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 343,
    "kind": "set",
    "name": "from",
    "memberof": "src/masked/pattern/group.js~RangeGroup",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/masked/pattern/group.js~RangeGroup#from",
    "access": "public",
    "description": "",
    "lineNumber": 107,
    "type": {
      "nullable": null,
      "types": [
        "number"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 345,
    "kind": "get",
    "name": "maxLength",
    "memberof": "src/masked/pattern/group.js~RangeGroup",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/masked/pattern/group.js~RangeGroup#maxLength",
    "access": "public",
    "description": "",
    "lineNumber": 112,
    "type": {
      "nullable": null,
      "types": [
        "number"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 346,
    "kind": "set",
    "name": "maxLength",
    "memberof": "src/masked/pattern/group.js~RangeGroup",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/masked/pattern/group.js~RangeGroup#maxLength",
    "access": "public",
    "description": "",
    "lineNumber": 116,
    "type": {
      "nullable": null,
      "types": [
        "number"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 348,
    "kind": "get",
    "name": "_matchFrom",
    "memberof": "src/masked/pattern/group.js~RangeGroup",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/masked/pattern/group.js~RangeGroup#_matchFrom",
    "access": "private",
    "description": "",
    "lineNumber": 121,
    "type": {
      "nullable": null,
      "types": [
        "number"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 349,
    "kind": "method",
    "name": "_update",
    "memberof": "src/masked/pattern/group.js~RangeGroup",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/masked/pattern/group.js~RangeGroup#_update",
    "access": "private",
    "description": "",
    "lineNumber": 125,
    "params": [],
    "return": null
  },
  {
    "__docId__": 352,
    "kind": "method",
    "name": "validate",
    "memberof": "src/masked/pattern/group.js~RangeGroup",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/masked/pattern/group.js~RangeGroup#validate",
    "access": "public",
    "description": " ",
    "lineNumber": 130,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "str",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "boolean"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 353,
    "kind": "function",
    "name": "EnumGroup",
    "memberof": "src/masked/pattern/group.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/masked/pattern/group.js~EnumGroup",
    "access": "public",
    "export": true,
    "importPath": "imask/src/masked/pattern/group.js",
    "importStyle": "{EnumGroup}",
    "description": "Pattern group that validates enum values",
    "lineNumber": 152,
    "params": [
      {
        "name": "enums",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "{\"mask\": *, \"validate\": *}"
      ]
    }
  },
  {
    "__docId__": 354,
    "kind": "file",
    "name": "src/masked/pattern.js",
    "content": "// @flow\r\nimport {conform, DIRECTION, indexInDirection, type Direction} from '../core/utils.js';\r\nimport ChangeDetails from '../core/change-details.js';\r\nimport Masked, {type AppendFlags, type ExtractFlags, type MaskedOptions} from './base.js';\r\nimport PatternDefinition from './pattern/definition.js';\r\nimport PatternGroup, {type PatternGroupTemplate} from './pattern/group.js';\r\n\r\n\r\ntype MaskedPatternOptions = {\r\n  ...MaskedOptions<string>,\r\n  definitions: $PropertyType<MaskedPattern, 'definitions'>,\r\n  groups: $PropertyType<MaskedPattern, 'groups'>,\r\n  placeholderChar: $PropertyType<MaskedPattern, 'placeholderChar'>,\r\n  lazy: $PropertyType<MaskedPattern, 'lazy'>,\r\n};\r\ntype InputChunk = [?number, string];\r\n\r\n\r\n/** Pattern mask */\r\nexport default\r\nclass MaskedPattern extends Masked<string> {\r\n  static DEFAULTS: any;\r\n  static STOP_CHAR: string;\r\n  static ESCAPE_CHAR: string;\r\n  static Definition: Class<PatternDefinition>;\r\n  static Group: Class<PatternGroup>;\r\n\r\n  /** */\r\n  groups: {[string]: PatternGroupTemplate};\r\n  /** */\r\n  definitions: {[string]: any};  // TODO mask type\r\n  /** Single char for empty input */\r\n  placeholderChar: string;\r\n  /** Show placeholder only when needed */\r\n  lazy: boolean;\r\n  _charDefs: Array<PatternDefinition>;\r\n  _groupDefs: Array<PatternGroup>;\r\n\r\n  /**\r\n    @param {Object} opts\r\n  */\r\n  constructor (opts: any={}) {  // TODO type $Shape<MaskedPatternOptions>={} does not work\r\n    opts.definitions = Object.assign({}, PatternDefinition.DEFAULTS, opts.definitions);\r\n    super({\r\n      ...MaskedPattern.DEFAULTS,\r\n      ...opts\r\n    });\r\n  }\r\n\r\n  /**\r\n    @override\r\n    @param {Object} opts\r\n  */\r\n  _update (opts: $Shape<MaskedPatternOptions>={}) {\r\n    opts.definitions = Object.assign({}, this.definitions, opts.definitions);\r\n    super._update(opts);\r\n    this._rebuildMask();\r\n  }\r\n\r\n  /** */\r\n  _rebuildMask () {\r\n    const defs = this.definitions;\r\n    this._charDefs = [];\r\n    this._groupDefs = [];\r\n\r\n    let pattern = this.mask;\r\n    if (!pattern || !defs) return;\r\n\r\n    let unmaskingBlock = false;\r\n    let optionalBlock = false;\r\n    let stopAlign = false;\r\n\r\n    for (let i=0; i<pattern.length; ++i) {\r\n      if (this.groups) {\r\n        const p = pattern.slice(i);\r\n        const gNames = Object.keys(this.groups).filter(gName => p.indexOf(gName) === 0);\r\n        // order by key length\r\n        gNames.sort((a, b) => b.length - a.length);\r\n        // use group name with max length\r\n        const gName = gNames[0];\r\n        if (gName) {\r\n          const group = this.groups[gName];\r\n          this._groupDefs.push(new PatternGroup(this, {\r\n            name: gName,\r\n            offset: this._charDefs.length,\r\n            mask: group.mask,\r\n            validate: group.validate,\r\n          }));\r\n          pattern = pattern.replace(gName, group.mask);\r\n        }\r\n      }\r\n\r\n      let char = pattern[i];\r\n      let type = !unmaskingBlock && char in defs ?\r\n        PatternDefinition.TYPES.INPUT :\r\n        PatternDefinition.TYPES.FIXED;\r\n      const unmasking = type === PatternDefinition.TYPES.INPUT || unmaskingBlock;\r\n      const optional = type === PatternDefinition.TYPES.INPUT && optionalBlock;\r\n\r\n      if (char === MaskedPattern.STOP_CHAR) {\r\n        stopAlign = true;\r\n        continue;\r\n      }\r\n\r\n      if (char === '{' || char === '}') {\r\n        unmaskingBlock = !unmaskingBlock;\r\n        continue;\r\n      }\r\n\r\n      if (char === '[' || char === ']') {\r\n        optionalBlock = !optionalBlock;\r\n        continue;\r\n      }\r\n\r\n      if (char === MaskedPattern.ESCAPE_CHAR) {\r\n        ++i;\r\n        char = pattern[i];\r\n        if (!char) break;\r\n        type = PatternDefinition.TYPES.FIXED;\r\n      }\r\n\r\n      this._charDefs.push(new PatternDefinition({\r\n        char,\r\n        type,\r\n        optional,\r\n        stopAlign,\r\n        unmasking,\r\n        mask: type === PatternDefinition.TYPES.INPUT ?\r\n          defs[char] :\r\n          (value => value === char)\r\n      }));\r\n\r\n      stopAlign = false;\r\n    }\r\n  }\r\n\r\n  /**\r\n    @override\r\n  */\r\n  doValidate (...args: *) {\r\n    return this._groupDefs.every(g => g.doValidate(...args)) && super.doValidate(...args);\r\n  }\r\n\r\n  /**\r\n    @override\r\n  */\r\n  clone () {\r\n    const m = new MaskedPattern(this);\r\n    m._value = this.value;\r\n    // $FlowFixMe\r\n    m._charDefs.forEach((d, i) => Object.assign(d, this._charDefs[i]));\r\n    // $FlowFixMe\r\n    m._groupDefs.forEach((d, i) => Object.assign(d, this._groupDefs[i]));\r\n    return m;\r\n  }\r\n\r\n  /**\r\n    @override\r\n  */\r\n  reset () {\r\n    super.reset();\r\n    this._charDefs.forEach(d => {delete d.isHollow;});\r\n  }\r\n\r\n  /**\r\n    @override\r\n  */\r\n  get isComplete (): boolean {\r\n    return !this._charDefs.some((d, i) =>\r\n      d.isInput && !d.optional && (d.isHollow || !this.extractInput(i, i+1)));\r\n  }\r\n\r\n  /** */\r\n  hiddenHollowsBefore (defIndex: number): number {\r\n    return this._charDefs\r\n      .slice(0, defIndex)\r\n      .filter(d => d.isHiddenHollow)\r\n      .length;\r\n  }\r\n\r\n  /** Map definition index to position on view */\r\n  mapDefIndexToPos (defIndex: number): number {\r\n    return defIndex - this.hiddenHollowsBefore(defIndex);\r\n  }\r\n\r\n  /** Map position on view to definition index */\r\n  mapPosToDefIndex (pos: number): number {\r\n    let defIndex = pos;\r\n    for (let di=0; di<this._charDefs.length; ++di) {\r\n      const def = this._charDefs[di];\r\n      if (di >= defIndex) break;\r\n      if (def.isHiddenHollow) ++defIndex;\r\n    }\r\n    return defIndex;\r\n  }\r\n\r\n  /**\r\n    @override\r\n  */\r\n  get unmaskedValue (): string {\r\n    const str = this.value;\r\n    let unmasked = '';\r\n\r\n    for (let ci=0, di=0; ci<str.length && di<this._charDefs.length; ++di) {\r\n      const ch = str[ci];\r\n      const def = this._charDefs[di];\r\n\r\n      if (def.isHiddenHollow) continue;\r\n      if (def.unmasking && !def.isHollow) unmasked += ch;\r\n      ++ci;\r\n    }\r\n\r\n    return unmasked;\r\n  }\r\n\r\n  set unmaskedValue (unmaskedValue: string) {\r\n    super.unmaskedValue = unmaskedValue;\r\n  }\r\n\r\n  /**\r\n    @override\r\n  */\r\n  _appendTail (tail: Array<InputChunk>=[]): ChangeDetails {\r\n    return this._appendChunks(tail, {tail: true}).aggregate(this._appendPlaceholder());\r\n  }\r\n\r\n  /**\r\n    @override\r\n  */\r\n  _append (str: string, flags: AppendFlags={}): ChangeDetails {\r\n    const oldValueLength = this.value.length;\r\n    let rawInserted = '';\r\n    let overflow = false;\r\n\r\n    str = this.doPrepare(str, flags);\r\n\r\n    for (let ci=0, di=this.mapPosToDefIndex(this.value.length); ci < str.length;) {\r\n      const ch = str[ci];\r\n      const def = this._charDefs[di];\r\n\r\n      // check overflow\r\n      if (def == null) {\r\n        overflow = true;\r\n        break;\r\n      }\r\n\r\n      // reset\r\n      def.isHollow = false;\r\n\r\n      let resolved, skipped;\r\n      let chres = conform(def.resolve(ch), ch);\r\n\r\n      if (def.type === PatternDefinition.TYPES.INPUT) {\r\n        if (chres) {\r\n          this._value += chres;\r\n          if (!this.doValidate()) {\r\n            chres = '';\r\n            this._value = this.value.slice(0, -1);\r\n          }\r\n        }\r\n\r\n        resolved = !!chres;\r\n        skipped = !chres && !def.optional;\r\n\r\n        if (!chres) {\r\n          if (!def.optional && !flags.input) {\r\n            this._value += this.placeholderChar;\r\n            skipped = false;\r\n          }\r\n          if (!skipped) def.isHollow = true;\r\n        } else {\r\n          rawInserted += chres;\r\n        }\r\n      } else {\r\n        this._value += def.char;\r\n        resolved = chres && (def.unmasking || flags.input || flags.raw) && !flags.tail;\r\n        def.isRawInput = resolved && (flags.raw || flags.input);\r\n        if (def.isRawInput) rawInserted += def.char;\r\n      }\r\n\r\n      if (!skipped) ++di;\r\n      if (resolved || skipped) ++ci;\r\n    }\r\n\r\n    return new ChangeDetails({\r\n      inserted: this.value.slice(oldValueLength),\r\n      rawInserted,\r\n      overflow\r\n    });\r\n  }\r\n\r\n  /** Appends chunks splitted by stop chars */\r\n  _appendChunks (chunks: Array<InputChunk>, ...args: *) {\r\n    const details = new ChangeDetails();\r\n    for (let ci=0; ci < chunks.length; ++ci) {\r\n      const [fromDefIndex, input] = chunks[ci];\r\n      if (fromDefIndex != null) details.aggregate(this._appendPlaceholder(fromDefIndex));\r\n      if (details.aggregate(this._append(input, ...args)).overflow) break;\r\n    }\r\n    return details;\r\n  }\r\n\r\n  /**\r\n    @override\r\n  */\r\n  _extractTail (fromPos: number=0, toPos: number=this.value.length): Array<InputChunk> {\r\n    return this._extractInputChunks(fromPos, toPos);\r\n  }\r\n\r\n  /**\r\n    @override\r\n  */\r\n  extractInput (fromPos: number=0, toPos: number=this.value.length, flags: ExtractFlags={}): string {\r\n    if (fromPos === toPos) return '';\r\n\r\n    const str = this.value;\r\n    let input = '';\r\n\r\n    const toDefIndex = this.mapPosToDefIndex(toPos);\r\n    for (\r\n      let ci=fromPos, di=this.mapPosToDefIndex(fromPos);\r\n      ci<toPos && ci<str.length && di < toDefIndex;\r\n      ++di\r\n    ) {\r\n      const ch = str[ci];\r\n      const def = this._charDefs[di];\r\n\r\n      if (!def) break;\r\n      if (def.isHiddenHollow) continue;\r\n\r\n      if (def.isInput && !def.isHollow ||\r\n        flags.raw && !def.isInput && def.isRawInput) input += ch;\r\n      ++ci;\r\n    }\r\n    return input;\r\n  }\r\n\r\n  /** Extracts chunks from input splitted by stop chars */\r\n  _extractInputChunks (fromPos: number=0, toPos: number=this.value.length): Array<InputChunk> {\r\n    if (fromPos === toPos) return [];\r\n\r\n    const fromDefIndex = this.mapPosToDefIndex(fromPos);\r\n    const toDefIndex = this.mapPosToDefIndex(toPos);\r\n    const stopDefIndices = this._charDefs\r\n      .map((d, i) => [d, i])\r\n      .slice(fromDefIndex, toDefIndex)\r\n      .filter(([d]) => d.stopAlign)\r\n      .map(([, i]) => i);\r\n\r\n    const stops = [\r\n      fromDefIndex,\r\n      ...stopDefIndices,\r\n      toDefIndex\r\n    ];\r\n\r\n    return stops.map((s, i) => [\r\n      stopDefIndices.indexOf(s) >= 0 ?\r\n        s :\r\n        null,\r\n\r\n      this.extractInput(\r\n        this.mapDefIndexToPos(s),\r\n        this.mapDefIndexToPos(stops[++i]))\r\n    ]).filter(([stop, input]) => stop != null || input);\r\n  }\r\n\r\n  /** Appends placeholder depending on laziness */\r\n  _appendPlaceholder (toDefIndex: ?number): ChangeDetails {\r\n    const oldValueLength = this.value.length;\r\n    const maxDefIndex = toDefIndex || this._charDefs.length;\r\n    for (let di=this.mapPosToDefIndex(this.value.length); di < maxDefIndex; ++di) {\r\n      const def = this._charDefs[di];\r\n      if (def.isInput) def.isHollow = true;\r\n\r\n      if (!this.lazy || toDefIndex) {\r\n        this._value += !def.isInput && def.char != null ?\r\n          def.char :\r\n          !def.optional ?\r\n            this.placeholderChar :\r\n            '';\r\n      }\r\n    }\r\n    return new ChangeDetails({\r\n      inserted: this.value.slice(oldValueLength)\r\n    });\r\n  }\r\n\r\n  /**\r\n    @override\r\n  */\r\n  remove (from: number=0, count: number=this.value.length-from) {\r\n    const to = from + count;\r\n    this._value = this.value.slice(0, from) + this.value.slice(to);\r\n    const fromDefIndex = this.mapPosToDefIndex(from);\r\n    const toDefIndex = this.mapPosToDefIndex(to);\r\n    this._charDefs\r\n      .slice(fromDefIndex, toDefIndex)\r\n      .forEach(d => d.reset());\r\n  }\r\n\r\n  /**\r\n    @override\r\n  */\r\n  nearestInputPos (cursorPos: number, direction: Direction=DIRECTION.NONE) {\r\n    let step = direction || DIRECTION.LEFT;\r\n\r\n    const initialDefIndex = this.mapPosToDefIndex(cursorPos);\r\n    const initialDef = this._charDefs[initialDefIndex];\r\n    let di = initialDefIndex;\r\n\r\n    let firstInputIndex,\r\n        firstFilledInputIndex,\r\n        firstVisibleHollowIndex,\r\n        nextdi;\r\n\r\n    // check if chars at right is acceptable for LEFT and NONE directions\r\n    if (direction !== DIRECTION.RIGHT &&\r\n      (initialDef && initialDef.isInput ||\r\n        // in none direction latest position is acceptable also\r\n        direction === DIRECTION.NONE && cursorPos === this.value.length)) {\r\n      firstInputIndex = initialDefIndex;\r\n      if (initialDef && !initialDef.isHollow) firstFilledInputIndex = initialDefIndex;\r\n    }\r\n\r\n    if ((firstFilledInputIndex == null && direction == DIRECTION.LEFT) || firstInputIndex == null) {\r\n      // search forward\r\n      for (\r\n        nextdi = indexInDirection(di, step);\r\n        0 <= nextdi && nextdi < this._charDefs.length;\r\n        di += step, nextdi += step\r\n      ) {\r\n        const nextDef = this._charDefs[nextdi];\r\n        if (firstInputIndex == null && nextDef.isInput) firstInputIndex = di;\r\n        if (firstVisibleHollowIndex == null && nextDef.isHollow && !nextDef.isHiddenHollow) firstVisibleHollowIndex = di;\r\n        if (nextDef.isInput && !nextDef.isHollow) {\r\n          firstFilledInputIndex = di;\r\n          break;\r\n        }\r\n      }\r\n    }\r\n\r\n    // if has aligned left inside fixed and has came to the start - use start position\r\n    if (direction === DIRECTION.LEFT && di === 0 &&\r\n      (!initialDef || !initialDef.isInput)) firstInputIndex = 0;\r\n\r\n    if (direction !== DIRECTION.RIGHT || firstInputIndex == null) {\r\n      // search backward\r\n      step = -step;\r\n      let overflow = false;\r\n\r\n      // find hollows only before initial pos\r\n      for (\r\n        nextdi = indexInDirection(di, step);\r\n        0 <= nextdi && nextdi < this._charDefs.length;\r\n        di += step, nextdi += step\r\n      ) {\r\n        const nextDef = this._charDefs[nextdi];\r\n        if (nextDef.isInput) {\r\n          firstInputIndex = di;\r\n          if (nextDef.isHollow && !nextDef.isHiddenHollow) break;\r\n        }\r\n\r\n        // if hollow not found before start position - set `overflow`\r\n        // and try to find just any input\r\n        if (di === initialDefIndex) overflow = true;\r\n\r\n        // first input found\r\n        if (overflow && firstInputIndex != null) break;\r\n      }\r\n\r\n      // process overflow\r\n      overflow = overflow || nextdi >= this._charDefs.length;\r\n      if (overflow && firstInputIndex != null) di = firstInputIndex;\r\n    } else if (firstFilledInputIndex == null) {\r\n      // adjust index if delete at right and filled input not found at right\r\n      di = firstVisibleHollowIndex != null ?\r\n        firstVisibleHollowIndex :\r\n        firstInputIndex;\r\n    }\r\n\r\n    return this.mapDefIndexToPos(di);\r\n  }\r\n\r\n  /** Get group by name */\r\n  group (name: string): ?PatternGroup {\r\n    return this.groupsByName(name)[0];\r\n  }\r\n\r\n  /** Get all groups by name */\r\n  groupsByName (name: string): Array<PatternGroup> {\r\n    return this._groupDefs.filter(g => g.name === name);\r\n  }\r\n}\r\nMaskedPattern.DEFAULTS = {\r\n  lazy: true,\r\n  placeholderChar: '_'\r\n};\r\nMaskedPattern.STOP_CHAR = '`';\r\nMaskedPattern.ESCAPE_CHAR = '\\\\';\r\nMaskedPattern.Definition = PatternDefinition;\r\nMaskedPattern.Group = PatternGroup;\r\n",
    "static": true,
    "longname": "C:/Projects/imaskjs/src/masked/pattern.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 355,
    "kind": "class",
    "name": "MaskedPattern",
    "memberof": "src/masked/pattern.js",
    "static": true,
    "longname": "src/masked/pattern.js~MaskedPattern",
    "access": "public",
    "export": true,
    "importPath": "imask/src/masked/pattern.js",
    "importStyle": "MaskedPattern",
    "description": "Pattern mask",
    "lineNumber": 21,
    "interface": false,
    "extends": [
      "src/masked/base.js~Masked"
    ]
  },
  {
    "__docId__": 356,
    "kind": "member",
    "name": "DEFAULTS",
    "memberof": "src/masked/pattern.js~MaskedPattern",
    "static": true,
    "longname": "src/masked/pattern.js~MaskedPattern.DEFAULTS",
    "access": "public",
    "description": "",
    "lineNumber": 22,
    "type": {
      "nullable": null,
      "types": [
        "any"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 357,
    "kind": "member",
    "name": "STOP_CHAR",
    "memberof": "src/masked/pattern.js~MaskedPattern",
    "static": true,
    "longname": "src/masked/pattern.js~MaskedPattern.STOP_CHAR",
    "access": "public",
    "description": "",
    "lineNumber": 23,
    "type": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 358,
    "kind": "member",
    "name": "ESCAPE_CHAR",
    "memberof": "src/masked/pattern.js~MaskedPattern",
    "static": true,
    "longname": "src/masked/pattern.js~MaskedPattern.ESCAPE_CHAR",
    "access": "public",
    "description": "",
    "lineNumber": 24,
    "type": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 359,
    "kind": "member",
    "name": "Definition",
    "memberof": "src/masked/pattern.js~MaskedPattern",
    "static": true,
    "longname": "src/masked/pattern.js~MaskedPattern.Definition",
    "access": "public",
    "description": "",
    "lineNumber": 25,
    "type": {
      "nullable": null,
      "types": [
        "Class"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 360,
    "kind": "member",
    "name": "Group",
    "memberof": "src/masked/pattern.js~MaskedPattern",
    "static": true,
    "longname": "src/masked/pattern.js~MaskedPattern.Group",
    "access": "public",
    "description": "",
    "lineNumber": 26,
    "type": {
      "nullable": null,
      "types": [
        "Class"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 361,
    "kind": "member",
    "name": "groups",
    "memberof": "src/masked/pattern.js~MaskedPattern",
    "static": false,
    "longname": "src/masked/pattern.js~MaskedPattern#groups",
    "access": "public",
    "description": " ",
    "lineNumber": 29,
    "type": {
      "nullable": null,
      "types": [
        "object"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 362,
    "kind": "member",
    "name": "definitions",
    "memberof": "src/masked/pattern.js~MaskedPattern",
    "static": false,
    "longname": "src/masked/pattern.js~MaskedPattern#definitions",
    "access": "public",
    "description": " ",
    "lineNumber": 31,
    "type": {
      "nullable": null,
      "types": [
        "object"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 363,
    "kind": "member",
    "name": "placeholderChar",
    "memberof": "src/masked/pattern.js~MaskedPattern",
    "static": false,
    "longname": "src/masked/pattern.js~MaskedPattern#placeholderChar",
    "access": "public",
    "description": "Single char for empty input ",
    "lineNumber": 33,
    "type": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 364,
    "kind": "member",
    "name": "lazy",
    "memberof": "src/masked/pattern.js~MaskedPattern",
    "static": false,
    "longname": "src/masked/pattern.js~MaskedPattern#lazy",
    "access": "public",
    "description": "Show placeholder only when needed ",
    "lineNumber": 35,
    "type": {
      "nullable": null,
      "types": [
        "boolean"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 365,
    "kind": "member",
    "name": "_charDefs",
    "memberof": "src/masked/pattern.js~MaskedPattern",
    "static": false,
    "longname": "src/masked/pattern.js~MaskedPattern#_charDefs",
    "access": "private",
    "description": "",
    "lineNumber": 36,
    "type": {
      "nullable": null,
      "types": [
        "Array"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 366,
    "kind": "member",
    "name": "_groupDefs",
    "memberof": "src/masked/pattern.js~MaskedPattern",
    "static": false,
    "longname": "src/masked/pattern.js~MaskedPattern#_groupDefs",
    "access": "private",
    "description": "",
    "lineNumber": 37,
    "type": {
      "nullable": null,
      "types": [
        "Array"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 367,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "src/masked/pattern.js~MaskedPattern",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/masked/pattern.js~MaskedPattern#constructor",
    "access": "public",
    "description": "",
    "lineNumber": 42,
    "params": [
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "opts",
        "description": ""
      }
    ]
  },
  {
    "__docId__": 368,
    "kind": "method",
    "name": "_update",
    "memberof": "src/masked/pattern.js~MaskedPattern",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/masked/pattern.js~MaskedPattern#_update",
    "access": "private",
    "description": " ",
    "lineNumber": 54,
    "params": [
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "opts",
        "description": ""
      }
    ],
    "override": true,
    "return": null
  },
  {
    "__docId__": 369,
    "kind": "method",
    "name": "_rebuildMask",
    "memberof": "src/masked/pattern.js~MaskedPattern",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/masked/pattern.js~MaskedPattern#_rebuildMask",
    "access": "private",
    "description": " ",
    "lineNumber": 61,
    "params": [],
    "return": null
  },
  {
    "__docId__": 372,
    "kind": "method",
    "name": "doValidate",
    "memberof": "src/masked/pattern.js~MaskedPattern",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/masked/pattern.js~MaskedPattern#doValidate",
    "access": "public",
    "description": " ",
    "lineNumber": 140,
    "params": [
      {
        "nullable": null,
        "types": [
          "existentialtypeparam"
        ],
        "spread": false,
        "optional": false,
        "name": "undefined",
        "description": ""
      }
    ],
    "override": true,
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 373,
    "kind": "method",
    "name": "clone",
    "memberof": "src/masked/pattern.js~MaskedPattern",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/masked/pattern.js~MaskedPattern#clone",
    "access": "public",
    "description": " ",
    "lineNumber": 147,
    "override": true,
    "params": [],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 374,
    "kind": "method",
    "name": "reset",
    "memberof": "src/masked/pattern.js~MaskedPattern",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/masked/pattern.js~MaskedPattern#reset",
    "access": "public",
    "description": " ",
    "lineNumber": 160,
    "override": true,
    "params": [],
    "return": null
  },
  {
    "__docId__": 375,
    "kind": "get",
    "name": "isComplete",
    "memberof": "src/masked/pattern.js~MaskedPattern",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/masked/pattern.js~MaskedPattern#isComplete",
    "access": "public",
    "description": " ",
    "lineNumber": 168,
    "type": {
      "nullable": null,
      "types": [
        "boolean"
      ],
      "spread": false,
      "description": null
    },
    "override": true
  },
  {
    "__docId__": 376,
    "kind": "method",
    "name": "hiddenHollowsBefore",
    "memberof": "src/masked/pattern.js~MaskedPattern",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/masked/pattern.js~MaskedPattern#hiddenHollowsBefore",
    "access": "public",
    "description": "  ",
    "lineNumber": 174,
    "params": [
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "defIndex",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "number"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 377,
    "kind": "method",
    "name": "mapDefIndexToPos",
    "memberof": "src/masked/pattern.js~MaskedPattern",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/masked/pattern.js~MaskedPattern#mapDefIndexToPos",
    "access": "public",
    "description": "Map definition index to position on view  ",
    "lineNumber": 182,
    "params": [
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "defIndex",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "number"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 378,
    "kind": "method",
    "name": "mapPosToDefIndex",
    "memberof": "src/masked/pattern.js~MaskedPattern",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/masked/pattern.js~MaskedPattern#mapPosToDefIndex",
    "access": "public",
    "description": "Map position on view to definition index  ",
    "lineNumber": 187,
    "params": [
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "pos",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "number"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 379,
    "kind": "get",
    "name": "unmaskedValue",
    "memberof": "src/masked/pattern.js~MaskedPattern",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/masked/pattern.js~MaskedPattern#unmaskedValue",
    "access": "public",
    "description": " ",
    "lineNumber": 200,
    "type": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": null
    },
    "override": true
  },
  {
    "__docId__": 380,
    "kind": "set",
    "name": "unmaskedValue",
    "memberof": "src/masked/pattern.js~MaskedPattern",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/masked/pattern.js~MaskedPattern#unmaskedValue",
    "access": "public",
    "description": "",
    "lineNumber": 216,
    "type": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 381,
    "kind": "method",
    "name": "_appendTail",
    "memberof": "src/masked/pattern.js~MaskedPattern",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/masked/pattern.js~MaskedPattern#_appendTail",
    "access": "private",
    "description": "  ",
    "lineNumber": 223,
    "params": [
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "undefined",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "ChangeDetails"
      ],
      "spread": false,
      "description": ""
    },
    "override": true
  },
  {
    "__docId__": 382,
    "kind": "method",
    "name": "_append",
    "memberof": "src/masked/pattern.js~MaskedPattern",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/masked/pattern.js~MaskedPattern#_append",
    "access": "private",
    "description": "  ",
    "lineNumber": 230,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "str",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "undefined",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "ChangeDetails"
      ],
      "spread": false,
      "description": ""
    },
    "override": true
  },
  {
    "__docId__": 383,
    "kind": "member",
    "name": "_value",
    "memberof": "src/masked/pattern.js~MaskedPattern",
    "static": false,
    "longname": "src/masked/pattern.js~MaskedPattern#_value",
    "access": "private",
    "description": null,
    "lineNumber": 255,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 387,
    "kind": "method",
    "name": "_appendChunks",
    "memberof": "src/masked/pattern.js~MaskedPattern",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/masked/pattern.js~MaskedPattern#_appendChunks",
    "access": "private",
    "description": "Appends chunks splitted by stop chars ",
    "lineNumber": 293,
    "params": [
      {
        "nullable": null,
        "types": [
          "Array"
        ],
        "spread": false,
        "optional": false,
        "name": "chunks",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "existentialtypeparam"
        ],
        "spread": false,
        "optional": false,
        "name": "undefined",
        "description": ""
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 388,
    "kind": "method",
    "name": "_extractTail",
    "memberof": "src/masked/pattern.js~MaskedPattern",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/masked/pattern.js~MaskedPattern#_extractTail",
    "access": "private",
    "description": "  ",
    "lineNumber": 306,
    "params": [
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "undefined",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "undefined",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Array"
      ],
      "spread": false,
      "description": ""
    },
    "override": true
  },
  {
    "__docId__": 389,
    "kind": "method",
    "name": "extractInput",
    "memberof": "src/masked/pattern.js~MaskedPattern",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/masked/pattern.js~MaskedPattern#extractInput",
    "access": "public",
    "description": "  ",
    "lineNumber": 313,
    "params": [
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "undefined",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "undefined",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "undefined",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": ""
    },
    "override": true
  },
  {
    "__docId__": 390,
    "kind": "method",
    "name": "_extractInputChunks",
    "memberof": "src/masked/pattern.js~MaskedPattern",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/masked/pattern.js~MaskedPattern#_extractInputChunks",
    "access": "private",
    "description": "Extracts chunks from input splitted by stop chars  ",
    "lineNumber": 339,
    "params": [
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "undefined",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "undefined",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Array"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 391,
    "kind": "method",
    "name": "_appendPlaceholder",
    "memberof": "src/masked/pattern.js~MaskedPattern",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/masked/pattern.js~MaskedPattern#_appendPlaceholder",
    "access": "private",
    "description": "Appends placeholder depending on laziness  ",
    "lineNumber": 368,
    "params": [
      {
        "nullable": null,
        "types": [
          "nullable"
        ],
        "spread": false,
        "optional": false,
        "name": "toDefIndex",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "ChangeDetails"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 393,
    "kind": "method",
    "name": "remove",
    "memberof": "src/masked/pattern.js~MaskedPattern",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/masked/pattern.js~MaskedPattern#remove",
    "access": "public",
    "description": " ",
    "lineNumber": 391,
    "params": [
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "undefined",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "undefined",
        "description": ""
      }
    ],
    "override": true,
    "return": null
  },
  {
    "__docId__": 395,
    "kind": "method",
    "name": "nearestInputPos",
    "memberof": "src/masked/pattern.js~MaskedPattern",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/masked/pattern.js~MaskedPattern#nearestInputPos",
    "access": "public",
    "description": " ",
    "lineNumber": 404,
    "params": [
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "cursorPos",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "undefined",
        "description": ""
      }
    ],
    "override": true,
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 396,
    "kind": "method",
    "name": "group",
    "memberof": "src/masked/pattern.js~MaskedPattern",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/masked/pattern.js~MaskedPattern#group",
    "access": "public",
    "description": "Get group by name  ",
    "lineNumber": 485,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "name",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "nullable"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 397,
    "kind": "method",
    "name": "groupsByName",
    "memberof": "src/masked/pattern.js~MaskedPattern",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/masked/pattern.js~MaskedPattern#groupsByName",
    "access": "public",
    "description": "Get all groups by name  ",
    "lineNumber": 490,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "name",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Array"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 398,
    "kind": "file",
    "name": "src/masked/regexp.js",
    "content": "// @flow\r\nimport Masked, {type MaskedOptions} from './base.js';\r\n\r\n\r\n/** Masking by RegExp */\r\nexport default\r\nclass MaskedRegExp extends Masked<RegExp> {\r\n  /**\r\n    @override\r\n    @param {Object} opts\r\n  */\r\n  _update (opts: $Shape<MaskedOptions<RegExp>>) {\r\n    opts.validate = (value) => value.search(opts.mask) >= 0;\r\n    super._update(opts);\r\n  }\r\n}\r\n",
    "static": true,
    "longname": "C:/Projects/imaskjs/src/masked/regexp.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 399,
    "kind": "class",
    "name": "MaskedRegExp",
    "memberof": "src/masked/regexp.js",
    "static": true,
    "longname": "src/masked/regexp.js~MaskedRegExp",
    "access": "public",
    "export": true,
    "importPath": "imask/src/masked/regexp.js",
    "importStyle": "MaskedRegExp",
    "description": "Masking by RegExp",
    "lineNumber": 7,
    "interface": false,
    "extends": [
      "src/masked/base.js~Masked"
    ]
  },
  {
    "__docId__": 400,
    "kind": "method",
    "name": "_update",
    "memberof": "src/masked/regexp.js~MaskedRegExp",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/masked/regexp.js~MaskedRegExp#_update",
    "access": "private",
    "description": " ",
    "lineNumber": 12,
    "params": [
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "opts",
        "description": ""
      }
    ],
    "override": true,
    "return": null
  },
  {
    "kind": "index",
    "content": "# imaskjs\r\nvanilla javascript input mask\r\n\r\n[![Build Status](https://travis-ci.org/uNmAnNeR/imaskjs.svg?branch=gh-pages)](https://travis-ci.org/uNmAnNeR/imaskjs)\r\n[![Coverage Status](https://coveralls.io/repos/github/uNmAnNeR/imaskjs/badge.svg?branch=gh-pages)](https://coveralls.io/github/uNmAnNeR/imaskjs?branch=gh-pages)\r\n[![npm version](https://badge.fury.io/js/imask.svg)](https://badge.fury.io/jas/imask)\r\n[![License: MIT](https://img.shields.io/badge/License-MIT-yellow.svg)](https://opensource.org/licenses/MIT)\r\n\r\n## Features\r\n* get and set *raw* and *unmasked* values easily\r\n* no external dependencies\r\n* **RegExp** mask\r\n* **Function** mask\r\n* **Number** mask (integer and decimal)\r\n* **Date** mask (various format support)\r\n* **Dynamic/on-the-fly** mask\r\n* **Pattern** mask\r\n  - show placeholder always and only when necessary\r\n  - unmasked value can contain fixed parts\r\n  - optional input parts (greedy)\r\n* [React](https://github.com/uNmAnNeR/imaskjs/tree/gh-pages/plugins/react)/[Angular](https://github.com/uNmAnNeR/imaskjs/tree/gh-pages/plugins/angular) plugins\r\n\r\n## Further plans\r\n* Vue plugin\r\n* more unit tests\r\n\r\n## Install\r\n`npm install imask` and `import IMask from 'imask';`\r\n\r\nor use CDN:\r\n\r\n`<script src=\"https://unpkg.com/imask\"></script>`\r\n\r\n## Build & test\r\n`npm run build`\r\n\r\n`npm run test`\r\n\r\n## Compatibility\r\nSupports all major browsers and IE11+ [need to support older?](https://unmanner.github.io/imaskjs/guide.html#support-older)\r\n\r\n## Docs, Examples, Demo\r\n[https://unmanner.github.io/imaskjs/](https://unmanner.github.io/imaskjs/)\r\n\r\n## Many thanks to\r\n[@Viktor Yakovlev](https://github.com/vcrazyV)\r\n\r\n[@Alexander Kiselev](https://github.com/MaaKut)\r\n",
    "longname": "C:\\Projects\\imaskjs\\README.md",
    "name": "./README.md",
    "static": true,
    "access": "public"
  },
  {
    "kind": "packageJSON",
    "content": "{\n  \"name\": \"imask\",\n  \"version\": \"2.2.0\",\n  \"description\": \"vanilla javascript input mask\",\n  \"main\": \"dist/imask.js\",\n  \"module\": \"dist/imask.es.js\",\n  \"dependencies\": {\n    \"esdoc\": \"^1.0.4\",\n    \"esdoc-ecmascript-proposal-plugin\": \"^1.0.0\",\n    \"esdoc-flow-type-plugin\": \"^1.0.1\",\n    \"esdoc-standard-plugin\": \"^1.0.0\"\n  },\n  \"devDependencies\": {\n    \"babel-core\": \"^6.26.0\",\n    \"babel-eslint\": \"^8.0.2\",\n    \"babel-plugin-external-helpers\": \"^6.22.0\",\n    \"babel-plugin-transform-object-assign\": \"^6.22.0\",\n    \"babel-plugin-transform-object-rest-spread\": \"^6.26.0\",\n    \"babel-plugin-transform-runtime\": \"^6.23.0\",\n    \"babel-preset-env\": \"^1.6.1\",\n    \"babel-preset-flow\": \"^6.23.0\",\n    \"chai\": \"^4.1.2\",\n    \"coveralls\": \"^3.0.0\",\n    \"documentation\": \"^5.3.5\",\n    \"eslint-plugin-flowtype\": \"^2.39.1\",\n    \"flow-bin\": \"^0.60.1\",\n    \"karma\": \"^1.7.0\",\n    \"karma-chai\": \"^0.1.0\",\n    \"karma-chrome-launcher\": \"^2.2.0\",\n    \"karma-coverage\": \"^1.1.1\",\n    \"karma-mocha\": \"^1.3.0\",\n    \"karma-phantomjs-launcher\": \"^1.0.4\",\n    \"karma-rollup-plugin\": \"^0.2.4\",\n    \"karma-rollup-preprocessor\": \"^5.0.2\",\n    \"karma-sinon\": \"^1.0.5\",\n    \"mocha\": \"^4.0.1\",\n    \"npm-run-all\": \"^4.1.2\",\n    \"rollup\": \"^0.51.7\",\n    \"rollup-plugin-babel\": \"^3.0.2\",\n    \"rollup-plugin-commonjs\": \"^8.2.6\",\n    \"rollup-plugin-eslint\": \"^4.0.0\",\n    \"rollup-plugin-node-resolve\": \"^3.0.0\",\n    \"rollup-plugin-uglify\": \"^2.0.1\",\n    \"rollup-watch\": \"^4.3.1\",\n    \"sinon\": \"^4.1.2\",\n    \"uglify-es\": \"^3.1.9\"\n  },\n  \"engines\": {\n    \"npm\": \">=4.0.0\"\n  },\n  \"scripts\": {\n    \"test\": \"karma start --single-run --browsers PhantomJS\",\n    \"watch\": \"rollup -c -w\",\n    \"build\": \"npm run build:dev && npm run build:prod\",\n    \"build:dev\": \"npm-run-all -l build:dev:*\",\n    \"build:prod\": \"npm-run-all -l build:prod:*\",\n    \"build:dev:es\": \"rollup -c --environment format:es\",\n    \"build:dev:umd\": \"rollup -c --environment format:umd\",\n    \"build:prod:es\": \"rollup -c --environment format:es,env:production\",\n    \"build:prod:umd\": \"rollup -c --environment format:umd,env:production\",\n    \"flow\": \"flow\",\n    \"doc\": \"documentation build src/imask.js -f html -o docs\",\n    \"esdoc\": \"esdoc\",\n    \"prepublishOnly\": \"flow check && npm run test && npm run build && npm run doc\",\n    \"coveralls\": \"npm run test && cat ./coverage/lcov.info | ./node_modules/coveralls/bin/coveralls.js\"\n  },\n  \"repository\": {\n    \"type\": \"git\",\n    \"url\": \"git+https://github.com/uNmAnNeR/imaskjs.git\"\n  },\n  \"keywords\": [\n    \"javascript\",\n    \"jquery\",\n    \"input\",\n    \"mask\"\n  ],\n  \"files\": [\n    \"dist\"\n  ],\n  \"author\": \"Alexey Kryazhev\",\n  \"license\": \"MIT\",\n  \"bugs\": {\n    \"url\": \"https://github.com/uNmAnNeR/imaskjs/issues\"\n  },\n  \"homepage\": \"https://unmanner.github.io/imaskjs/\"\n}\n",
    "longname": "C:\\Projects\\imaskjs\\package.json",
    "name": "package.json",
    "static": true,
    "access": "public"
  }
]