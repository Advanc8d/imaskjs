{"version":3,"file":"imask.js","sources":["../src/utils.js","../src/core/masked.js","../src/core/pattern-definition.js","../src/core/pattern-masked.js","../src/core/factory.js","../src/masks/base.js","../src/masks/regexp.js","../src/masks/func.js","../src/resolvers/base.js","../src/resolvers/pattern.js","../src/masks/pattern.js","../src/masks/pipe.js","../src/imask.js"],"sourcesContent":["export\r\nfunction isString (str) {\r\n  return typeof str === 'string' || str instanceof String;\r\n}\r\n\r\nexport\r\nfunction extend (target) {\r\n  target = Object(target);\r\n\r\n  for (var i = 1; i < arguments.length; i++) {\r\n    var source = arguments[i];\r\n    if (source == null) continue;\r\n\r\n    for (var key in source) {\r\n      if (source.hasOwnProperty(key)) {\r\n          target[key] = source[key];\r\n      }\r\n    }\r\n  }\r\n\r\n  return target;\r\n}\r\n\r\nexport\r\nfunction conform (res, str, fallback='') {\r\n  return isString(res) ?\r\n    res :\r\n    res ?\r\n      str :\r\n      fallback;\r\n}\r\n\r\nexport\r\nvar DIRECTION = {\r\n  NONE: 0,\r\n  LEFT: -1,\r\n  RIGHT: 1\r\n}\r\n\r\n\r\nexport\r\nfunction extendDetailsAdjustments(str, details) {\r\n  var cursorPos = details.cursorPos;\r\n  var oldSelection = details.oldSelection;\r\n  var oldValue = details.oldValue;\r\n\r\n  var startChangePos = Math.min(cursorPos, oldSelection.start);\r\n  var insertedCount = cursorPos - startChangePos;\r\n  // Math.max for opposite operation\r\n  var removedCount = Math.max((oldSelection.end - startChangePos) ||\r\n    // for Delete\r\n    oldValue.length - str.length, 0);\r\n\r\n  return {\r\n    ...details,\r\n    startChangePos,\r\n    head: str.substring(0, startChangePos),\r\n    tail: str.substring(startChangePos + insertedCount),\r\n    inserted: str.substr(startChangePos, insertedCount),\r\n    removed: oldValue.substr(startChangePos, removedCount),\r\n    removeDirection: removedCount &&\r\n      ((oldSelection.end === cursorPos || insertedCount) ?\r\n        DIRECTION.RIGHT :\r\n        DIRECTION.LEFT)\r\n  };\r\n}\r\n\r\n\r\nexport\r\nfunction indexInDirection (pos, direction) {\r\n  if (direction === DIRECTION.LEFT) --pos;\r\n  return pos;\r\n}\r\n","export default\r\nclass Masked {\r\n  constructor ({mask, validate}) {\r\n    this._value = '';\r\n    this.mask = mask;\r\n    this.validate = validate || (() => true);\r\n  }\r\n\r\n  _validate () {\r\n    return this.validate(this);\r\n  }\r\n\r\n  clone () {\r\n    var m = new Masked(this);\r\n    m._value = this.value.slice();\r\n    return m;\r\n  }\r\n\r\n  reset () {\r\n    this._value = '';\r\n  }\r\n\r\n  get value () {\r\n    return this._value || '';\r\n  }\r\n\r\n  set value (value) {\r\n    this.reset();\r\n    this.append(value, false);\r\n  }\r\n\r\n  get unmaskedValue () {\r\n    return this._unmask();\r\n  }\r\n\r\n  set unmaskedValue (value) {\r\n    this.reset();\r\n    this.append(value);\r\n  }\r\n\r\n  get isComplete () {\r\n    return true;\r\n  }\r\n\r\n  nearestInputPos (cursorPos, direction) {\r\n    return cursorPos;\r\n  }\r\n\r\n  extractInput (fromPos=0, toPos=this.value.length) {\r\n    return this.value.slice(fromPos, toPos);\r\n  }\r\n\r\n  _extractTail (fromPos=0, toPos=this.value.length) {\r\n    return this.extractInput(fromPos, toPos);\r\n  }\r\n\r\n  _appendTail (tail) {\r\n    return this.append(tail);\r\n  }\r\n\r\n  append (str, skipUnresolvedInput=true) {\r\n    var oldValueLength = this.value.length;\r\n    var consistentValue = this.clone();\r\n\r\n    for (var ci=0; ci<str.length; ++ci) {\r\n      this._value += str[ci];\r\n      if (this._validate() === false) {\r\n        Object.assign(this, consistentValue);\r\n        if (skipUnresolvedInput) return false;\r\n      }\r\n\r\n      consistentValue = this.clone();\r\n    }\r\n\r\n    return this.value.length - oldValueLength;\r\n\r\n  }\r\n\r\n  // TODO\r\n  // insert (str, fromPos, skipUnresolved)\r\n\r\n  appendWithTail (str, tail) {\r\n    // TODO refactor\r\n    var appendCount = 0;\r\n    var consistentValue = this.clone();\r\n    var consistentAppended;\r\n\r\n    for (var ci=0; ci<str.length; ++ci) {\r\n      var ch = str[ci];\r\n\r\n      var appended = this.append(ch, false);\r\n      consistentAppended = this.clone();\r\n      var tailAppended = appended !== false && this._appendTail(tail) !== false;\r\n      if (tailAppended === false) {\r\n        Object.assign(this, consistentValue);\r\n        return false;\r\n      }\r\n\r\n      consistentValue = this.clone();\r\n      Object.assign(this, consistentAppended);\r\n      appendCount += appended;\r\n    }\r\n\r\n    // TODO needed for cases when\r\n    // 1) REMOVE ONLY AND NO LOOP AT ALL\r\n    // 2) last loop iteration removes tail\r\n    this._appendTail(tail);\r\n\r\n    return appendCount;\r\n  }\r\n\r\n  _unmask () {\r\n    return this.value;\r\n  }\r\n\r\n  clear (from=0, to=this.value.length) {\r\n    this._value = this.value.slice(0, from) + this.value.slice(to);\r\n  }\r\n\r\n  splice (start, deleteCount, inserted, removeDirection) {\r\n    var tailPos = start + deleteCount;\r\n    var tail = this._extractTail(tailPos);\r\n\r\n    start = this.nearestInputPos(start, removeDirection);\r\n    this.clear(start);\r\n    return this.appendWithTail(inserted, tail);\r\n  }\r\n}\r\n","import createMask from './factory';\r\n\r\n\r\nexport default\r\nclass PatternDefinition {\r\n  constructor(opts) {\r\n    Object.assign(this, opts);\r\n\r\n    if (this.mask) {\r\n      this._masked = createMask(opts);\r\n    }\r\n  }\r\n\r\n  get isInput () {\r\n    return this.type === PatternDefinition.TYPES.INPUT;\r\n  }\r\n\r\n  get isHiddenHollow () {\r\n    return this.isHollow && this.optional;\r\n  }\r\n\r\n  resolve (ch) {\r\n    if (!this._masked) return false;\r\n    // TODO seems strange\r\n    this._masked.value = ch;\r\n    return this._masked.value;\r\n  }\r\n}\r\n\r\nPatternDefinition.DEFAULTS = {\r\n  '0': /\\d/,\r\n  'a': /[\\u0041-\\u005A\\u0061-\\u007A\\u00AA\\u00B5\\u00BA\\u00C0-\\u00D6\\u00D8-\\u00F6\\u00F8-\\u02C1\\u02C6-\\u02D1\\u02E0-\\u02E4\\u02EC\\u02EE\\u0370-\\u0374\\u0376\\u0377\\u037A-\\u037D\\u0386\\u0388-\\u038A\\u038C\\u038E-\\u03A1\\u03A3-\\u03F5\\u03F7-\\u0481\\u048A-\\u0527\\u0531-\\u0556\\u0559\\u0561-\\u0587\\u05D0-\\u05EA\\u05F0-\\u05F2\\u0620-\\u064A\\u066E\\u066F\\u0671-\\u06D3\\u06D5\\u06E5\\u06E6\\u06EE\\u06EF\\u06FA-\\u06FC\\u06FF\\u0710\\u0712-\\u072F\\u074D-\\u07A5\\u07B1\\u07CA-\\u07EA\\u07F4\\u07F5\\u07FA\\u0800-\\u0815\\u081A\\u0824\\u0828\\u0840-\\u0858\\u08A0\\u08A2-\\u08AC\\u0904-\\u0939\\u093D\\u0950\\u0958-\\u0961\\u0971-\\u0977\\u0979-\\u097F\\u0985-\\u098C\\u098F\\u0990\\u0993-\\u09A8\\u09AA-\\u09B0\\u09B2\\u09B6-\\u09B9\\u09BD\\u09CE\\u09DC\\u09DD\\u09DF-\\u09E1\\u09F0\\u09F1\\u0A05-\\u0A0A\\u0A0F\\u0A10\\u0A13-\\u0A28\\u0A2A-\\u0A30\\u0A32\\u0A33\\u0A35\\u0A36\\u0A38\\u0A39\\u0A59-\\u0A5C\\u0A5E\\u0A72-\\u0A74\\u0A85-\\u0A8D\\u0A8F-\\u0A91\\u0A93-\\u0AA8\\u0AAA-\\u0AB0\\u0AB2\\u0AB3\\u0AB5-\\u0AB9\\u0ABD\\u0AD0\\u0AE0\\u0AE1\\u0B05-\\u0B0C\\u0B0F\\u0B10\\u0B13-\\u0B28\\u0B2A-\\u0B30\\u0B32\\u0B33\\u0B35-\\u0B39\\u0B3D\\u0B5C\\u0B5D\\u0B5F-\\u0B61\\u0B71\\u0B83\\u0B85-\\u0B8A\\u0B8E-\\u0B90\\u0B92-\\u0B95\\u0B99\\u0B9A\\u0B9C\\u0B9E\\u0B9F\\u0BA3\\u0BA4\\u0BA8-\\u0BAA\\u0BAE-\\u0BB9\\u0BD0\\u0C05-\\u0C0C\\u0C0E-\\u0C10\\u0C12-\\u0C28\\u0C2A-\\u0C33\\u0C35-\\u0C39\\u0C3D\\u0C58\\u0C59\\u0C60\\u0C61\\u0C85-\\u0C8C\\u0C8E-\\u0C90\\u0C92-\\u0CA8\\u0CAA-\\u0CB3\\u0CB5-\\u0CB9\\u0CBD\\u0CDE\\u0CE0\\u0CE1\\u0CF1\\u0CF2\\u0D05-\\u0D0C\\u0D0E-\\u0D10\\u0D12-\\u0D3A\\u0D3D\\u0D4E\\u0D60\\u0D61\\u0D7A-\\u0D7F\\u0D85-\\u0D96\\u0D9A-\\u0DB1\\u0DB3-\\u0DBB\\u0DBD\\u0DC0-\\u0DC6\\u0E01-\\u0E30\\u0E32\\u0E33\\u0E40-\\u0E46\\u0E81\\u0E82\\u0E84\\u0E87\\u0E88\\u0E8A\\u0E8D\\u0E94-\\u0E97\\u0E99-\\u0E9F\\u0EA1-\\u0EA3\\u0EA5\\u0EA7\\u0EAA\\u0EAB\\u0EAD-\\u0EB0\\u0EB2\\u0EB3\\u0EBD\\u0EC0-\\u0EC4\\u0EC6\\u0EDC-\\u0EDF\\u0F00\\u0F40-\\u0F47\\u0F49-\\u0F6C\\u0F88-\\u0F8C\\u1000-\\u102A\\u103F\\u1050-\\u1055\\u105A-\\u105D\\u1061\\u1065\\u1066\\u106E-\\u1070\\u1075-\\u1081\\u108E\\u10A0-\\u10C5\\u10C7\\u10CD\\u10D0-\\u10FA\\u10FC-\\u1248\\u124A-\\u124D\\u1250-\\u1256\\u1258\\u125A-\\u125D\\u1260-\\u1288\\u128A-\\u128D\\u1290-\\u12B0\\u12B2-\\u12B5\\u12B8-\\u12BE\\u12C0\\u12C2-\\u12C5\\u12C8-\\u12D6\\u12D8-\\u1310\\u1312-\\u1315\\u1318-\\u135A\\u1380-\\u138F\\u13A0-\\u13F4\\u1401-\\u166C\\u166F-\\u167F\\u1681-\\u169A\\u16A0-\\u16EA\\u1700-\\u170C\\u170E-\\u1711\\u1720-\\u1731\\u1740-\\u1751\\u1760-\\u176C\\u176E-\\u1770\\u1780-\\u17B3\\u17D7\\u17DC\\u1820-\\u1877\\u1880-\\u18A8\\u18AA\\u18B0-\\u18F5\\u1900-\\u191C\\u1950-\\u196D\\u1970-\\u1974\\u1980-\\u19AB\\u19C1-\\u19C7\\u1A00-\\u1A16\\u1A20-\\u1A54\\u1AA7\\u1B05-\\u1B33\\u1B45-\\u1B4B\\u1B83-\\u1BA0\\u1BAE\\u1BAF\\u1BBA-\\u1BE5\\u1C00-\\u1C23\\u1C4D-\\u1C4F\\u1C5A-\\u1C7D\\u1CE9-\\u1CEC\\u1CEE-\\u1CF1\\u1CF5\\u1CF6\\u1D00-\\u1DBF\\u1E00-\\u1F15\\u1F18-\\u1F1D\\u1F20-\\u1F45\\u1F48-\\u1F4D\\u1F50-\\u1F57\\u1F59\\u1F5B\\u1F5D\\u1F5F-\\u1F7D\\u1F80-\\u1FB4\\u1FB6-\\u1FBC\\u1FBE\\u1FC2-\\u1FC4\\u1FC6-\\u1FCC\\u1FD0-\\u1FD3\\u1FD6-\\u1FDB\\u1FE0-\\u1FEC\\u1FF2-\\u1FF4\\u1FF6-\\u1FFC\\u2071\\u207F\\u2090-\\u209C\\u2102\\u2107\\u210A-\\u2113\\u2115\\u2119-\\u211D\\u2124\\u2126\\u2128\\u212A-\\u212D\\u212F-\\u2139\\u213C-\\u213F\\u2145-\\u2149\\u214E\\u2183\\u2184\\u2C00-\\u2C2E\\u2C30-\\u2C5E\\u2C60-\\u2CE4\\u2CEB-\\u2CEE\\u2CF2\\u2CF3\\u2D00-\\u2D25\\u2D27\\u2D2D\\u2D30-\\u2D67\\u2D6F\\u2D80-\\u2D96\\u2DA0-\\u2DA6\\u2DA8-\\u2DAE\\u2DB0-\\u2DB6\\u2DB8-\\u2DBE\\u2DC0-\\u2DC6\\u2DC8-\\u2DCE\\u2DD0-\\u2DD6\\u2DD8-\\u2DDE\\u2E2F\\u3005\\u3006\\u3031-\\u3035\\u303B\\u303C\\u3041-\\u3096\\u309D-\\u309F\\u30A1-\\u30FA\\u30FC-\\u30FF\\u3105-\\u312D\\u3131-\\u318E\\u31A0-\\u31BA\\u31F0-\\u31FF\\u3400-\\u4DB5\\u4E00-\\u9FCC\\uA000-\\uA48C\\uA4D0-\\uA4FD\\uA500-\\uA60C\\uA610-\\uA61F\\uA62A\\uA62B\\uA640-\\uA66E\\uA67F-\\uA697\\uA6A0-\\uA6E5\\uA717-\\uA71F\\uA722-\\uA788\\uA78B-\\uA78E\\uA790-\\uA793\\uA7A0-\\uA7AA\\uA7F8-\\uA801\\uA803-\\uA805\\uA807-\\uA80A\\uA80C-\\uA822\\uA840-\\uA873\\uA882-\\uA8B3\\uA8F2-\\uA8F7\\uA8FB\\uA90A-\\uA925\\uA930-\\uA946\\uA960-\\uA97C\\uA984-\\uA9B2\\uA9CF\\uAA00-\\uAA28\\uAA40-\\uAA42\\uAA44-\\uAA4B\\uAA60-\\uAA76\\uAA7A\\uAA80-\\uAAAF\\uAAB1\\uAAB5\\uAAB6\\uAAB9-\\uAABD\\uAAC0\\uAAC2\\uAADB-\\uAADD\\uAAE0-\\uAAEA\\uAAF2-\\uAAF4\\uAB01-\\uAB06\\uAB09-\\uAB0E\\uAB11-\\uAB16\\uAB20-\\uAB26\\uAB28-\\uAB2E\\uABC0-\\uABE2\\uAC00-\\uD7A3\\uD7B0-\\uD7C6\\uD7CB-\\uD7FB\\uF900-\\uFA6D\\uFA70-\\uFAD9\\uFB00-\\uFB06\\uFB13-\\uFB17\\uFB1D\\uFB1F-\\uFB28\\uFB2A-\\uFB36\\uFB38-\\uFB3C\\uFB3E\\uFB40\\uFB41\\uFB43\\uFB44\\uFB46-\\uFBB1\\uFBD3-\\uFD3D\\uFD50-\\uFD8F\\uFD92-\\uFDC7\\uFDF0-\\uFDFB\\uFE70-\\uFE74\\uFE76-\\uFEFC\\uFF21-\\uFF3A\\uFF41-\\uFF5A\\uFF66-\\uFFBE\\uFFC2-\\uFFC7\\uFFCA-\\uFFCF\\uFFD2-\\uFFD7\\uFFDA-\\uFFDC]/,  // http://stackoverflow.com/a/22075070\r\n  '*': /./\r\n};\r\nPatternDefinition.TYPES = {\r\n  INPUT: 'input',\r\n  FIXED: 'fixed'\r\n};\r\n","import {conform} from '../utils';\r\nimport PatternDefinition from './pattern-definition';\r\nimport Masked from './masked';\r\n\r\n\r\nexport default\r\nclass PatternMasked extends Masked {\r\n  constructor (opts) {\r\n    var {definitions, placeholder} = opts;\r\n    super(opts);\r\n\r\n    this.placeholder = placeholder;\r\n    this.definitions = definitions;\r\n  }\r\n\r\n  get placeholder () { return this._placeholder; }\r\n\r\n  set placeholder (ph) {\r\n    this._placeholder = {\r\n      ...PatternMasked.DEFAULT_PLACEHOLDER,\r\n      ...ph\r\n    };\r\n  }\r\n\r\n  get definitions () {\r\n    return this._definitions;\r\n  }\r\n\r\n  set definitions (defs) {\r\n    defs = {\r\n      ...PatternDefinition.DEFAULTS,\r\n      ...defs\r\n    };\r\n\r\n    this._definitions = defs;\r\n    this._charDefs = [];\r\n    this._alignStops = [];\r\n\r\n    var pattern = this.mask;\r\n    if (!pattern || !defs) return;\r\n\r\n    var unmaskingBlock = false;\r\n    var optionalBlock = false;\r\n    for (var i=0; i<pattern.length; ++i) {\r\n      var char = pattern[i];\r\n      var type = !unmaskingBlock && char in defs ?\r\n        PatternDefinition.TYPES.INPUT :\r\n        PatternDefinition.TYPES.FIXED;\r\n      var unmasking = type === PatternDefinition.TYPES.INPUT || unmaskingBlock;\r\n      var optional = type === PatternDefinition.TYPES.INPUT && optionalBlock;\r\n\r\n      if (char === PatternMasked.STOP_CHAR) {\r\n        this._alignStops.push(this._charDefs.length);\r\n        continue;\r\n      }\r\n\r\n      if (char === '{' || char === '}') {\r\n        unmaskingBlock = !unmaskingBlock;\r\n        continue;\r\n      }\r\n\r\n      if (char === '[' || char === ']') {\r\n        optionalBlock = !optionalBlock;\r\n        continue;\r\n      }\r\n\r\n      if (char === PatternMasked.ESCAPE_CHAR) {\r\n        ++i;\r\n        char = pattern[i];\r\n        // TODO validation\r\n        if (!char) break;\r\n        type = PatternDefinition.TYPES.FIXED;\r\n      }\r\n\r\n      this._charDefs.push(new PatternDefinition({\r\n        char,\r\n        type,\r\n        optional,\r\n        mask: unmasking &&\r\n          (type === PatternDefinition.TYPES.INPUT ?\r\n            defs[char] :\r\n            (ch => ch === char))\r\n      }));\r\n    }\r\n  }\r\n\r\n  get mask () {\r\n    return this._mask;\r\n  }\r\n\r\n  set mask (mask) {\r\n    this._mask = mask;\r\n    if (this.value) this.definitions = this.definitions;\r\n  }\r\n\r\n  clone () {\r\n    var m = new PatternMasked(this);\r\n    m._value = this.value.slice();\r\n    m._charDefs.forEach((d, i) => Object.assign(d, this._charDefs[i]));\r\n    return m;\r\n  }\r\n\r\n  reset () {\r\n    super.reset();\r\n    this._charDefs.forEach(d => {delete d.isHollow;});\r\n  }\r\n\r\n  get isComplete () {\r\n    return !this._charDefs.some(d =>\r\n      d.isInput && !d.optional && d.isHollow);\r\n  }\r\n\r\n  hiddenHollowsBefore (defIndex) {\r\n    return this._charDefs\r\n      .slice(0, defIndex)\r\n      .filter(d => d.isHiddenHollow)\r\n      .length;\r\n  }\r\n\r\n  mapDefIndexToPos (defIndex) {\r\n    return defIndex - this.hiddenHollowsBefore(defIndex);\r\n  }\r\n\r\n  mapPosToDefIndex (pos) {\r\n    var defIndex = pos;\r\n    for (var di=0; di<this._charDefs.length; ++di) {\r\n      var def = this._charDefs[di];\r\n      if (di >= defIndex) break;\r\n      if (def.isHiddenHollow) ++defIndex;\r\n    }\r\n    return defIndex;\r\n  }\r\n\r\n  _unmask () {\r\n    var str = this.value;\r\n    var unmasked = '';\r\n    for (var ci=0, di=0; ci<str.length; ++di) {\r\n      var ch = str[ci];\r\n      var def = this.def(di, str);\r\n\r\n      if (!def) break;\r\n      if (this.isHiddenHollow(di)) continue;\r\n\r\n      if (def.unmasking && !def.isHollow &&\r\n        (this.isInput(di) && this._resolvers[def.char].resolve(ch, ci, str) ||\r\n          def.char === ch)) {\r\n        unmasked += ch;\r\n      }\r\n      ++ci;\r\n    }\r\n    return unmasked;\r\n  }\r\n\r\n  _appendTail (tail) {\r\n    return this.appendChunks(tail);\r\n  }\r\n\r\n  append (str, skipUnresolvedInput=true) {\r\n    var oldValueLength = this.value.length;\r\n    for (var ci=0, di=this.mapPosToDefIndex(this.value.length); ci < str.length;) {\r\n      var ch = str[ci];\r\n      var def = this._charDefs[di];\r\n\r\n      // check overflow\r\n      if (!def) return false;\r\n\r\n      if (def.isHollow) {\r\n        // TODO check other cases\r\n        ++di;\r\n        continue;\r\n      }\r\n\r\n      var resolved, skipped;\r\n      var chres = conform(def.resolve(ch), ch);\r\n      if (def.type === PatternDefinition.TYPES.INPUT) {\r\n        if (chres) {\r\n          var m = this.clone();\r\n          this.value += chres;\r\n          if (!this._validate()) {\r\n            chres = '';\r\n            Object.assign(this, m);\r\n          }\r\n        }\r\n\r\n        resolved = !!chres;\r\n        skipped = !chres && !def.optional;\r\n\r\n        // if ok - next di\r\n        if (!chres) {\r\n          if (!def.optional && skipUnresolvedInput) {\r\n            this._value += this._placeholder.char;\r\n            skipped = false;\r\n          }\r\n          if (!skipped) def.isHollow = true;\r\n        }\r\n      } else {\r\n        this._value += def.char;\r\n        resolved = chres && (def.mask || !skipUnresolvedInput);\r\n      }\r\n\r\n      if (!skipped) ++di;\r\n      if (resolved || skipped) ++ci;\r\n    }\r\n\r\n    this._appendPlaceholder();\r\n    return this.value.length - oldValueLength;\r\n  }\r\n\r\n  appendChunks (chunks, skipUnresolvedInput) {\r\n    for (var ci=0; ci < chunks.length; ++ci) {\r\n      var [, input] = chunks[ci];\r\n      if (this.append(input, skipUnresolvedInput) === false) return false;\r\n\r\n      // not last - append placeholder between stops\r\n      // var chunk2 = chunks[ci+1];\r\n      // var stop2 = chunk2 && chunk2[0];\r\n      // if (stop2) str = this._appendPlaceholder(str, stop2);\r\n    }\r\n    return true;\r\n  }\r\n\r\n  _extractTail (fromPos, toPos) {\r\n    return this.extractInputChunks(fromPos, toPos);\r\n  }\r\n\r\n  extractInput (fromPos=0, toPos=this.value.length) {\r\n    // TODO fromPos === toPos\r\n    var str = this.value;\r\n    var input = '';\r\n\r\n    var toDefIndex = this.mapPosToDefIndex(toPos);\r\n    for (var ci=0, di=this.mapPosToDefIndex(fromPos); ci<str.length && di < toDefIndex; ++di) {\r\n      var ch = str[ci];\r\n      var def = this._charDefs[di];\r\n\r\n      if (!def) break;\r\n      if (def.isHiddenHollow) continue;\r\n\r\n      if (def.isInput && !def.isHollow) input += ch;\r\n      ++ci;\r\n    }\r\n    return input;\r\n  }\r\n\r\n  extractInputChunks (fromPos=0, toPos=this.value.length) {\r\n    // TODO fromPos === toPos\r\n    var fromDefIndex = this.mapPosToDefIndex(fromPos);\r\n    var toDefIndex = this.mapPosToDefIndex(toPos);\r\n    var stops = [\r\n      fromPos,\r\n      ...this._alignStops\r\n        .filter(s => fromDefIndex <= s && s < toDefIndex)\r\n        .map(s => this._mapDefIndexToPos(s)),\r\n      toPos\r\n    ];\r\n    var str = this.value;\r\n    var chunks = [];\r\n    for (var si=0; si<stops.length && str; ++si) {\r\n      var s = stops[si];\r\n      var s2 = stops[si+1];\r\n      chunks.push([s, this.extractInput(s, s2)]);\r\n      if (s2) str = str.slice(s2 - s);\r\n    }\r\n    return chunks;\r\n  }\r\n\r\n  _appendPlaceholder (toPos) {\r\n    var toDefIndex = this.mapPosToDefIndex(toPos);\r\n    for (var di=this.mapPosToDefIndex(this.value.length); di < toDefIndex; ++di) {\r\n      var def = this.def(di, this.value);\r\n      if (!def) break;\r\n\r\n      if (this.isInput(di) && !this.isHollow(di)) {\r\n        def.isHollow = true;\r\n      }\r\n      if (this._placeholder.show === 'always' || toPos) {\r\n        this._value += def.type === PatternDefinition.TYPES.FIXED ?\r\n          def.char :\r\n          !def.optional ?\r\n            this._placeholder.char :\r\n            '';\r\n      }\r\n    }\r\n  }\r\n\r\n  _installDefinitions () {\r\n    for (var defKey in this.definitions) {\r\n      this._resolvers[defKey] = IMask.MaskFactory(this.el, {\r\n        mask: this.definitions[defKey]\r\n      });\r\n    }\r\n  }\r\n\r\n  clear (from=0, to=this.value.length) {\r\n    this._value = this.value.slice(0, from) + this.value.slice(to);\r\n    var fromDefIndex = this.mapPosToDefIndex(from);\r\n    var toDefIndex = this.mapPosToDefIndex(to);\r\n    this._charDefs.splice(fromDefIndex, toDefIndex - fromDefIndex);\r\n  }\r\n}\r\n\r\nPatternMasked.DEFAULT_PLACEHOLDER = {\r\n  show: 'lazy',\r\n  char: '_'\r\n};\r\nPatternMasked.STOP_CHAR = '\\'';\r\nPatternMasked.ESCAPE_CHAR = '\\\\';\r\n","import {isString} from '../utils';\r\n\r\nimport Masked from './masked';\r\nimport PatternMasked from './pattern-masked';\r\n\r\n\r\nexport default\r\nfunction createMask (opts) {\r\n  var mask = opts.mask;\r\n  if (mask instanceof Masked) return mask;\r\n  if (mask instanceof RegExp) return new Masked({\r\n    ...opts,\r\n    validate: (masked) => mask.test(masked.value)\r\n  });\r\n  if (isString(mask)) return new PatternMasked(opts);\r\n  if (mask.prototype instanceof Masked) return new mask(opts);\r\n  if (mask instanceof Function) return new Masked({\r\n    ...opts,\r\n    validate: mask\r\n  });\r\n  return new Masked(opts);\r\n}\r\n","import {extendDetailsAdjustments} from '../utils';\r\nimport createMask from '../core/factory';\r\n\r\n\r\nexport default\r\nclass BaseMask {\r\n  constructor (el, opts) {\r\n    this.el = el;\r\n    this.masked = createMask(opts);\r\n    this.mask = opts.mask;\r\n\r\n    this._listeners = {};\r\n    this._rawValue = '';\r\n    this._unmaskedValue = '';\r\n\r\n    this.saveSelection = this.saveSelection.bind(this);\r\n    this._onInput = this._onInput.bind(this);\r\n    this._onDrop = this._onDrop.bind(this);\r\n    this._alignCursor = this._alignCursor.bind(this);\r\n    this._alignCursorFriendly = this._alignCursorFriendly.bind(this);\r\n  }\r\n\r\n  on (ev, handler) {\r\n    if (!this._listeners[ev]) this._listeners[ev] = [];\r\n    this._listeners[ev].push(handler);\r\n    return this;\r\n  }\r\n\r\n  off (ev, handler) {\r\n    if (!this._listeners[ev]) return;\r\n    if (!handler) {\r\n      delete this._listeners[ev];\r\n      return;\r\n    }\r\n    var hIndex = this._listeners[ev].indexOf(handler);\r\n    if (hIndex >= 0) this._listeners.splice(hIndex, 1);\r\n    return this;\r\n  }\r\n\r\n  get mask () { return this.masked.mask; }\r\n  set mask (mask) {\r\n    // TODO check\r\n    this.masked.mask = mask;\r\n    this.masked = createMask(this.masked);\r\n  }\r\n\r\n  get rawValue () {\r\n    return this._rawValue;\r\n  }\r\n\r\n  set rawValue (str) {\r\n    this.processInput(str, {\r\n      cursorPos: str.length,\r\n      oldValue: this.rawValue,\r\n      oldSelection: {\r\n        start: 0,\r\n        end: this.rawValue.length\r\n      }\r\n    });\r\n  }\r\n\r\n  bindEvents () {\r\n    this.el.addEventListener('keydown', this.saveSelection);\r\n    this.el.addEventListener('input', this._onInput);\r\n    this.el.addEventListener('drop', this._onDrop);\r\n    this.el.addEventListener('click', this._alignCursorFriendly);\r\n  }\r\n\r\n  unbindEvents () {\r\n    this.el.removeEventListener('keydown', this.saveSelection);\r\n    this.el.removeEventListener('input', this._onInput);\r\n    this.el.removeEventListener('drop', this._onDrop);\r\n    this.el.removeEventListener('click', this._alignCursorFriendly);\r\n  }\r\n\r\n  fireEvent (ev) {\r\n    var listeners = this._listeners[ev] || [];\r\n    listeners.forEach(l => l());\r\n  }\r\n\r\n  processInput (inputValue, details) {\r\n    details = {\r\n      cursorPos: this.cursorPos,\r\n      oldSelection: this._selection,\r\n      oldValue: this.rawValue,\r\n      oldUnmaskedValue: this.unmaskedValue,\r\n      ...details\r\n    };\r\n\r\n    details = extendDetailsAdjustments(inputValue, details);\r\n\r\n    this.resolve(inputValue, details);\r\n\r\n    this.updateValue();\r\n    this.updateCursor(details.cursorPos)\r\n  }\r\n\r\n\r\n  get selectionStart () {\r\n    return this._cursorChanging ?\r\n      this._changingCursorPos :\r\n\r\n      this.el.selectionStart;\r\n  }\r\n\r\n  get cursorPos () {\r\n    return this._cursorChanging ?\r\n      this._changingCursorPos :\r\n\r\n      this.el.selectionEnd;\r\n  }\r\n\r\n  set cursorPos (pos) {\r\n    if (this.el !== document.activeElement) return;\r\n\r\n    this.el.setSelectionRange(pos, pos);\r\n    this.saveSelection();\r\n  }\r\n\r\n  saveSelection (ev) {\r\n    if (this.rawValue !== this.el.value) {\r\n      console.warn('Uncontrolled input change, refresh mask manually!');\r\n    }\r\n    this._selection = {\r\n      start: this.selectionStart,\r\n      end: this.cursorPos\r\n    };\r\n  }\r\n\r\n  destroy () {\r\n    this.unbindEvents();\r\n    this._listeners.length = 0;\r\n  }\r\n\r\n  get unmaskedValue () {\r\n    return this._unmaskedValue;\r\n  }\r\n\r\n  set unmaskedValue (str) {\r\n    this.masked.unmaskedValue = str;\r\n    this.updateValue();\r\n    this._alignCursor();\r\n  }\r\n\r\n  updateValue () {\r\n    var newUnmaskedValue = this.masked.unmaskedValue;\r\n    var newRawValue = this.masked.value;\r\n    var isChanged = (this.unmaskedValue !== newUnmaskedValue ||\r\n      this.rawValue !== newRawValue);\r\n\r\n    this._unmaskedValue = newUnmaskedValue;\r\n    this._rawValue = newRawValue;\r\n\r\n    if (this.el.value !== newRawValue) this.el.value = newRawValue;\r\n    if (isChanged) this._fireChangeEvents();\r\n  }\r\n\r\n  _fireChangeEvents () {\r\n    this.fireEvent('accept');\r\n    if (this.masked.isComplete) this.fireEvent('complete');\r\n  }\r\n\r\n  updateCursor (cursorPos) {\r\n    if (cursorPos == null) return;\r\n    this.cursorPos = cursorPos;\r\n\r\n    // also queue change cursor for mobile browsers\r\n    this._delayUpdateCursor(cursorPos);\r\n  }\r\n\r\n  _delayUpdateCursor (cursorPos) {\r\n    this._abortUpdateCursor();\r\n    this._changingCursorPos = cursorPos;\r\n    this._cursorChanging = setTimeout(() => {\r\n      this.cursorPos = this._changingCursorPos;\r\n      this._abortUpdateCursor();\r\n    }, 10);\r\n  }\r\n\r\n  _abortUpdateCursor() {\r\n    if (this._cursorChanging) {\r\n      clearTimeout(this._cursorChanging);\r\n      delete this._cursorChanging;\r\n    }\r\n  }\r\n\r\n  _alignCursor () {\r\n    this.cursorPos = this.masked.nearestInputPos(this.cursorPos);\r\n  }\r\n\r\n  _alignCursorFriendly () {\r\n    if (this.selectionStart !== this.cursorPos) return;\r\n    this._alignCursor();\r\n  }\r\n\r\n  _onInput (ev) {\r\n    this._abortUpdateCursor();\r\n    this.processInput(this.el.value);\r\n  }\r\n\r\n  _onDrop (ev) {\r\n    ev.preventDefault();\r\n    ev.stopPropagation();\r\n  }\r\n\r\n  resolve (str, details) {\r\n    var insertedCount = this.masked.splice(\r\n      details.startChangePos,\r\n      details.removed.length,\r\n      details.inserted,\r\n      details.removeDirection);\r\n\r\n    details.cursorPos = this.masked.nearestInputPos(details.startChangePos + insertedCount, details.removeDirection);\r\n  }\r\n}\r\n","import BaseMask from './base';\r\n\r\n\r\nexport default\r\nclass RegExpMask extends BaseMask {\r\n  resolve (str) {\r\n    return this.mask.test(str);\r\n  }\r\n}\r\n","import BaseMask from './base';\r\n\r\n\r\nexport default\r\nclass FuncMask extends BaseMask {\r\n  resolve (...args) {\r\n    return this.mask(...args);\r\n  }\r\n}\r\n","export\r\nclass State {\r\n  constructor (value='') {\r\n    this.value = value;\r\n  }\r\n\r\n  slice (from=0, to=this.value.length) {\r\n    return new State(this.value.slice(from, to));\r\n  }\r\n}\r\n\r\n\r\nexport default\r\nclass BaseResolver {\r\n  constructor () {\r\n    this.state = new State();\r\n  }\r\n\r\n  get state () {\r\n    return this._state;\r\n  }\r\n\r\n  set state (state) {\r\n    this._state = state;\r\n  }\r\n\r\n  nearestInputPos (cursorPos, direction) {\r\n    return cursorPos;\r\n  }\r\n\r\n  get rawValue () {\r\n    return this.state.value;\r\n  }\r\n\r\n  set rawValue (rawValue) {\r\n    // TODO\r\n    this.state.value = rawValue;\r\n  }\r\n\r\n  extractInput (fromPos=0, toPos=this.state.value.length) {\r\n    return this.state.value.slice(fromPos, toPos);\r\n  }\r\n\r\n  _extractTail (fromPos=0, toPos=this.state.value.length) {\r\n    return this.extractInput(fromPos, toPos);\r\n  }\r\n\r\n  _appendTail (tail) {\r\n    return this.append(tail);\r\n  }\r\n\r\n  append (str, skipUnresolvedInput=true) {\r\n    // TODO\r\n  }\r\n\r\n  appendWithTail (str, tail) {\r\n    var consistentState = this.state.slice();\r\n\r\n    for (var ci=0; ci<str.length; ++ci) {\r\n      var ch = str[ci];\r\n      if (this.append(ch, false) === false || this._appendTail(tail) === false) {\r\n        this.state = consistentState;\r\n        return false;\r\n      }\r\n\r\n      consistentState = this.state.slice();\r\n    }\r\n\r\n    return true;\r\n  }\r\n\r\n  splice (start, deleteCount, inserted, removeDirection) {\r\n    var tailPos = start + deleteCount;\r\n    var tail = this._extractTail(tailPos);\r\n\r\n    start = this.nearestInputPos(start, removeDirection);\r\n    this.state = this.state.slice(0, start);\r\n    this.appendWithTail(inserted, tail);\r\n  }\r\n\r\n  resolve (str, details) {\r\n    // var startChangePos = details.startChangePos;\r\n    // var inserted = details.inserted;\r\n    // var deleteCount = details.removed.length;\r\n    // var tailPos = startChangePos + deleteCount;\r\n\r\n    // if remove at left - adjust start change pos to trim holes and fixed at the end\r\n    // var startInputPos = this.nearestInputPos(startChangePos, details.removeDirection);\r\n    // TODO. SOURCE WAS:\r\n    // var startInputPos = details.removeDirection === DIRECTION.LEFT ?\r\n    //   this.nearestInputPos(startChangePos) :\r\n    //   startChangePos;\r\n\r\n    // var tail = this._extractTail(tailPos);\r\n\r\n    // this.state = this.state.slice(0, startInputPos);\r\n\r\n    // var insertStates = this._generateInsertStates(inserted);\r\n    // for (var istep=insertStates.length-1; istep >= 0; --istep) {\r\n    //   this.state = insertStates[istep];\r\n    //   // TODO overflow?\r\n    //   var stateInserted = this._appendTail(tail);\r\n    //   if (stateInserted) {\r\n    //     this.state = stateInserted;\r\n    //     break;\r\n    //   }\r\n    // }\r\n\r\n    // this.appendWithTail(inserted, tail);\r\n    this.splice(\r\n      details.startChangePos,\r\n      details.removed.length,\r\n      details.inserted,\r\n      details.removeDirection);\r\n\r\n    details.cursorPos = this._nearestInputPos(this.state.value.length, details.removeDirection);\r\n\r\n    return this.state.value;\r\n  }\r\n}\r\n","import {conform, indexInDirection, DIRECTION} from '../utils';\r\n\r\nimport BaseResolver, {State} from './base';\r\n\r\n\r\n// class PatternDefinitions {\r\n//   def (index) {\r\n//     return this._charDefs[index];\r\n//   }\r\n// }\r\n\r\n// PatternDefinitions.DEFAULT = {\r\n//   '0': /\\d/,\r\n//   'a': /[\\u0041-\\u005A\\u0061-\\u007A\\u00AA\\u00B5\\u00BA\\u00C0-\\u00D6\\u00D8-\\u00F6\\u00F8-\\u02C1\\u02C6-\\u02D1\\u02E0-\\u02E4\\u02EC\\u02EE\\u0370-\\u0374\\u0376\\u0377\\u037A-\\u037D\\u0386\\u0388-\\u038A\\u038C\\u038E-\\u03A1\\u03A3-\\u03F5\\u03F7-\\u0481\\u048A-\\u0527\\u0531-\\u0556\\u0559\\u0561-\\u0587\\u05D0-\\u05EA\\u05F0-\\u05F2\\u0620-\\u064A\\u066E\\u066F\\u0671-\\u06D3\\u06D5\\u06E5\\u06E6\\u06EE\\u06EF\\u06FA-\\u06FC\\u06FF\\u0710\\u0712-\\u072F\\u074D-\\u07A5\\u07B1\\u07CA-\\u07EA\\u07F4\\u07F5\\u07FA\\u0800-\\u0815\\u081A\\u0824\\u0828\\u0840-\\u0858\\u08A0\\u08A2-\\u08AC\\u0904-\\u0939\\u093D\\u0950\\u0958-\\u0961\\u0971-\\u0977\\u0979-\\u097F\\u0985-\\u098C\\u098F\\u0990\\u0993-\\u09A8\\u09AA-\\u09B0\\u09B2\\u09B6-\\u09B9\\u09BD\\u09CE\\u09DC\\u09DD\\u09DF-\\u09E1\\u09F0\\u09F1\\u0A05-\\u0A0A\\u0A0F\\u0A10\\u0A13-\\u0A28\\u0A2A-\\u0A30\\u0A32\\u0A33\\u0A35\\u0A36\\u0A38\\u0A39\\u0A59-\\u0A5C\\u0A5E\\u0A72-\\u0A74\\u0A85-\\u0A8D\\u0A8F-\\u0A91\\u0A93-\\u0AA8\\u0AAA-\\u0AB0\\u0AB2\\u0AB3\\u0AB5-\\u0AB9\\u0ABD\\u0AD0\\u0AE0\\u0AE1\\u0B05-\\u0B0C\\u0B0F\\u0B10\\u0B13-\\u0B28\\u0B2A-\\u0B30\\u0B32\\u0B33\\u0B35-\\u0B39\\u0B3D\\u0B5C\\u0B5D\\u0B5F-\\u0B61\\u0B71\\u0B83\\u0B85-\\u0B8A\\u0B8E-\\u0B90\\u0B92-\\u0B95\\u0B99\\u0B9A\\u0B9C\\u0B9E\\u0B9F\\u0BA3\\u0BA4\\u0BA8-\\u0BAA\\u0BAE-\\u0BB9\\u0BD0\\u0C05-\\u0C0C\\u0C0E-\\u0C10\\u0C12-\\u0C28\\u0C2A-\\u0C33\\u0C35-\\u0C39\\u0C3D\\u0C58\\u0C59\\u0C60\\u0C61\\u0C85-\\u0C8C\\u0C8E-\\u0C90\\u0C92-\\u0CA8\\u0CAA-\\u0CB3\\u0CB5-\\u0CB9\\u0CBD\\u0CDE\\u0CE0\\u0CE1\\u0CF1\\u0CF2\\u0D05-\\u0D0C\\u0D0E-\\u0D10\\u0D12-\\u0D3A\\u0D3D\\u0D4E\\u0D60\\u0D61\\u0D7A-\\u0D7F\\u0D85-\\u0D96\\u0D9A-\\u0DB1\\u0DB3-\\u0DBB\\u0DBD\\u0DC0-\\u0DC6\\u0E01-\\u0E30\\u0E32\\u0E33\\u0E40-\\u0E46\\u0E81\\u0E82\\u0E84\\u0E87\\u0E88\\u0E8A\\u0E8D\\u0E94-\\u0E97\\u0E99-\\u0E9F\\u0EA1-\\u0EA3\\u0EA5\\u0EA7\\u0EAA\\u0EAB\\u0EAD-\\u0EB0\\u0EB2\\u0EB3\\u0EBD\\u0EC0-\\u0EC4\\u0EC6\\u0EDC-\\u0EDF\\u0F00\\u0F40-\\u0F47\\u0F49-\\u0F6C\\u0F88-\\u0F8C\\u1000-\\u102A\\u103F\\u1050-\\u1055\\u105A-\\u105D\\u1061\\u1065\\u1066\\u106E-\\u1070\\u1075-\\u1081\\u108E\\u10A0-\\u10C5\\u10C7\\u10CD\\u10D0-\\u10FA\\u10FC-\\u1248\\u124A-\\u124D\\u1250-\\u1256\\u1258\\u125A-\\u125D\\u1260-\\u1288\\u128A-\\u128D\\u1290-\\u12B0\\u12B2-\\u12B5\\u12B8-\\u12BE\\u12C0\\u12C2-\\u12C5\\u12C8-\\u12D6\\u12D8-\\u1310\\u1312-\\u1315\\u1318-\\u135A\\u1380-\\u138F\\u13A0-\\u13F4\\u1401-\\u166C\\u166F-\\u167F\\u1681-\\u169A\\u16A0-\\u16EA\\u1700-\\u170C\\u170E-\\u1711\\u1720-\\u1731\\u1740-\\u1751\\u1760-\\u176C\\u176E-\\u1770\\u1780-\\u17B3\\u17D7\\u17DC\\u1820-\\u1877\\u1880-\\u18A8\\u18AA\\u18B0-\\u18F5\\u1900-\\u191C\\u1950-\\u196D\\u1970-\\u1974\\u1980-\\u19AB\\u19C1-\\u19C7\\u1A00-\\u1A16\\u1A20-\\u1A54\\u1AA7\\u1B05-\\u1B33\\u1B45-\\u1B4B\\u1B83-\\u1BA0\\u1BAE\\u1BAF\\u1BBA-\\u1BE5\\u1C00-\\u1C23\\u1C4D-\\u1C4F\\u1C5A-\\u1C7D\\u1CE9-\\u1CEC\\u1CEE-\\u1CF1\\u1CF5\\u1CF6\\u1D00-\\u1DBF\\u1E00-\\u1F15\\u1F18-\\u1F1D\\u1F20-\\u1F45\\u1F48-\\u1F4D\\u1F50-\\u1F57\\u1F59\\u1F5B\\u1F5D\\u1F5F-\\u1F7D\\u1F80-\\u1FB4\\u1FB6-\\u1FBC\\u1FBE\\u1FC2-\\u1FC4\\u1FC6-\\u1FCC\\u1FD0-\\u1FD3\\u1FD6-\\u1FDB\\u1FE0-\\u1FEC\\u1FF2-\\u1FF4\\u1FF6-\\u1FFC\\u2071\\u207F\\u2090-\\u209C\\u2102\\u2107\\u210A-\\u2113\\u2115\\u2119-\\u211D\\u2124\\u2126\\u2128\\u212A-\\u212D\\u212F-\\u2139\\u213C-\\u213F\\u2145-\\u2149\\u214E\\u2183\\u2184\\u2C00-\\u2C2E\\u2C30-\\u2C5E\\u2C60-\\u2CE4\\u2CEB-\\u2CEE\\u2CF2\\u2CF3\\u2D00-\\u2D25\\u2D27\\u2D2D\\u2D30-\\u2D67\\u2D6F\\u2D80-\\u2D96\\u2DA0-\\u2DA6\\u2DA8-\\u2DAE\\u2DB0-\\u2DB6\\u2DB8-\\u2DBE\\u2DC0-\\u2DC6\\u2DC8-\\u2DCE\\u2DD0-\\u2DD6\\u2DD8-\\u2DDE\\u2E2F\\u3005\\u3006\\u3031-\\u3035\\u303B\\u303C\\u3041-\\u3096\\u309D-\\u309F\\u30A1-\\u30FA\\u30FC-\\u30FF\\u3105-\\u312D\\u3131-\\u318E\\u31A0-\\u31BA\\u31F0-\\u31FF\\u3400-\\u4DB5\\u4E00-\\u9FCC\\uA000-\\uA48C\\uA4D0-\\uA4FD\\uA500-\\uA60C\\uA610-\\uA61F\\uA62A\\uA62B\\uA640-\\uA66E\\uA67F-\\uA697\\uA6A0-\\uA6E5\\uA717-\\uA71F\\uA722-\\uA788\\uA78B-\\uA78E\\uA790-\\uA793\\uA7A0-\\uA7AA\\uA7F8-\\uA801\\uA803-\\uA805\\uA807-\\uA80A\\uA80C-\\uA822\\uA840-\\uA873\\uA882-\\uA8B3\\uA8F2-\\uA8F7\\uA8FB\\uA90A-\\uA925\\uA930-\\uA946\\uA960-\\uA97C\\uA984-\\uA9B2\\uA9CF\\uAA00-\\uAA28\\uAA40-\\uAA42\\uAA44-\\uAA4B\\uAA60-\\uAA76\\uAA7A\\uAA80-\\uAAAF\\uAAB1\\uAAB5\\uAAB6\\uAAB9-\\uAABD\\uAAC0\\uAAC2\\uAADB-\\uAADD\\uAAE0-\\uAAEA\\uAAF2-\\uAAF4\\uAB01-\\uAB06\\uAB09-\\uAB0E\\uAB11-\\uAB16\\uAB20-\\uAB26\\uAB28-\\uAB2E\\uABC0-\\uABE2\\uAC00-\\uD7A3\\uD7B0-\\uD7C6\\uD7CB-\\uD7FB\\uF900-\\uFA6D\\uFA70-\\uFAD9\\uFB00-\\uFB06\\uFB13-\\uFB17\\uFB1D\\uFB1F-\\uFB28\\uFB2A-\\uFB36\\uFB38-\\uFB3C\\uFB3E\\uFB40\\uFB41\\uFB43\\uFB44\\uFB46-\\uFBB1\\uFBD3-\\uFD3D\\uFD50-\\uFD8F\\uFD92-\\uFDC7\\uFDF0-\\uFDFB\\uFE70-\\uFE74\\uFE76-\\uFEFC\\uFF21-\\uFF3A\\uFF41-\\uFF5A\\uFF66-\\uFFBE\\uFFC2-\\uFFC7\\uFFCA-\\uFFCF\\uFFD2-\\uFFD7\\uFFDA-\\uFFDC]/,  // http://stackoverflow.com/a/22075070\r\n//   '*': /./\r\n// };\r\n// PatternDefinitions.TYPES = {\r\n//   INPUT: 'input',\r\n//   FIXED: 'fixed'\r\n// };\r\n\r\n\r\n// export\r\n// class PatternState extends State {\r\n//   constructor (defs, value='', hollows=[]) {\r\n//     super(value);\r\n//     this.hollows = hollows;\r\n//     this._defs = defs;\r\n//   }\r\n\r\n//   slice (from=0, to=this.value.length) {\r\n//     var s = new PatternState(this.defs, this.value.slice(from, to));\r\n//     s.hollows = this.hollows.slice(this.mapPosToDefIndex(from), this.mapPosToDefIndex(to));\r\n//     return s;\r\n//   }\r\n\r\n//   isHollow (defIndex) {\r\n//     return this.hollows.indexOf(defIndex) >= 0;\r\n//   }\r\n\r\n//   isHiddenHollow (defIndex) {\r\n//     return this.isHollow(defIndex) && this._defs.def(defIndex) && this._defs.def(defIndex).optional;\r\n//   }\r\n\r\n//   isInput (defIndex) {\r\n//     return this._defs.def(defIndex) && this._defs.def(defIndex).type === PatternDefinitions.TYPES.INPUT;\r\n//   }\r\n\r\n//   hiddenHollowsBefore (defIndex) {\r\n//     return this.hollows.filter(h => h < defIndex && this.isHiddenHollow(h));\r\n//   }\r\n\r\n//   mapDefIndexToPos (defIndex) {\r\n//     return defIndex - this.hiddenHollowsBefore(defIndex).length;\r\n//   }\r\n\r\n//   mapPosToDefIndex (pos) {\r\n//     var defIndex = pos;\r\n//     for (var hi=0; hi<this.hollows.length; ++hi) {\r\n//       var h = this.hollows[hi];\r\n//       if (h >= defIndex) break;\r\n//       if (this.isHiddenHollow(h)) ++defIndex;\r\n//     }\r\n//     return defIndex;\r\n//   }\r\n// }\r\n\r\n\r\nexport default\r\nclass PatternResolver extends BaseResolver {\r\n  constructor ({placeholder, definitions, mask}) {\r\n    super();\r\n    this.mask = mask;\r\n    this.placeholder = placeholder;\r\n    this.definitions = {\r\n      ...PatternDefinitions.DEFAULT,\r\n      ...definitions\r\n    };\r\n    this.state = new PatternState(this.definitions);\r\n    this._initialized = true;\r\n  }\r\n\r\n  // append (tail, skipUnresolvedInput=true) {\r\n  //   var str = this.state.value;\r\n  //   var placeholderBuffer = '';\r\n  //   var hollows = this._hollows.slice();\r\n  //   var overflow = false;\r\n\r\n  //   for (var ci=0, di=this._mapPosToDefIndex(str.length); ci < tail.length;) {\r\n  //     if (this._isHollow(di)) {\r\n  //       // TODO check other cases\r\n  //       ++di;\r\n  //       continue;\r\n  //     }\r\n\r\n  //     var ch = tail[ci];\r\n  //     var def = this.def(di, str + placeholderBuffer);\r\n\r\n  //     // failed\r\n  //     if (!def) {\r\n  //       overflow = true;\r\n  //       break;\r\n  //     }\r\n\r\n  //     var resolved, skipped;\r\n  //     if (def.type === PatternDefinitions.TYPES.INPUT) {\r\n  //       var resolver = this._resolvers[def.char];\r\n  //       var chres = resolver.resolve(ch, di, str + placeholderBuffer) || '';\r\n  //       resolved = !!chres;\r\n  //       skipped = !chres && !def.optional;\r\n\r\n  //       // if ok - next di\r\n  //       if (chres) {\r\n  //         chres = conform(chres, ch);\r\n  //       } else {\r\n  //         if (!def.optional && skipUnresolvedInput) {\r\n  //           chres = this._placeholder.char;\r\n  //           skipped = false;\r\n  //         }\r\n  //         if (!skipped) hollows.push(di);\r\n  //       }\r\n\r\n  //       if (chres) {\r\n  //         str += placeholderBuffer + conform(chres, ch);\r\n  //         placeholderBuffer = '';\r\n  //       }\r\n  //     } else {\r\n  //       placeholderBuffer += def.char;\r\n  //       resolved = ch === def.char && (def.unmasking || !skipUnresolvedInput);\r\n  //     }\r\n\r\n  //     if (!skipped) ++di;\r\n  //     if (resolved || skipped) ++ci;\r\n  //   }\r\n\r\n  //   this._appendPlaceholderEnd();\r\n\r\n  //   return [str, hollows, overflow];\r\n  // }\r\n\r\n  // _generateInsertSteps (inserted) {\r\n  //   // TODO\r\n  //   var head = this.rawValue;\r\n\r\n  //   var overflow = false;\r\n\r\n  //   // save hollow during generation\r\n  //   var hollows = this._hollows;\r\n\r\n  //   var insertSteps = [[head, hollows.slice()]];\r\n\r\n  //   for (var ci=0; ci<inserted.length && !overflow; ++ci) {\r\n  //     var ch = inserted[ci];\r\n  //     var [res, hollows, overflow] = this.append(head, ch, false);\r\n  //     this._hollows = hollows;\r\n  //     if (!overflow && res !== head) {\r\n  //       insertSteps.push([res, hollows]);\r\n  //       head = res;\r\n  //     }\r\n  //   }\r\n\r\n  //   // pop hollows back\r\n  //   this._hollows = hollows;\r\n\r\n  //   return insertSteps;\r\n  // }\r\n\r\n  // _tryInsert (inserted, tailInput) {\r\n  //   for (var ci=0; ci<inserted.length && !overflow; ++ci) {\r\n  //     var ch = inserted[ci];\r\n  //     var [res, hollows, overflow] = this.append(head, ch, false);\r\n  //     this._hollows = hollows;\r\n  //     if (!overflow && res !== head) {\r\n  //       insertSteps.push([res, hollows]);\r\n  //       head = res;\r\n  //     }\r\n  //   }\r\n  // }\r\n\r\n  // resolve (str, details) {\r\n  //   var cursorPos = details.cursorPos;\r\n  //   var startChangePos = details.startChangePos;\r\n  //   var inserted = details.inserted;\r\n  //   var removedCount = details.removed.length;\r\n  //   var tailPos = startChangePos + removedCount;\r\n\r\n  //   var tailInputChunks = this.extractInputChunks(tailPos);\r\n\r\n  //   // remove hollows after cursor\r\n  //   var lastHollowIndex = this._mapPosToDefIndex(startChangePos);\r\n  //   this._hollows = this._hollows.filter(h => h < lastHollowIndex);\r\n\r\n  //   var res = details.head;\r\n  //   // if remove at left - adjust start change pos to trim holes and fixed at the end\r\n  //   if (details.removeDirection === DIRECTION.LEFT) res = res.slice(0, this._nearestInputPos(startChangePos));\r\n\r\n  //   // insert available\r\n  //   var insertSteps = this._generateInsertSteps(res, inserted);\r\n  //   for (var istep=insertSteps.length-1; istep >= 0; --istep) {\r\n  //     var step, tres, overflow;\r\n  //     [step, this._hollows] = insertSteps[istep];\r\n  //     [tres, this._hollows, overflow] = this.appendTailChunks(step, tailInputChunks);\r\n  //     if (!overflow) {\r\n  //       res = tres;\r\n  //       cursorPos = step.length;\r\n  //       break;\r\n  //     }\r\n  //   }\r\n\r\n  //   res = this._appendPlaceholderEnd(res);\r\n  //   details.cursorPos = this._nearestInputPos(cursorPos, details.removeDirection);\r\n\r\n  //   return res;\r\n  // }\r\n\r\n  // nearestInputPos (cursorPos, direction=DIRECTION.LEFT) {\r\n  //   if (!direction) return cursorPos;\r\n\r\n  //   var initialDefIndex = this._mapPosToDefIndex(cursorPos);\r\n  //   var di = initialDefIndex;\r\n\r\n  //   var firstInputIndex,\r\n  //       firstFilledInputIndex,\r\n  //       firstVisibleHollowIndex,\r\n  //       nextdi;\r\n\r\n  //   // search forward\r\n  //   for (nextdi = indexInDirection(di, direction); this.def(nextdi); di += direction, nextdi += direction) {\r\n  //     if (firstInputIndex == null && this._isInput(nextdi)) firstInputIndex = di;\r\n  //     if (firstVisibleHollowIndex == null && this._isHollow(nextdi) && !this._isHiddenHollow(nextdi)) firstVisibleHollowIndex = di;\r\n  //     if (this._isInput(nextdi) && !this._isHollow(nextdi)) {\r\n  //       firstFilledInputIndex = di;\r\n  //       break;\r\n  //     }\r\n  //   }\r\n\r\n  //   if (direction === DIRECTION.LEFT || firstInputIndex == null) {\r\n  //     // search backwards\r\n  //     direction = -direction;\r\n  //     var overflow = false;\r\n\r\n  //     // find hollows only before initial pos\r\n  //     for (nextdi = indexInDirection(di, direction); this.def(nextdi); di += direction, nextdi += direction) {\r\n  //       if (this._isInput(nextdi)) {\r\n  //         firstInputIndex = di;\r\n  //         if (this._isHollow(nextdi) && !this._isHiddenHollow(nextdi)) break;\r\n  //       }\r\n\r\n  //       // if hollow not found before start position - set `overflow`\r\n  //       // and try to find just any input\r\n  //       if (di === initialDefIndex) overflow = true;\r\n\r\n  //       // first input found\r\n  //       if (overflow && firstInputIndex != null) break;\r\n  //     }\r\n\r\n  //     // process overflow\r\n  //     overflow = overflow || !this.def(nextdi);\r\n  //     if (overflow && firstInputIndex != null) di = firstInputIndex;\r\n  //   } else if (firstFilledInputIndex == null) {\r\n  //     // adjust index if delete at right and filled input not found at right\r\n  //     di = firstVisibleHollowIndex != null ?\r\n  //       firstVisibleHollowIndex :\r\n  //       firstInputIndex;\r\n  //   }\r\n\r\n  //   return this._mapDefIndexToPos(di);\r\n  // }\r\n\r\n  // get isComplete () {\r\n  //   for (var di=0; ; ++di) {\r\n  //     var def = this.def(di);\r\n  //     if (!def) break;\r\n  //     if (this._isInput(di) && !def.optional && this._isHollow(di)) return false;\r\n  //   }\r\n  //   return true;\r\n  // }\r\n\r\n  // get placeholder () { return this._placeholder; }\r\n\r\n  // set placeholder (ph) {\r\n  //   this._placeholder = {\r\n  //     ...PatternResolver.DEFAULT_PLACEHOLDER,\r\n  //     ...ph\r\n  //   };\r\n  //   this.refreshValue();\r\n  // }\r\n\r\n  // get placeholderLabel () {\r\n  //   return this.defs().map(def =>\r\n  //     def.type === PatternDefinitions.TYPES.FIXED ?\r\n  //       def.char :\r\n  //       !def.optional ?\r\n  //         this._placeholder.char :\r\n  //         '').join('');\r\n  // }\r\n\r\n  // get definitions () { return this._definitions; }\r\n\r\n  // set definitions (defs) {\r\n  //   this._installDefinitions(defs);\r\n  //   this.refreshValue();\r\n  // }\r\n\r\n  // get mask () { return this._mask; }\r\n\r\n  // set mask (mask) {\r\n  //   this._mask = mask;\r\n  //   if (this._initialized) this.definitions = this.definitions;\r\n  // }\r\n\r\n  // refreshValue () {\r\n    // TODO\r\n    // if (this._initialized) this.unmaskedValue = this.unmaskedValue;\r\n  // }\r\n\r\n  // _calcUnmasked (str) {\r\n  //   var unmasked = '';\r\n  //   for (var ci=0, di=0; ci<str.length; ++di) {\r\n  //     var ch = str[ci];\r\n  //     var def = this.def(di, str);\r\n\r\n  //     if (!def) break;\r\n  //     if (this._isHiddenHollow(di)) continue;\r\n\r\n  //     if (def.unmasking && !this._isHollow(di) &&\r\n  //       (this._isInput(di) && this._resolvers[def.char].resolve(ch, ci, str) ||\r\n  //         def.char === ch)) {\r\n  //       unmasked += ch;\r\n  //     }\r\n  //     ++ci;\r\n  //   }\r\n  //   return unmasked;\r\n  // }\r\n\r\n  defs (str) {\r\n    var defs = [];\r\n    for (var i=0; ; ++i) {\r\n      var def = this.def(i, str);\r\n      if (!def) break;\r\n      defs.push(def);\r\n    }\r\n    return defs;\r\n  }\r\n\r\n  def (index, str) {\r\n    return this._charDefs[index];\r\n  }\r\n\r\n  _buildResolvers () {\r\n    this._resolvers = {};\r\n    for (var defKey in this.definitions) {\r\n      this._resolvers[defKey] = IMask.MaskFactory(this.el, {\r\n        mask: this.definitions[defKey]\r\n      });\r\n    }\r\n  }\r\n\r\n  // _appendPlaceholderEnd (toPos) {\r\n\r\n  //   // TODO with state\r\n\r\n  //   // use `toPos-1` to prevent out of bounds, and then use `<=` compare\r\n  //   var toDefIndex = this._mapPosToDefIndex(toPos-1);\r\n  //   for (var di=this._mapPosToDefIndex(res.length); di <= toDefIndex; ++di) {\r\n  //     var def = this.def(di, res);\r\n  //     if (!def) break;\r\n\r\n  //     if (this._isInput(di) && !this._isHollow(di)) {\r\n  //       this._hollows.push(di);\r\n  //     }\r\n  //     if (this._placeholder.show === 'always' || toPos) {\r\n  //       res += def.type === PatternDefinitions.TYPES.FIXED ?\r\n  //         def.char :\r\n  //         !def.optional ?\r\n  //           this._placeholder.char :\r\n  //           '';\r\n  //     }\r\n  //   }\r\n  //   return res;\r\n  // }\r\n\r\n  // _appendTail (tail) {\r\n  //   return this.appendChunks(tail);\r\n  // }\r\n\r\n  // appendChunks (chunks, skipUnresolvedInput) {\r\n  //   for (var ci=0; ci < chunks.length; ++ci) {\r\n  //     var [, input] = chunks[ci];\r\n  //     if (this.append(input, skipUnresolvedInput) === false) return false;\r\n\r\n  //     // not last - append placeholder between stops\r\n  //     // var chunk2 = chunks[ci+1];\r\n  //     // var stop2 = chunk2 && chunk2[0];\r\n  //     // if (stop2) str = this._appendPlaceholderEnd(str, stop2);\r\n  //   }\r\n  //   return true;\r\n  // }\r\n\r\n\r\n  // _extractTail (fromPos, toPos) {\r\n  //   return this.extractInputChunks(fromPos, toPos);\r\n  // }\r\n\r\n  // extractInput (fromPos=0, toPos=this.rawValue.length) {\r\n  //   // TODO fromPos === toPos\r\n  //   var str = this.rawValue;\r\n  //   var input = '';\r\n\r\n  //   // use `toPos-1` to prevent out of bounds, and then use `<=` compare\r\n  //   var toDefIndex = this._mapPosToDefIndex(toPos-1);\r\n  //   for (var ci=0, di=this._mapPosToDefIndex(fromPos); ci<str.length && di <= toDefIndex; ++di) {\r\n  //     var ch = str[ci];\r\n  //     var def = this.def(di, str);\r\n\r\n  //     if (!def) break;\r\n  //     if (this._isHiddenHollow(di)) continue;\r\n\r\n  //     if (this._isInput(di) && !this._isHollow(di)) input += ch;\r\n  //     ++ci;\r\n  //   }\r\n  //   return input;\r\n  // }\r\n\r\n  // extractInputChunks (fromPos=0, toPos=this.rawValue.length) {\r\n  //   // TODO fromPos === toPos\r\n  //   var fromDefIndex = this._mapPosToDefIndex(fromPos);\r\n  //   // use `toPos-1` to prevent out of bounds, and then use `<=` compare\r\n  //   var toDefIndex = this._mapPosToDefIndex(toPos-1);\r\n  //   var stops = [\r\n  //     fromPos,\r\n  //     ...this._alignStops\r\n  //       .filter(s => fromDefIndex <= s && s <= toDefIndex)\r\n  //       .map(s => this._mapDefIndexToPos(s)),\r\n  //     toPos\r\n  //   ];\r\n  //   var str = this.rawValue;\r\n  //   var chunks = [];\r\n  //   for (var si=0; si<stops.length && str; ++si) {\r\n  //     var s = stops[si];\r\n  //     var s2 = stops[si+1];\r\n  //     chunks.push([s, this.extractInput(s, s2)]);\r\n  //     if (s2) str = str.slice(s2 - s);\r\n  //   }\r\n  //   return chunks;\r\n  // }\r\n\r\n  _installDefinitions (definitions) {\r\n    this._definitions = definitions;\r\n    this._charDefs = [];\r\n    this._alignStops = [];\r\n\r\n    var pattern = this.mask;\r\n    if (!pattern || !definitions) return;\r\n\r\n    var unmaskingBlock = false;\r\n    var optionalBlock = false;\r\n    for (var i=0; i<pattern.length; ++i) {\r\n      var ch = pattern[i];\r\n      var type = !unmaskingBlock && ch in definitions ?\r\n        PatternDefinitions.TYPES.INPUT :\r\n        PatternDefinitions.TYPES.FIXED;\r\n      var unmasking = type === PatternDefinitions.TYPES.INPUT || unmaskingBlock;\r\n      var optional = type === PatternDefinitions.TYPES.INPUT && optionalBlock;\r\n\r\n      if (ch === PatternResolver.STOP_CHAR) {\r\n        this._alignStops.push(this._charDefs.length);\r\n        continue;\r\n      }\r\n\r\n      if (ch === '{' || ch === '}') {\r\n        unmaskingBlock = !unmaskingBlock;\r\n        continue;\r\n      }\r\n\r\n      if (ch === '[' || ch === ']') {\r\n        optionalBlock = !optionalBlock;\r\n        continue;\r\n      }\r\n\r\n      if (ch === PatternResolver.ESCAPE_CHAR) {\r\n        ++i;\r\n        ch = pattern[i];\r\n        // TODO validation\r\n        if (!ch) break;\r\n        type = PatternDefinitions.TYPES.FIXED;\r\n      }\r\n\r\n      this._charDefs.push({\r\n        char: ch,\r\n        type: type,\r\n        optional: optional,\r\n        unmasking: unmasking\r\n      });\r\n    }\r\n\r\n    this._buildResolvers();\r\n  }\r\n}\r\n\r\nPatternResolver.DEFAULT_PLACEHOLDER = {\r\n  show: 'lazy',\r\n  char: '_'\r\n};\r\nPatternResolver.STOP_CHAR = '\\'';\r\nPatternResolver.ESCAPE_CHAR = '\\\\';\r\n","import BaseMask from './base';\r\nimport PatternResolver from '../resolvers/pattern';\r\n\r\n\r\nexport default\r\nclass PatternMask extends BaseMask {\r\n  // constructor (el, opts) {\r\n    // super(el, opts);\r\n\r\n    // var {placeholder, definitions} = opts;\r\n\r\n    // this.resolver = new PatternResolver({\r\n    //   placeholder,\r\n    //   definitions\r\n    // });\r\n\r\n    // this._alignCursor = this._alignCursor.bind(this);\r\n    // this._alignCursorFriendly = this._alignCursorFriendly.bind(this);\r\n  // }\r\n\r\n  // _alignCursorFriendly () {\r\n  //   if (this.selectionStart !== this.cursorPos) return;\r\n  //   this._alignCursor();\r\n  // }\r\n\r\n  // bindEvents () {\r\n  //   super.bindEvents();\r\n  //   this.el.addEventListener('click', this._alignCursorFriendly);\r\n  // }\r\n\r\n  // unbindEvents () {\r\n  //   super.unbindEvents();\r\n  //   this.el.removeEventListener('click', this._alignCursorFriendly);\r\n  // }\r\n\r\n  // _fireChangeEvents () {\r\n  //   // fire 'complete' after 'accept' event\r\n  //   super._fireChangeEvents();\r\n  //   if (this.isComplete) this.fireEvent(\"complete\");\r\n  // }\r\n\r\n  // get isComplete () {\r\n  //   return this.resolver.isComplete;\r\n  // }\r\n\r\n  get unmaskedValue () {\r\n    return this._unmaskedValue;\r\n  }\r\n\r\n  set unmaskedValue (str) {\r\n    // TODO\r\n    this._hollows.length = 0;\r\n    var res;\r\n    [res, this._hollows] = this._appendTail('', str);\r\n    this.updateElement(this._appendPlaceholderEnd(res));\r\n\r\n    this._alignCursor();\r\n  }\r\n\r\n  get placeholder () { return this.resolver.placeholder; }\r\n  set placeholder (ph) { this.resolver.placeholder = ph; }\r\n\r\n\r\n  get definitions () { return this.resolver.definitions; }\r\n  set definitions (defs) { this.resolver.definitions = defs; }\r\n\r\n  get mask () { return this.resolver.mask; }\r\n  set mask (mask) {this.resolver.mask = mask;}\r\n}\r\n","import BaseMask from './base';\r\nimport {extendDetailsAdjustments} from '../utils';\r\n\r\n\r\nexport default\r\nclass PipeMask extends BaseMask {\r\n  constructor (el, opts) {\r\n    super(el, opts);\r\n\r\n    this.multipass = opts.multipass;\r\n\r\n    this._compiledMasks = this.mask.map(m => IMask.MaskFactory(el, m));\r\n  }\r\n\r\n  resolve (str, details) {\r\n    var res = this._pipe(str, details);\r\n    if (!this.multipass) return res;\r\n\r\n    var cursorPos = details.cursorPos;\r\n\r\n    var stepRes;\r\n    var tempRes = res;\r\n\r\n    while (stepRes !== tempRes) {\r\n      stepRes = tempRes;\r\n      tempRes = this._pipe(stepRes, {\r\n        cursorPos: stepRes.length,\r\n        oldValue: stepRes,\r\n        oldSelection: {\r\n          start: 0,\r\n          end: stepRes.length\r\n        }\r\n      });\r\n    }\r\n\r\n    details.cursorPos = cursorPos - (res.length - stepRes.length);\r\n\r\n    return stepRes;\r\n  }\r\n\r\n  _pipe (str, details) {\r\n    return this._compiledMasks.reduce((s, m) => {\r\n      var d = extendDetailsAdjustments(s, details);\r\n      var res = m.resolve(s, d);\r\n      details.cursorPos = d.cursorPos;\r\n      return res;\r\n    }, str);\r\n  }\r\n\r\n  bindEvents () {\r\n    super.bindEvents();\r\n    this._compiledMasks.forEach(m => {\r\n      m.bindEvents();\r\n      // disable basemask events for child masks\r\n      BaseMask.prototype.unbindEvents.apply(m);\r\n    });\r\n  }\r\n\r\n  unbindEvents () {\r\n    super.unbindEvents();\r\n    this._compiledMasks.forEach(m => m.unbindEvents());\r\n  }\r\n}\r\n","import {isString} from './utils';\r\n\r\nimport BaseMask from './masks/base';\r\nimport RegExpMask from './masks/regexp';\r\nimport FuncMask from './masks/func';\r\nimport PatternMask from './masks/pattern';\r\nimport PipeMask from './masks/pipe';\r\n\r\nimport ResolverBase from './resolvers/pattern';\r\nimport ResolverPattern from './resolvers/base';\r\n\r\n\r\nexport default\r\nfunction IMask (el, opts={}) {\r\n  var mask = new BaseMask(el, opts);\r\n  mask.bindEvents();\r\n  // refresh\r\n  mask.rawValue = el.value;\r\n  return mask;\r\n}\r\n\r\n// IMask.MaskFactory = function (el, opts) {\r\n//   var mask = opts.mask;\r\n//   if (mask instanceof BaseMask) return mask;\r\n//   if (mask instanceof RegExp) return new RegExpMask(el, opts);\r\n//   if (mask instanceof Array) return new PipeMask(el, opts);\r\n//   if (isString(mask)) return new PatternMask(el, opts);\r\n//   if (mask.prototype instanceof BaseMask) return new mask(el, opts);\r\n//   if (mask instanceof Function) return new FuncMask(el, opts);\r\n//   return new BaseMask(el, opts);\r\n// }\r\n\r\nIMask.Mask\r\n\r\nIMask.BaseMask = BaseMask;\r\nIMask.FuncMask = FuncMask;\r\nIMask.RegExpMask = RegExpMask;\r\nIMask.PatternMask = PatternMask;\r\nIMask.PipeMask = PipeMask;\r\n\r\nIMask.ResolverBase = ResolverBase;\r\nIMask.ResolverPattern = ResolverPattern;\r\n\r\nwindow.IMask = IMask;\r\n"],"names":["isString","str","String","conform","res","fallback","DIRECTION","extendDetailsAdjustments","details","cursorPos","oldSelection","oldValue","startChangePos","Math","min","start","insertedCount","removedCount","max","end","length","substring","substr","RIGHT","LEFT","Masked","mask","validate","_value","_validate","clone","m","value","slice","reset","nearestInputPos","direction","extractInput","fromPos","toPos","_extractTail","_appendTail","tail","append","skipUnresolvedInput","oldValueLength","consistentValue","ci","appendWithTail","appendCount","consistentAppended","ch","appended","tailAppended","_unmask","clear","from","to","splice","deleteCount","inserted","removeDirection","tailPos","PatternDefinition","opts","_masked","createMask","resolve","type","TYPES","INPUT","isHollow","optional","DEFAULTS","PatternMasked","definitions","placeholder","_charDefs","forEach","d","i","babelHelpers.extends","hiddenHollowsBefore","defIndex","filter","isHiddenHollow","mapDefIndexToPos","mapPosToDefIndex","pos","di","def","unmasked","unmasking","isInput","_resolvers","char","appendChunks","resolved","skipped","chres","_placeholder","_appendPlaceholder","chunks","input","extractInputChunks","toDefIndex","fromDefIndex","stops","_alignStops","s","map","_mapDefIndexToPos","si","s2","push","show","FIXED","_installDefinitions","defKey","IMask","MaskFactory","el","ph","DEFAULT_PLACEHOLDER","_definitions","defs","pattern","unmaskingBlock","optionalBlock","STOP_CHAR","ESCAPE_CHAR","_mask","some","RegExp","masked","test","prototype","Function","BaseMask","_listeners","_rawValue","_unmaskedValue","saveSelection","bind","_onInput","_onDrop","_alignCursor","_alignCursorFriendly","on","ev","handler","off","hIndex","indexOf","bindEvents","addEventListener","unbindEvents","removeEventListener","fireEvent","listeners","l","processInput","inputValue","_selection","rawValue","unmaskedValue","updateValue","updateCursor","warn","selectionStart","destroy","newUnmaskedValue","newRawValue","isChanged","_fireChangeEvents","isComplete","_delayUpdateCursor","_abortUpdateCursor","_changingCursorPos","_cursorChanging","setTimeout","preventDefault","stopPropagation","removed","selectionEnd","document","activeElement","setSelectionRange","RegExpMask","FuncMask","State","BaseResolver","state","consistentState","_nearestInputPos","_state","PatternResolver","PatternDefinitions","DEFAULT","PatternState","_initialized","index","_buildResolvers","PatternMask","_hollows","updateElement","_appendPlaceholderEnd","resolver","PipeMask","multipass","_compiledMasks","_pipe","stepRes","tempRes","reduce","apply","ResolverBase","ResolverPattern","window"],"mappings":"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"}