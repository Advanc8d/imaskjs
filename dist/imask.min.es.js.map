{"version":3,"file":"imask.min.es.js","sources":["../src/core/utils.js","../src/masked/factory.js","../src/imask.js","../node_modules/core-js/modules/_global.js","../node_modules/core-js/modules/_core.js","../node_modules/core-js/modules/_is-object.js","../node_modules/core-js/modules/_an-object.js","../node_modules/core-js/modules/_fails.js","../node_modules/core-js/modules/_descriptors.js","../node_modules/core-js/modules/_dom-create.js","../node_modules/core-js/modules/_ie8-dom-define.js","../node_modules/core-js/modules/_to-primitive.js","../node_modules/core-js/modules/_object-dp.js","../node_modules/core-js/modules/_property-desc.js","../node_modules/core-js/modules/_hide.js","../node_modules/core-js/modules/_has.js","../node_modules/core-js/modules/_uid.js","../node_modules/core-js/modules/_redefine.js","../node_modules/core-js/modules/_a-function.js","../node_modules/core-js/modules/_ctx.js","../node_modules/core-js/modules/_export.js","../node_modules/core-js/modules/_cof.js","../node_modules/core-js/modules/_iobject.js","../node_modules/core-js/modules/_defined.js","../node_modules/core-js/modules/_to-object.js","../node_modules/core-js/modules/_to-integer.js","../node_modules/core-js/modules/_to-length.js","../node_modules/core-js/modules/_is-array.js","../node_modules/core-js/modules/_shared.js","../node_modules/core-js/modules/_wks.js","../node_modules/core-js/modules/_array-species-constructor.js","../node_modules/core-js/modules/_array-species-create.js","../node_modules/core-js/modules/_array-methods.js","../node_modules/core-js/modules/_add-to-unscopables.js","../node_modules/core-js/modules/es6.array.find.js","../node_modules/core-js/modules/_to-iobject.js","../node_modules/core-js/modules/_to-index.js","../node_modules/core-js/modules/_array-includes.js","../node_modules/core-js/modules/_shared-key.js","../node_modules/core-js/modules/_object-keys-internal.js","../node_modules/core-js/modules/_enum-bug-keys.js","../node_modules/core-js/modules/_object-keys.js","../node_modules/core-js/modules/_object-sap.js","../node_modules/core-js/modules/es6.object.keys.js","../node_modules/core-js/modules/_string-repeat.js","../node_modules/core-js/modules/es6.string.repeat.js","../node_modules/core-js/modules/_string-pad.js","../node_modules/core-js/modules/es7.string.pad-start.js","../node_modules/core-js/modules/es7.string.pad-end.js","../src/masked/base.js","../src/masked/pattern/definition.js","../src/masked/pattern/group.js","../src/masked/pattern.js","../src/masked/number.js","../src/masked/date.js","../src/core/action-details.js","../src/controls/input.js"],"sourcesContent":["export\r\nfunction isString (str) {\r\n  return typeof str === 'string' || str instanceof String;\r\n}\r\n\r\nexport\r\nfunction conform (res, str, fallback='') {\r\n  return isString(res) ?\r\n    res :\r\n    res ?\r\n      str :\r\n      fallback;\r\n}\r\n\r\nexport\r\nconst DIRECTION = {\r\n  NONE: 0,\r\n  LEFT: -1,\r\n  RIGHT: 1\r\n}\r\n\r\nexport\r\nfunction indexInDirection (pos, direction) {\r\n  if (direction === DIRECTION.LEFT) --pos;\r\n  return pos;\r\n}\r\n\r\nexport\r\nfunction refreshValueOnSet (target, key, descriptor) {\r\n  const method = descriptor.set;\r\n  descriptor.set = function (...args) {\r\n    return this.withValueRefresh(method.bind(this, ...args));\r\n  };\r\n}\r\n\r\nexport\r\nfunction escapeRegExp(str) {\r\n  return str.replace(/([.*+?^=!:${}()|\\[\\]\\/\\\\])/g, '\\\\$1');\r\n}\r\n","import {isString} from '../core/utils';\r\n\r\nimport Masked from './base';\r\nimport MaskedPattern from './pattern';\r\n\r\n\r\nexport default\r\nfunction createMask (opts) {\r\n  const mask = opts.mask;\r\n  if (mask instanceof Masked) return mask;\r\n  if (mask instanceof RegExp) return new Masked({\r\n    ...opts,\r\n    validate: (value) => mask.test(value)\r\n  });\r\n  if (isString(mask)) return new MaskedPattern(opts);\r\n  if (mask.prototype instanceof Masked) {\r\n    opts = {...opts};\r\n    delete opts.mask;\r\n    return new mask(opts);\r\n  }\r\n  if (mask instanceof Function){\r\n    return new Masked({\r\n      ...opts,\r\n      validate: mask\r\n    });\r\n  }\r\n  return new Masked(opts);\r\n}\r\n","import 'core-js/fn/array/find';\r\nimport 'core-js/fn/object/keys';\r\nimport 'core-js/fn/string/repeat';\r\nimport 'core-js/fn/string/pad-start';\r\nimport 'core-js/fn/string/pad-end';\r\n\r\n\r\nimport Masked from './masked/base';\r\nimport MaskedPattern from './masked/pattern';\r\nimport MaskedNumber from './masked/number';\r\nimport MaskedDate from './masked/date';\r\n\r\nimport InputMask from './controls/input';\r\n\r\n\r\nexport default\r\nfunction IMask (el, opts={}) {\r\n\t// currently available only for input elements\r\n  return new InputMask(el, opts);\r\n}\r\n\r\n\r\nIMask.InputMask = InputMask;\r\n\r\nIMask.Masked = Masked;\r\nIMask.MaskedPattern = MaskedPattern;\r\nIMask.MaskedNumber = MaskedNumber;\r\nIMask.MaskedDate = MaskedDate;\r\n\r\nwindow.IMask = IMask;\r\n","// https://github.com/zloirock/core-js/issues/86#issuecomment-115759028\nvar global = module.exports = typeof window != 'undefined' && window.Math == Math\n  ? window : typeof self != 'undefined' && self.Math == Math ? self : Function('return this')();\nif(typeof __g == 'number')__g = global; // eslint-disable-line no-undef","var core = module.exports = {version: '2.4.0'};\nif(typeof __e == 'number')__e = core; // eslint-disable-line no-undef","module.exports = function(it){\n  return typeof it === 'object' ? it !== null : typeof it === 'function';\n};","var isObject = require('./_is-object');\nmodule.exports = function(it){\n  if(!isObject(it))throw TypeError(it + ' is not an object!');\n  return it;\n};","module.exports = function(exec){\n  try {\n    return !!exec();\n  } catch(e){\n    return true;\n  }\n};","// Thank's IE8 for his funny defineProperty\nmodule.exports = !require('./_fails')(function(){\n  return Object.defineProperty({}, 'a', {get: function(){ return 7; }}).a != 7;\n});","var isObject = require('./_is-object')\n  , document = require('./_global').document\n  // in old IE typeof document.createElement is 'object'\n  , is = isObject(document) && isObject(document.createElement);\nmodule.exports = function(it){\n  return is ? document.createElement(it) : {};\n};","module.exports = !require('./_descriptors') && !require('./_fails')(function(){\n  return Object.defineProperty(require('./_dom-create')('div'), 'a', {get: function(){ return 7; }}).a != 7;\n});","// 7.1.1 ToPrimitive(input [, PreferredType])\nvar isObject = require('./_is-object');\n// instead of the ES6 spec version, we didn't implement @@toPrimitive case\n// and the second argument - flag - preferred type is a string\nmodule.exports = function(it, S){\n  if(!isObject(it))return it;\n  var fn, val;\n  if(S && typeof (fn = it.toString) == 'function' && !isObject(val = fn.call(it)))return val;\n  if(typeof (fn = it.valueOf) == 'function' && !isObject(val = fn.call(it)))return val;\n  if(!S && typeof (fn = it.toString) == 'function' && !isObject(val = fn.call(it)))return val;\n  throw TypeError(\"Can't convert object to primitive value\");\n};","var anObject       = require('./_an-object')\n  , IE8_DOM_DEFINE = require('./_ie8-dom-define')\n  , toPrimitive    = require('./_to-primitive')\n  , dP             = Object.defineProperty;\n\nexports.f = require('./_descriptors') ? Object.defineProperty : function defineProperty(O, P, Attributes){\n  anObject(O);\n  P = toPrimitive(P, true);\n  anObject(Attributes);\n  if(IE8_DOM_DEFINE)try {\n    return dP(O, P, Attributes);\n  } catch(e){ /* empty */ }\n  if('get' in Attributes || 'set' in Attributes)throw TypeError('Accessors not supported!');\n  if('value' in Attributes)O[P] = Attributes.value;\n  return O;\n};","module.exports = function(bitmap, value){\n  return {\n    enumerable  : !(bitmap & 1),\n    configurable: !(bitmap & 2),\n    writable    : !(bitmap & 4),\n    value       : value\n  };\n};","var dP         = require('./_object-dp')\n  , createDesc = require('./_property-desc');\nmodule.exports = require('./_descriptors') ? function(object, key, value){\n  return dP.f(object, key, createDesc(1, value));\n} : function(object, key, value){\n  object[key] = value;\n  return object;\n};","var hasOwnProperty = {}.hasOwnProperty;\nmodule.exports = function(it, key){\n  return hasOwnProperty.call(it, key);\n};","var id = 0\n  , px = Math.random();\nmodule.exports = function(key){\n  return 'Symbol('.concat(key === undefined ? '' : key, ')_', (++id + px).toString(36));\n};","var global    = require('./_global')\n  , hide      = require('./_hide')\n  , has       = require('./_has')\n  , SRC       = require('./_uid')('src')\n  , TO_STRING = 'toString'\n  , $toString = Function[TO_STRING]\n  , TPL       = ('' + $toString).split(TO_STRING);\n\nrequire('./_core').inspectSource = function(it){\n  return $toString.call(it);\n};\n\n(module.exports = function(O, key, val, safe){\n  var isFunction = typeof val == 'function';\n  if(isFunction)has(val, 'name') || hide(val, 'name', key);\n  if(O[key] === val)return;\n  if(isFunction)has(val, SRC) || hide(val, SRC, O[key] ? '' + O[key] : TPL.join(String(key)));\n  if(O === global){\n    O[key] = val;\n  } else {\n    if(!safe){\n      delete O[key];\n      hide(O, key, val);\n    } else {\n      if(O[key])O[key] = val;\n      else hide(O, key, val);\n    }\n  }\n// add fake Function#toString for correct work wrapped methods / constructors with methods like LoDash isNative\n})(Function.prototype, TO_STRING, function toString(){\n  return typeof this == 'function' && this[SRC] || $toString.call(this);\n});","module.exports = function(it){\n  if(typeof it != 'function')throw TypeError(it + ' is not a function!');\n  return it;\n};","// optional / simple context binding\nvar aFunction = require('./_a-function');\nmodule.exports = function(fn, that, length){\n  aFunction(fn);\n  if(that === undefined)return fn;\n  switch(length){\n    case 1: return function(a){\n      return fn.call(that, a);\n    };\n    case 2: return function(a, b){\n      return fn.call(that, a, b);\n    };\n    case 3: return function(a, b, c){\n      return fn.call(that, a, b, c);\n    };\n  }\n  return function(/* ...args */){\n    return fn.apply(that, arguments);\n  };\n};","var global    = require('./_global')\n  , core      = require('./_core')\n  , hide      = require('./_hide')\n  , redefine  = require('./_redefine')\n  , ctx       = require('./_ctx')\n  , PROTOTYPE = 'prototype';\n\nvar $export = function(type, name, source){\n  var IS_FORCED = type & $export.F\n    , IS_GLOBAL = type & $export.G\n    , IS_STATIC = type & $export.S\n    , IS_PROTO  = type & $export.P\n    , IS_BIND   = type & $export.B\n    , target    = IS_GLOBAL ? global : IS_STATIC ? global[name] || (global[name] = {}) : (global[name] || {})[PROTOTYPE]\n    , exports   = IS_GLOBAL ? core : core[name] || (core[name] = {})\n    , expProto  = exports[PROTOTYPE] || (exports[PROTOTYPE] = {})\n    , key, own, out, exp;\n  if(IS_GLOBAL)source = name;\n  for(key in source){\n    // contains in native\n    own = !IS_FORCED && target && target[key] !== undefined;\n    // export native or passed\n    out = (own ? target : source)[key];\n    // bind timers to global for call from export context\n    exp = IS_BIND && own ? ctx(out, global) : IS_PROTO && typeof out == 'function' ? ctx(Function.call, out) : out;\n    // extend global\n    if(target)redefine(target, key, out, type & $export.U);\n    // export\n    if(exports[key] != out)hide(exports, key, exp);\n    if(IS_PROTO && expProto[key] != out)expProto[key] = out;\n  }\n};\nglobal.core = core;\n// type bitmap\n$export.F = 1;   // forced\n$export.G = 2;   // global\n$export.S = 4;   // static\n$export.P = 8;   // proto\n$export.B = 16;  // bind\n$export.W = 32;  // wrap\n$export.U = 64;  // safe\n$export.R = 128; // real proto method for `library` \nmodule.exports = $export;","var toString = {}.toString;\n\nmodule.exports = function(it){\n  return toString.call(it).slice(8, -1);\n};","// fallback for non-array-like ES3 and non-enumerable old V8 strings\nvar cof = require('./_cof');\nmodule.exports = Object('z').propertyIsEnumerable(0) ? Object : function(it){\n  return cof(it) == 'String' ? it.split('') : Object(it);\n};","// 7.2.1 RequireObjectCoercible(argument)\nmodule.exports = function(it){\n  if(it == undefined)throw TypeError(\"Can't call method on  \" + it);\n  return it;\n};","// 7.1.13 ToObject(argument)\nvar defined = require('./_defined');\nmodule.exports = function(it){\n  return Object(defined(it));\n};","// 7.1.4 ToInteger\nvar ceil  = Math.ceil\n  , floor = Math.floor;\nmodule.exports = function(it){\n  return isNaN(it = +it) ? 0 : (it > 0 ? floor : ceil)(it);\n};","// 7.1.15 ToLength\nvar toInteger = require('./_to-integer')\n  , min       = Math.min;\nmodule.exports = function(it){\n  return it > 0 ? min(toInteger(it), 0x1fffffffffffff) : 0; // pow(2, 53) - 1 == 9007199254740991\n};","// 7.2.2 IsArray(argument)\nvar cof = require('./_cof');\nmodule.exports = Array.isArray || function isArray(arg){\n  return cof(arg) == 'Array';\n};","var global = require('./_global')\n  , SHARED = '__core-js_shared__'\n  , store  = global[SHARED] || (global[SHARED] = {});\nmodule.exports = function(key){\n  return store[key] || (store[key] = {});\n};","var store      = require('./_shared')('wks')\n  , uid        = require('./_uid')\n  , Symbol     = require('./_global').Symbol\n  , USE_SYMBOL = typeof Symbol == 'function';\n\nvar $exports = module.exports = function(name){\n  return store[name] || (store[name] =\n    USE_SYMBOL && Symbol[name] || (USE_SYMBOL ? Symbol : uid)('Symbol.' + name));\n};\n\n$exports.store = store;","var isObject = require('./_is-object')\n  , isArray  = require('./_is-array')\n  , SPECIES  = require('./_wks')('species');\n\nmodule.exports = function(original){\n  var C;\n  if(isArray(original)){\n    C = original.constructor;\n    // cross-realm fallback\n    if(typeof C == 'function' && (C === Array || isArray(C.prototype)))C = undefined;\n    if(isObject(C)){\n      C = C[SPECIES];\n      if(C === null)C = undefined;\n    }\n  } return C === undefined ? Array : C;\n};","// 9.4.2.3 ArraySpeciesCreate(originalArray, length)\nvar speciesConstructor = require('./_array-species-constructor');\n\nmodule.exports = function(original, length){\n  return new (speciesConstructor(original))(length);\n};","// 0 -> Array#forEach\n// 1 -> Array#map\n// 2 -> Array#filter\n// 3 -> Array#some\n// 4 -> Array#every\n// 5 -> Array#find\n// 6 -> Array#findIndex\nvar ctx      = require('./_ctx')\n  , IObject  = require('./_iobject')\n  , toObject = require('./_to-object')\n  , toLength = require('./_to-length')\n  , asc      = require('./_array-species-create');\nmodule.exports = function(TYPE, $create){\n  var IS_MAP        = TYPE == 1\n    , IS_FILTER     = TYPE == 2\n    , IS_SOME       = TYPE == 3\n    , IS_EVERY      = TYPE == 4\n    , IS_FIND_INDEX = TYPE == 6\n    , NO_HOLES      = TYPE == 5 || IS_FIND_INDEX\n    , create        = $create || asc;\n  return function($this, callbackfn, that){\n    var O      = toObject($this)\n      , self   = IObject(O)\n      , f      = ctx(callbackfn, that, 3)\n      , length = toLength(self.length)\n      , index  = 0\n      , result = IS_MAP ? create($this, length) : IS_FILTER ? create($this, 0) : undefined\n      , val, res;\n    for(;length > index; index++)if(NO_HOLES || index in self){\n      val = self[index];\n      res = f(val, index, O);\n      if(TYPE){\n        if(IS_MAP)result[index] = res;            // map\n        else if(res)switch(TYPE){\n          case 3: return true;                    // some\n          case 5: return val;                     // find\n          case 6: return index;                   // findIndex\n          case 2: result.push(val);               // filter\n        } else if(IS_EVERY)return false;          // every\n      }\n    }\n    return IS_FIND_INDEX ? -1 : IS_SOME || IS_EVERY ? IS_EVERY : result;\n  };\n};","// 22.1.3.31 Array.prototype[@@unscopables]\nvar UNSCOPABLES = require('./_wks')('unscopables')\n  , ArrayProto  = Array.prototype;\nif(ArrayProto[UNSCOPABLES] == undefined)require('./_hide')(ArrayProto, UNSCOPABLES, {});\nmodule.exports = function(key){\n  ArrayProto[UNSCOPABLES][key] = true;\n};","'use strict';\n// 22.1.3.8 Array.prototype.find(predicate, thisArg = undefined)\nvar $export = require('./_export')\n  , $find   = require('./_array-methods')(5)\n  , KEY     = 'find'\n  , forced  = true;\n// Shouldn't skip holes\nif(KEY in [])Array(1)[KEY](function(){ forced = false; });\n$export($export.P + $export.F * forced, 'Array', {\n  find: function find(callbackfn/*, that = undefined */){\n    return $find(this, callbackfn, arguments.length > 1 ? arguments[1] : undefined);\n  }\n});\nrequire('./_add-to-unscopables')(KEY);","// to indexed object, toObject with fallback for non-array-like ES3 strings\nvar IObject = require('./_iobject')\n  , defined = require('./_defined');\nmodule.exports = function(it){\n  return IObject(defined(it));\n};","var toInteger = require('./_to-integer')\n  , max       = Math.max\n  , min       = Math.min;\nmodule.exports = function(index, length){\n  index = toInteger(index);\n  return index < 0 ? max(index + length, 0) : min(index, length);\n};","// false -> Array#indexOf\n// true  -> Array#includes\nvar toIObject = require('./_to-iobject')\n  , toLength  = require('./_to-length')\n  , toIndex   = require('./_to-index');\nmodule.exports = function(IS_INCLUDES){\n  return function($this, el, fromIndex){\n    var O      = toIObject($this)\n      , length = toLength(O.length)\n      , index  = toIndex(fromIndex, length)\n      , value;\n    // Array#includes uses SameValueZero equality algorithm\n    if(IS_INCLUDES && el != el)while(length > index){\n      value = O[index++];\n      if(value != value)return true;\n    // Array#toIndex ignores holes, Array#includes - not\n    } else for(;length > index; index++)if(IS_INCLUDES || index in O){\n      if(O[index] === el)return IS_INCLUDES || index || 0;\n    } return !IS_INCLUDES && -1;\n  };\n};","var shared = require('./_shared')('keys')\n  , uid    = require('./_uid');\nmodule.exports = function(key){\n  return shared[key] || (shared[key] = uid(key));\n};","var has          = require('./_has')\n  , toIObject    = require('./_to-iobject')\n  , arrayIndexOf = require('./_array-includes')(false)\n  , IE_PROTO     = require('./_shared-key')('IE_PROTO');\n\nmodule.exports = function(object, names){\n  var O      = toIObject(object)\n    , i      = 0\n    , result = []\n    , key;\n  for(key in O)if(key != IE_PROTO)has(O, key) && result.push(key);\n  // Don't enum bug & hidden keys\n  while(names.length > i)if(has(O, key = names[i++])){\n    ~arrayIndexOf(result, key) || result.push(key);\n  }\n  return result;\n};","// IE 8- don't enum bug keys\nmodule.exports = (\n  'constructor,hasOwnProperty,isPrototypeOf,propertyIsEnumerable,toLocaleString,toString,valueOf'\n).split(',');","// 19.1.2.14 / 15.2.3.14 Object.keys(O)\nvar $keys       = require('./_object-keys-internal')\n  , enumBugKeys = require('./_enum-bug-keys');\n\nmodule.exports = Object.keys || function keys(O){\n  return $keys(O, enumBugKeys);\n};","// most Object methods by ES6 should accept primitives\nvar $export = require('./_export')\n  , core    = require('./_core')\n  , fails   = require('./_fails');\nmodule.exports = function(KEY, exec){\n  var fn  = (core.Object || {})[KEY] || Object[KEY]\n    , exp = {};\n  exp[KEY] = exec(fn);\n  $export($export.S + $export.F * fails(function(){ fn(1); }), 'Object', exp);\n};","// 19.1.2.14 Object.keys(O)\nvar toObject = require('./_to-object')\n  , $keys    = require('./_object-keys');\n\nrequire('./_object-sap')('keys', function(){\n  return function keys(it){\n    return $keys(toObject(it));\n  };\n});","'use strict';\nvar toInteger = require('./_to-integer')\n  , defined   = require('./_defined');\n\nmodule.exports = function repeat(count){\n  var str = String(defined(this))\n    , res = ''\n    , n   = toInteger(count);\n  if(n < 0 || n == Infinity)throw RangeError(\"Count can't be negative\");\n  for(;n > 0; (n >>>= 1) && (str += str))if(n & 1)res += str;\n  return res;\n};","var $export = require('./_export');\n\n$export($export.P, 'String', {\n  // 21.1.3.13 String.prototype.repeat(count)\n  repeat: require('./_string-repeat')\n});","// https://github.com/tc39/proposal-string-pad-start-end\nvar toLength = require('./_to-length')\n  , repeat   = require('./_string-repeat')\n  , defined  = require('./_defined');\n\nmodule.exports = function(that, maxLength, fillString, left){\n  var S            = String(defined(that))\n    , stringLength = S.length\n    , fillStr      = fillString === undefined ? ' ' : String(fillString)\n    , intMaxLength = toLength(maxLength);\n  if(intMaxLength <= stringLength || fillStr == '')return S;\n  var fillLen = intMaxLength - stringLength\n    , stringFiller = repeat.call(fillStr, Math.ceil(fillLen / fillStr.length));\n  if(stringFiller.length > fillLen)stringFiller = stringFiller.slice(0, fillLen);\n  return left ? stringFiller + S : S + stringFiller;\n};\n","'use strict';\n// https://github.com/tc39/proposal-string-pad-start-end\nvar $export = require('./_export')\n  , $pad    = require('./_string-pad');\n\n$export($export.P, 'String', {\n  padStart: function padStart(maxLength /*, fillString = ' ' */){\n    return $pad(this, maxLength, arguments.length > 1 ? arguments[1] : undefined, true);\n  }\n});","'use strict';\n// https://github.com/tc39/proposal-string-pad-start-end\nvar $export = require('./_export')\n  , $pad    = require('./_string-pad');\n\n$export($export.P, 'String', {\n  padEnd: function padEnd(maxLength /*, fillString = ' ' */){\n    return $pad(this, maxLength, arguments.length > 1 ? arguments[1] : undefined, false);\n  }\n});","import {refreshValueOnSet} from '../core/utils';\r\n\r\n\r\nexport default\r\nclass Masked {\r\n  constructor ({mask, validate}) {\r\n    this._value = '';\r\n    this.mask = mask;\r\n    this.validate = validate || (() => true);\r\n    this.isInitialized = true;\r\n  }\r\n\r\n  get mask () {\r\n    return this._mask;\r\n  }\r\n\r\n  @refreshValueOnSet\r\n  set mask (mask) {\r\n    this._mask = mask;\r\n  }\r\n\r\n  _validate (soft) {\r\n    return this.validate(this.value, this, soft);\r\n  }\r\n\r\n  clone () {\r\n    const m = new Masked(this);\r\n    m._value = this.value.slice();\r\n    return m;\r\n  }\r\n\r\n  reset () {\r\n    this._value = '';\r\n  }\r\n\r\n  get value () {\r\n    return this._value;\r\n  }\r\n\r\n  set value (value) {\r\n    this.reset();\r\n    this.append(value, true);\r\n    this._appendTail();\r\n  }\r\n\r\n  get unmaskedValue () {\r\n    return this._unmask();\r\n  }\r\n\r\n  set unmaskedValue (value) {\r\n    this.reset();\r\n    this.append(value);\r\n    this._appendTail();\r\n  }\r\n\r\n  get isComplete () {\r\n    return true;\r\n  }\r\n\r\n  nearestInputPos (cursorPos, /* direction */) {\r\n    return cursorPos;\r\n  }\r\n\r\n  extractInput (fromPos=0, toPos=this.value.length) {\r\n    return this.value.slice(fromPos, toPos);\r\n  }\r\n\r\n  _extractTail (fromPos=0, toPos=this.value.length) {\r\n    return this.extractInput(fromPos, toPos);\r\n  }\r\n\r\n  _appendTail (tail) {\r\n    return !tail || this.append(tail);\r\n  }\r\n\r\n  append (str, soft) {\r\n    const oldValueLength = this.value.length;\r\n    let consistentValue = this.clone();\r\n\r\n    for (let ci=0; ci<str.length; ++ci) {\r\n      this._value += str[ci];\r\n      if (this._validate(soft) === false) {\r\n        Object.assign(this, consistentValue);\r\n        if (!soft) return false;\r\n      }\r\n\r\n      consistentValue = this.clone();\r\n    }\r\n\r\n    return this.value.length - oldValueLength;\r\n\r\n  }\r\n\r\n  appendWithTail (str, tail) {\r\n    // TODO refactor\r\n    let appendCount = 0;\r\n    let consistentValue = this.clone();\r\n    let consistentAppended;\r\n\r\n    for (let ci=0; ci<str.length; ++ci) {\r\n      const ch = str[ci];\r\n\r\n      const appended = this.append(ch, true);\r\n      consistentAppended = this.clone();\r\n      const tailAppended = appended !== false && this._appendTail(tail) !== false;\r\n      if (tailAppended === false || this._validate(true) === false) {\r\n        Object.assign(this, consistentValue);\r\n        break;\r\n      }\r\n\r\n      consistentValue = this.clone();\r\n      Object.assign(this, consistentAppended);\r\n      appendCount += appended;\r\n    }\r\n\r\n    // TODO needed for cases when\r\n    // 1) REMOVE ONLY AND NO LOOP AT ALL\r\n    // 2) last loop iteration removes tail\r\n    // 3) when breaks on tail insert\r\n    this._appendTail(tail);\r\n\r\n    return appendCount;\r\n  }\r\n\r\n  _unmask () {\r\n    return this.value;\r\n  }\r\n\r\n  // TODO rename - refactor\r\n  clear (from=0, to=this.value.length) {\r\n    this._value = this.value.slice(0, from) + this.value.slice(to);\r\n  }\r\n\r\n  withValueRefresh (fn) {\r\n    if (this._refreshing) return fn();\r\n    this._refreshing = true;\r\n\r\n    const unmasked = this.isInitialized ? this.unmaskedValue : null;\r\n\r\n    const ret = fn();\r\n\r\n    if (unmasked != null) this.unmaskedValue = unmasked;\r\n    delete this._refreshing;\r\n    return ret;\r\n  }\r\n\r\n  commit () {}\r\n\r\n  // TODO\r\n  // resolve (inputRaw) -> outputRaw\r\n\r\n  // TODO\r\n  // insert (str, fromPos, soft)\r\n\r\n  // splice (start, deleteCount, inserted, removeDirection) {\r\n  //   const tailPos = start + deleteCount;\r\n  //   const tail = this._extractTail(tailPos);\r\n\r\n  //   start = this.nearestInputPos(start, removeDirection);\r\n  //   this.clear(start);\r\n  //   return this.appendWithTail(inserted, tail);\r\n  // }\r\n}\r\n","import createMask from '../factory';\r\n\r\n\r\nexport default\r\nclass PatternDefinition {\r\n  constructor(opts) {\r\n    Object.assign(this, opts);\r\n\r\n    if (this.mask) {\r\n      this._masked = createMask(opts);\r\n    }\r\n  }\r\n\r\n  reset () {\r\n    this.isHollow = false;\r\n    if (this._masked) this._masked.reset();\r\n  }\r\n\r\n  get isInput () {\r\n    return this.type === PatternDefinition.TYPES.INPUT;\r\n  }\r\n\r\n  get isHiddenHollow () {\r\n    return this.isHollow && this.optional;\r\n  }\r\n\r\n  resolve (ch) {\r\n    if (!this._masked) return false;\r\n    // TODO seems strange\r\n    this._masked.value = ch;\r\n    return this._masked.value;\r\n  }\r\n}\r\n\r\nPatternDefinition.DEFAULTS = {\r\n  '0': /\\d/,\r\n  'a': /[\\u0041-\\u005A\\u0061-\\u007A\\u00AA\\u00B5\\u00BA\\u00C0-\\u00D6\\u00D8-\\u00F6\\u00F8-\\u02C1\\u02C6-\\u02D1\\u02E0-\\u02E4\\u02EC\\u02EE\\u0370-\\u0374\\u0376\\u0377\\u037A-\\u037D\\u0386\\u0388-\\u038A\\u038C\\u038E-\\u03A1\\u03A3-\\u03F5\\u03F7-\\u0481\\u048A-\\u0527\\u0531-\\u0556\\u0559\\u0561-\\u0587\\u05D0-\\u05EA\\u05F0-\\u05F2\\u0620-\\u064A\\u066E\\u066F\\u0671-\\u06D3\\u06D5\\u06E5\\u06E6\\u06EE\\u06EF\\u06FA-\\u06FC\\u06FF\\u0710\\u0712-\\u072F\\u074D-\\u07A5\\u07B1\\u07CA-\\u07EA\\u07F4\\u07F5\\u07FA\\u0800-\\u0815\\u081A\\u0824\\u0828\\u0840-\\u0858\\u08A0\\u08A2-\\u08AC\\u0904-\\u0939\\u093D\\u0950\\u0958-\\u0961\\u0971-\\u0977\\u0979-\\u097F\\u0985-\\u098C\\u098F\\u0990\\u0993-\\u09A8\\u09AA-\\u09B0\\u09B2\\u09B6-\\u09B9\\u09BD\\u09CE\\u09DC\\u09DD\\u09DF-\\u09E1\\u09F0\\u09F1\\u0A05-\\u0A0A\\u0A0F\\u0A10\\u0A13-\\u0A28\\u0A2A-\\u0A30\\u0A32\\u0A33\\u0A35\\u0A36\\u0A38\\u0A39\\u0A59-\\u0A5C\\u0A5E\\u0A72-\\u0A74\\u0A85-\\u0A8D\\u0A8F-\\u0A91\\u0A93-\\u0AA8\\u0AAA-\\u0AB0\\u0AB2\\u0AB3\\u0AB5-\\u0AB9\\u0ABD\\u0AD0\\u0AE0\\u0AE1\\u0B05-\\u0B0C\\u0B0F\\u0B10\\u0B13-\\u0B28\\u0B2A-\\u0B30\\u0B32\\u0B33\\u0B35-\\u0B39\\u0B3D\\u0B5C\\u0B5D\\u0B5F-\\u0B61\\u0B71\\u0B83\\u0B85-\\u0B8A\\u0B8E-\\u0B90\\u0B92-\\u0B95\\u0B99\\u0B9A\\u0B9C\\u0B9E\\u0B9F\\u0BA3\\u0BA4\\u0BA8-\\u0BAA\\u0BAE-\\u0BB9\\u0BD0\\u0C05-\\u0C0C\\u0C0E-\\u0C10\\u0C12-\\u0C28\\u0C2A-\\u0C33\\u0C35-\\u0C39\\u0C3D\\u0C58\\u0C59\\u0C60\\u0C61\\u0C85-\\u0C8C\\u0C8E-\\u0C90\\u0C92-\\u0CA8\\u0CAA-\\u0CB3\\u0CB5-\\u0CB9\\u0CBD\\u0CDE\\u0CE0\\u0CE1\\u0CF1\\u0CF2\\u0D05-\\u0D0C\\u0D0E-\\u0D10\\u0D12-\\u0D3A\\u0D3D\\u0D4E\\u0D60\\u0D61\\u0D7A-\\u0D7F\\u0D85-\\u0D96\\u0D9A-\\u0DB1\\u0DB3-\\u0DBB\\u0DBD\\u0DC0-\\u0DC6\\u0E01-\\u0E30\\u0E32\\u0E33\\u0E40-\\u0E46\\u0E81\\u0E82\\u0E84\\u0E87\\u0E88\\u0E8A\\u0E8D\\u0E94-\\u0E97\\u0E99-\\u0E9F\\u0EA1-\\u0EA3\\u0EA5\\u0EA7\\u0EAA\\u0EAB\\u0EAD-\\u0EB0\\u0EB2\\u0EB3\\u0EBD\\u0EC0-\\u0EC4\\u0EC6\\u0EDC-\\u0EDF\\u0F00\\u0F40-\\u0F47\\u0F49-\\u0F6C\\u0F88-\\u0F8C\\u1000-\\u102A\\u103F\\u1050-\\u1055\\u105A-\\u105D\\u1061\\u1065\\u1066\\u106E-\\u1070\\u1075-\\u1081\\u108E\\u10A0-\\u10C5\\u10C7\\u10CD\\u10D0-\\u10FA\\u10FC-\\u1248\\u124A-\\u124D\\u1250-\\u1256\\u1258\\u125A-\\u125D\\u1260-\\u1288\\u128A-\\u128D\\u1290-\\u12B0\\u12B2-\\u12B5\\u12B8-\\u12BE\\u12C0\\u12C2-\\u12C5\\u12C8-\\u12D6\\u12D8-\\u1310\\u1312-\\u1315\\u1318-\\u135A\\u1380-\\u138F\\u13A0-\\u13F4\\u1401-\\u166C\\u166F-\\u167F\\u1681-\\u169A\\u16A0-\\u16EA\\u1700-\\u170C\\u170E-\\u1711\\u1720-\\u1731\\u1740-\\u1751\\u1760-\\u176C\\u176E-\\u1770\\u1780-\\u17B3\\u17D7\\u17DC\\u1820-\\u1877\\u1880-\\u18A8\\u18AA\\u18B0-\\u18F5\\u1900-\\u191C\\u1950-\\u196D\\u1970-\\u1974\\u1980-\\u19AB\\u19C1-\\u19C7\\u1A00-\\u1A16\\u1A20-\\u1A54\\u1AA7\\u1B05-\\u1B33\\u1B45-\\u1B4B\\u1B83-\\u1BA0\\u1BAE\\u1BAF\\u1BBA-\\u1BE5\\u1C00-\\u1C23\\u1C4D-\\u1C4F\\u1C5A-\\u1C7D\\u1CE9-\\u1CEC\\u1CEE-\\u1CF1\\u1CF5\\u1CF6\\u1D00-\\u1DBF\\u1E00-\\u1F15\\u1F18-\\u1F1D\\u1F20-\\u1F45\\u1F48-\\u1F4D\\u1F50-\\u1F57\\u1F59\\u1F5B\\u1F5D\\u1F5F-\\u1F7D\\u1F80-\\u1FB4\\u1FB6-\\u1FBC\\u1FBE\\u1FC2-\\u1FC4\\u1FC6-\\u1FCC\\u1FD0-\\u1FD3\\u1FD6-\\u1FDB\\u1FE0-\\u1FEC\\u1FF2-\\u1FF4\\u1FF6-\\u1FFC\\u2071\\u207F\\u2090-\\u209C\\u2102\\u2107\\u210A-\\u2113\\u2115\\u2119-\\u211D\\u2124\\u2126\\u2128\\u212A-\\u212D\\u212F-\\u2139\\u213C-\\u213F\\u2145-\\u2149\\u214E\\u2183\\u2184\\u2C00-\\u2C2E\\u2C30-\\u2C5E\\u2C60-\\u2CE4\\u2CEB-\\u2CEE\\u2CF2\\u2CF3\\u2D00-\\u2D25\\u2D27\\u2D2D\\u2D30-\\u2D67\\u2D6F\\u2D80-\\u2D96\\u2DA0-\\u2DA6\\u2DA8-\\u2DAE\\u2DB0-\\u2DB6\\u2DB8-\\u2DBE\\u2DC0-\\u2DC6\\u2DC8-\\u2DCE\\u2DD0-\\u2DD6\\u2DD8-\\u2DDE\\u2E2F\\u3005\\u3006\\u3031-\\u3035\\u303B\\u303C\\u3041-\\u3096\\u309D-\\u309F\\u30A1-\\u30FA\\u30FC-\\u30FF\\u3105-\\u312D\\u3131-\\u318E\\u31A0-\\u31BA\\u31F0-\\u31FF\\u3400-\\u4DB5\\u4E00-\\u9FCC\\uA000-\\uA48C\\uA4D0-\\uA4FD\\uA500-\\uA60C\\uA610-\\uA61F\\uA62A\\uA62B\\uA640-\\uA66E\\uA67F-\\uA697\\uA6A0-\\uA6E5\\uA717-\\uA71F\\uA722-\\uA788\\uA78B-\\uA78E\\uA790-\\uA793\\uA7A0-\\uA7AA\\uA7F8-\\uA801\\uA803-\\uA805\\uA807-\\uA80A\\uA80C-\\uA822\\uA840-\\uA873\\uA882-\\uA8B3\\uA8F2-\\uA8F7\\uA8FB\\uA90A-\\uA925\\uA930-\\uA946\\uA960-\\uA97C\\uA984-\\uA9B2\\uA9CF\\uAA00-\\uAA28\\uAA40-\\uAA42\\uAA44-\\uAA4B\\uAA60-\\uAA76\\uAA7A\\uAA80-\\uAAAF\\uAAB1\\uAAB5\\uAAB6\\uAAB9-\\uAABD\\uAAC0\\uAAC2\\uAADB-\\uAADD\\uAAE0-\\uAAEA\\uAAF2-\\uAAF4\\uAB01-\\uAB06\\uAB09-\\uAB0E\\uAB11-\\uAB16\\uAB20-\\uAB26\\uAB28-\\uAB2E\\uABC0-\\uABE2\\uAC00-\\uD7A3\\uD7B0-\\uD7C6\\uD7CB-\\uD7FB\\uF900-\\uFA6D\\uFA70-\\uFAD9\\uFB00-\\uFB06\\uFB13-\\uFB17\\uFB1D\\uFB1F-\\uFB28\\uFB2A-\\uFB36\\uFB38-\\uFB3C\\uFB3E\\uFB40\\uFB41\\uFB43\\uFB44\\uFB46-\\uFBB1\\uFBD3-\\uFD3D\\uFD50-\\uFD8F\\uFD92-\\uFDC7\\uFDF0-\\uFDFB\\uFE70-\\uFE74\\uFE76-\\uFEFC\\uFF21-\\uFF3A\\uFF41-\\uFF5A\\uFF66-\\uFFBE\\uFFC2-\\uFFC7\\uFFCA-\\uFFCF\\uFFD2-\\uFFD7\\uFFDA-\\uFFDC]/,  // http://stackoverflow.com/a/22075070\r\n  '*': /./\r\n};\r\nPatternDefinition.TYPES = {\r\n  INPUT: 'input',\r\n  FIXED: 'fixed'\r\n};\r\n","export default\r\nclass PatternGroup {\r\n  constructor(masked, {name, offset, mask, validate}) {\r\n    this.masked = masked;\r\n    this.name = name;\r\n    this.offset = offset;\r\n    this.mask = mask;\r\n    this.validate = validate || (() => true);\r\n  }\r\n\r\n  get value () {\r\n    return this.masked.value.slice(\r\n      this.masked.mapDefIndexToPos(this.offset),\r\n      this.masked.mapDefIndexToPos(this.offset + this.mask.length));\r\n  }\r\n\r\n  get unmaskedValue () {\r\n    return this.masked.extractInput(\r\n      this.masked.mapDefIndexToPos(this.offset),\r\n      this.masked.mapDefIndexToPos(this.offset + this.mask.length));\r\n  }\r\n\r\n  _validate (soft) {\r\n    return this.validate(this.value, this, soft);\r\n  }\r\n}\r\n\r\nexport class Range {\r\n  constructor ([from, to], maxlen=(to+\"\").length) {\r\n    this._from = from;\r\n    this._to = to;\r\n    this._maxLength = maxlen;\r\n    this.validate = this.validate.bind(this);\r\n\r\n    this._update();\r\n  }\r\n\r\n  get to () {\r\n    return this._to;\r\n  }\r\n\r\n  set to (to) {\r\n    this._to = to;\r\n    this._update();\r\n  }\r\n\r\n  get from () {\r\n    return this._from;\r\n  }\r\n\r\n  set from (from) {\r\n    this._from = from;\r\n    this._update();\r\n  }\r\n\r\n  get maxLength () {\r\n    return this._maxLength;\r\n  }\r\n\r\n  set maxLength (maxLength) {\r\n    this._maxLength = maxLength;\r\n    this._update();\r\n  }\r\n\r\n  get _matchFrom () {\r\n    return this.maxLength - (this.from + '').length;\r\n  }\r\n\r\n  _update() {\r\n    this._maxLength = Math.max(this._maxLength, (this.from + '').length);\r\n    this.mask = '0'.repeat(this._maxLength);\r\n\r\n  }\r\n\r\n  validate (str) {\r\n    let minstr = '';\r\n    let maxstr = '';\r\n\r\n    const [, placeholder, num] = str.match(/^(\\D*)(\\d*)(\\D*)/);\r\n    if (num) {\r\n      minstr = ('0'.repeat(placeholder.length) + num);\r\n      maxstr = ('9'.repeat(placeholder.length) + num);\r\n    }\r\n\r\n    const firstNonZero = str.search(/[^0]/);\r\n    if (firstNonZero === -1 && str.length <= this._matchFrom) return true;\r\n\r\n    minstr = minstr.padEnd(this._maxLength, '0');\r\n    maxstr = maxstr.padEnd(this._maxLength, '9');\r\n\r\n    return this.from <= Number(maxstr) && Number(minstr) <= this.to;\r\n  }\r\n}\r\n\r\nPatternGroup.Range = Range;\r\n","import {conform, DIRECTION, indexInDirection, refreshValueOnSet} from '../core/utils';\r\nimport Masked from './base';\r\nimport PatternDefinition from './pattern/definition';\r\nimport PatternGroup from './pattern/group';\r\n\r\n\r\nexport default\r\nclass MaskedPattern extends Masked {\r\n  constructor (opts) {\r\n    const {definitions, placeholder, groups} = opts;\r\n    super(opts);\r\n    delete this.isInitialized;\r\n\r\n    this.placeholder = placeholder;\r\n    this.definitions = definitions;\r\n    this.groups = groups;\r\n\r\n    this.isInitialized = true;\r\n  }\r\n\r\n  get placeholder () {\r\n    return this._placeholder;\r\n  }\r\n\r\n  @refreshValueOnSet\r\n  set placeholder (ph) {\r\n    this._placeholder = {\r\n      ...MaskedPattern.DEFAULT_PLACEHOLDER,\r\n      ...ph\r\n    };\r\n  }\r\n\r\n  get definitions () {\r\n    return this._definitions;\r\n  }\r\n\r\n  @refreshValueOnSet\r\n  set definitions (defs) {\r\n    defs = {\r\n      ...PatternDefinition.DEFAULTS,\r\n      ...defs\r\n    };\r\n\r\n    this._definitions = defs;\r\n    this._updateMask();\r\n  }\r\n\r\n  get mask () {\r\n    return this._mask;\r\n  }\r\n\r\n  @refreshValueOnSet\r\n  set mask (mask) {\r\n    this._mask = mask;\r\n    this._updateMask();\r\n  }\r\n\r\n  _updateMask () {\r\n    const defs = this._definitions;\r\n    this._charDefs = [];\r\n    this._groupDefs = [];\r\n\r\n    let pattern = this.mask;\r\n    if (!pattern || !defs) return;\r\n\r\n    let unmaskingBlock = false;\r\n    let optionalBlock = false;\r\n    let stopAlign = false;\r\n\r\n\r\n    for (let i=0; i<pattern.length; ++i) {\r\n      if (this._groups) {\r\n        const p = pattern.slice(i);\r\n        const gName = Object.keys(this._groups).find(gName => p.indexOf(gName) === 0);\r\n        if (gName) {\r\n          const group = this._groups[gName];\r\n          this._groupDefs.push(new PatternGroup(this, {\r\n            name: gName,\r\n            offset: this._charDefs.length,\r\n            mask: group.mask,\r\n            validate: group.validate\r\n          }));\r\n          pattern = pattern.replace(gName, group.mask);\r\n        }\r\n      }\r\n\r\n      let char = pattern[i];\r\n      let type = !unmaskingBlock && char in defs ?\r\n        PatternDefinition.TYPES.INPUT :\r\n        PatternDefinition.TYPES.FIXED;\r\n      const unmasking = type === PatternDefinition.TYPES.INPUT || unmaskingBlock;\r\n      const optional = type === PatternDefinition.TYPES.INPUT && optionalBlock;\r\n\r\n      if (char === MaskedPattern.STOP_CHAR) {\r\n        stopAlign = true;\r\n        continue;\r\n      }\r\n\r\n      if (char === '{' || char === '}') {\r\n        unmaskingBlock = !unmaskingBlock;\r\n        continue;\r\n      }\r\n\r\n      if (char === '[' || char === ']') {\r\n        optionalBlock = !optionalBlock;\r\n        continue;\r\n      }\r\n\r\n      if (char === MaskedPattern.ESCAPE_CHAR) {\r\n        ++i;\r\n        char = pattern[i];\r\n        // TODO validation\r\n        if (!char) break;\r\n        type = PatternDefinition.TYPES.FIXED;\r\n      }\r\n\r\n      this._charDefs.push(new PatternDefinition({\r\n        char,\r\n        type,\r\n        optional,\r\n        stopAlign,\r\n        mask: unmasking &&\r\n          (type === PatternDefinition.TYPES.INPUT ?\r\n            defs[char] :\r\n            (m => m.value === char))\r\n      }));\r\n\r\n      stopAlign = false;\r\n    }\r\n  }\r\n\r\n  _validate (soft) {\r\n    return this._groupDefs.every(g => g._validate(soft)) && super._validate(soft);\r\n  }\r\n\r\n  clone () {\r\n    const m = new MaskedPattern(this);\r\n    m._value = this.value;\r\n    m._charDefs.forEach((d, i) => Object.assign(d, this._charDefs[i]));\r\n    m._groupDefs.forEach((d, i) => Object.assign(d, this._groupDefs[i]));\r\n    return m;\r\n  }\r\n\r\n  reset () {\r\n    super.reset();\r\n    this._charDefs.forEach(d => {delete d.isHollow;});\r\n  }\r\n\r\n  get isComplete () {\r\n    return !this._charDefs.some((d, i) =>\r\n      d.isInput && !d.optional && (d.isHollow || !this.extractInput(i, i+1)));\r\n  }\r\n\r\n  hiddenHollowsBefore (defIndex) {\r\n    return this._charDefs\r\n      .slice(0, defIndex)\r\n      .filter(d => d.isHiddenHollow)\r\n      .length;\r\n  }\r\n\r\n  mapDefIndexToPos (defIndex) {\r\n    if (defIndex == null) return;\r\n    return defIndex - this.hiddenHollowsBefore(defIndex);\r\n  }\r\n\r\n  mapPosToDefIndex (pos) {\r\n    if (pos == null) return;\r\n    let defIndex = pos;\r\n    for (let di=0; di<this._charDefs.length; ++di) {\r\n      const def = this._charDefs[di];\r\n      if (di >= defIndex) break;\r\n      if (def.isHiddenHollow) ++defIndex;\r\n    }\r\n    return defIndex;\r\n  }\r\n\r\n  _unmask () {\r\n    const str = this.value;\r\n    let unmasked = '';\r\n\r\n    for (let ci=0, di=0; ci<str.length && di<this._charDefs.length; ++di) {\r\n      const ch = str[ci];\r\n      const def = this._charDefs[di];\r\n\r\n      if (def.isHiddenHollow) continue;\r\n      if (def.mask && !def.isHollow) unmasked += ch;\r\n      ++ci;\r\n    }\r\n\r\n    return unmasked;\r\n  }\r\n\r\n  _appendTail (tail) {\r\n    return (!tail || this.appendChunks(tail)) && this._appendPlaceholder();\r\n  }\r\n\r\n  append (str, soft) {\r\n    const oldValueLength = this.value.length;\r\n\r\n    for (let ci=0, di=this.mapPosToDefIndex(this.value.length); ci < str.length;) {\r\n      const ch = str[ci];\r\n      const def = this._charDefs[di];\r\n\r\n      // check overflow\r\n      if (!def) return false;\r\n\r\n      // reset\r\n      def.isHollow = false;\r\n\r\n      let resolved, skipped;\r\n      let chres = conform(def.resolve(ch), ch);\r\n\r\n      if (def.type === PatternDefinition.TYPES.INPUT) {\r\n        if (chres) {\r\n          this._value += chres;\r\n          if (!this._validate()) {\r\n            chres = '';\r\n            this._value = this.value.slice(0, -1);\r\n          }\r\n        }\r\n\r\n        resolved = !!chres;\r\n        skipped = !chres && !def.optional;\r\n\r\n        // if ok - next di\r\n        if (!chres) {\r\n          if (!def.optional && !soft) {\r\n            this._value += this.placeholder.char;\r\n            skipped = false;\r\n          }\r\n          if (!skipped) def.isHollow = true;\r\n        }\r\n      } else {\r\n        this._value += def.char;\r\n        resolved = chres && (def.mask || soft);\r\n      }\r\n\r\n      if (!skipped) ++di;\r\n      if (resolved || skipped) ++ci;\r\n    }\r\n\r\n    return this.value.length - oldValueLength;\r\n  }\r\n\r\n  appendChunks (chunks, soft) {\r\n    for (let ci=0; ci < chunks.length; ++ci) {\r\n      const [fromDefIndex, input] = chunks[ci];\r\n      if (fromDefIndex != null) this._appendPlaceholder(fromDefIndex);\r\n      if (this.append(input, soft) === false) return false;\r\n    }\r\n    return true;\r\n  }\r\n\r\n  _extractTail (fromPos, toPos) {\r\n    return this.extractInputChunks(fromPos, toPos);\r\n  }\r\n\r\n  extractInput (fromPos=0, toPos=this.value.length) {\r\n    // TODO fromPos === toPos\r\n    const str = this.value;\r\n    let input = '';\r\n\r\n    const toDefIndex = this.mapPosToDefIndex(toPos);\r\n    for (\r\n      let ci=fromPos, di=this.mapPosToDefIndex(fromPos);\r\n      ci<toPos && ci<str.length && di < toDefIndex;\r\n      ++di)\r\n    {\r\n      const ch = str[ci];\r\n      const def = this._charDefs[di];\r\n\r\n      if (!def) break;\r\n      if (def.isHiddenHollow) continue;\r\n\r\n      if (def.isInput && !def.isHollow) input += ch;\r\n      ++ci;\r\n    }\r\n    return input;\r\n  }\r\n\r\n  extractInputChunks (fromPos=0, toPos=this.value.length) {\r\n    // TODO fromPos === toPos\r\n    const fromDefIndex = this.mapPosToDefIndex(fromPos);\r\n    const toDefIndex = this.mapPosToDefIndex(toPos);\r\n    const stopDefIndices = this._charDefs\r\n      .map((d, i) => [d, i])\r\n      .slice(fromDefIndex, toDefIndex)\r\n      .filter(([d]) => d.stopAlign)\r\n      .map(([, i]) => i);\r\n\r\n    const stops = [\r\n      fromDefIndex,\r\n      ...stopDefIndices,\r\n      toDefIndex\r\n    ];\r\n\r\n    return stops.map((s, i) => [\r\n      stopDefIndices.indexOf(s) >= 0 ?\r\n        s :\r\n        null,\r\n\r\n      this.extractInput(\r\n        this.mapDefIndexToPos(s),\r\n        this.mapDefIndexToPos(stops[++i]))\r\n    ]).filter(([stop, input]) => stop != null || input);\r\n  }\r\n\r\n  _appendPlaceholder (toDefIndex) {\r\n    const maxDefIndex = toDefIndex || this._charDefs.length;\r\n    for (let di=this.mapPosToDefIndex(this.value.length); di < maxDefIndex; ++di) {\r\n      const def = this._charDefs[di];\r\n      if (def.isInput) def.isHollow = true;\r\n\r\n      if (this.placeholder.show === 'always' || toDefIndex) {\r\n        this._value += !def.isInput ?\r\n          def.char :\r\n          !def.optional ?\r\n            this.placeholder.char :\r\n            '';\r\n      }\r\n    }\r\n  }\r\n\r\n  clear (from=0, to=this.value.length) {\r\n    this._value = this.value.slice(0, from) + this.value.slice(to);\r\n    const fromDefIndex = this.mapPosToDefIndex(from);\r\n    const toDefIndex = this.mapPosToDefIndex(to);\r\n    this._charDefs\r\n      .slice(fromDefIndex, toDefIndex)\r\n      .forEach(d => d.reset());\r\n  }\r\n\r\n   nearestInputPos (cursorPos, direction=DIRECTION.LEFT) {\r\n    if (!direction) return cursorPos;\r\n\r\n    const initialDefIndex = this.mapPosToDefIndex(cursorPos);\r\n    let di = initialDefIndex;\r\n\r\n    let firstInputIndex,\r\n        firstFilledInputIndex,\r\n        firstVisibleHollowIndex,\r\n        nextdi;\r\n\r\n    // search forward\r\n    for (nextdi = indexInDirection(di, direction); 0 <= nextdi && nextdi < this._charDefs.length; di += direction, nextdi += direction) {\r\n      const nextDef = this._charDefs[nextdi];\r\n      if (firstInputIndex == null && nextDef.isInput) firstInputIndex = di;\r\n      if (firstVisibleHollowIndex == null && nextDef.isHollow && !nextDef.isHiddenHollow) firstVisibleHollowIndex = di;\r\n      if (nextDef.isInput && !nextDef.isHollow) {\r\n        firstFilledInputIndex = di;\r\n        break;\r\n      }\r\n    }\r\n\r\n    if (direction === DIRECTION.LEFT || firstInputIndex == null) {\r\n      // search backwards\r\n      direction = -direction;\r\n      let overflow = false;\r\n\r\n      // find hollows only before initial pos\r\n      for (nextdi = indexInDirection(di, direction);\r\n        0 <= nextdi && nextdi < this._charDefs.length;\r\n        di += direction, nextdi += direction)\r\n      {\r\n        const nextDef = this._charDefs[nextdi];\r\n        if (nextDef.isInput) {\r\n          firstInputIndex = di;\r\n          if (nextDef.isHollow && !nextDef.isHiddenHollow) break;\r\n        }\r\n\r\n        // if hollow not found before start position - set `overflow`\r\n        // and try to find just any input\r\n        if (di === initialDefIndex) overflow = true;\r\n\r\n        // first input found\r\n        if (overflow && firstInputIndex != null) break;\r\n      }\r\n\r\n      // process overflow\r\n      overflow = overflow || nextdi >= this._charDefs.length;\r\n      if (overflow && firstInputIndex != null) di = firstInputIndex;\r\n    } else if (firstFilledInputIndex == null) {\r\n      // adjust index if delete at right and filled input not found at right\r\n      di = firstVisibleHollowIndex != null ?\r\n        firstVisibleHollowIndex :\r\n        firstInputIndex;\r\n    }\r\n\r\n    return this.mapDefIndexToPos(di);\r\n  }\r\n\r\n  get groups () { return this._groups; }\r\n\r\n  @refreshValueOnSet\r\n  set groups (groups) {\r\n    this._groups = groups;\r\n    this._updateMask();\r\n  }\r\n\r\n  group (name) {\r\n    return this.allGroups(name)[0];\r\n  }\r\n\r\n  groupsByName (name) {\r\n    return this._groupDefs.filter(g => g.name === name);\r\n  }\r\n}\r\n\r\nMaskedPattern.DEFAULT_PLACEHOLDER = {\r\n  show: 'lazy',\r\n  char: '_'\r\n};\r\nMaskedPattern.STOP_CHAR = '`';\r\nMaskedPattern.ESCAPE_CHAR = '\\\\';\r\nMaskedPattern.Definition = PatternDefinition;\r\n","import {escapeRegExp, refreshValueOnSet, DIRECTION, indexInDirection} from '../core/utils';\r\nimport Masked from './base';\r\n\r\n\r\nexport default\r\nclass MaskedNumber extends Masked {\r\n  constructor (opts) {\r\n    opts = Object.assign({}, MaskedNumber.DEFAULTS, opts);\r\n    super(opts);\r\n    delete this.isInitialized;\r\n\r\n    const {scale, radix, mapToRadix, min, max, signed, thousandsSeparator, postFormat} = opts;\r\n\r\n    this.min = min;\r\n    this.max = max;\r\n    this.scale = scale;\r\n    this.radix = radix;\r\n    this.mapToRadix = mapToRadix;\r\n    this.signed = signed;\r\n    this.thousandsSeparator = thousandsSeparator;\r\n    this.postFormat = postFormat;\r\n\r\n    this._updateNumberRegExp();\r\n\r\n    this.isInitialized = true;\r\n  }\r\n\r\n  _updateNumberRegExp () {\r\n    // TODO refactor?\r\n    let regExpStrSoft = \"^\";\r\n    let regExpStr = \"^\";\r\n\r\n    if (this.signed) {\r\n      regExpStrSoft += \"([+|\\\\-]?|([+|\\\\-]?(0|([1-9]+\\\\d*))))\";\r\n      regExpStr += \"[+|\\\\-]?\";\r\n    } else {\r\n      regExpStrSoft += \"(0|([1-9]+\\\\d*))\";\r\n    }\r\n    regExpStr += \"\\\\d*\";\r\n\r\n    if (this.scale) {\r\n      regExpStrSoft += \"(\" + this.radix + \"\\\\d{0,\" + this.scale + \"})?\";\r\n      regExpStr += \"(\" + this.radix + \"\\\\d{0,\" + this.scale + \"})?\";\r\n    }\r\n\r\n    regExpStrSoft += \"$\";\r\n    regExpStr += \"$\";\r\n\r\n    this._numberRegExpSoft = new RegExp(regExpStrSoft);\r\n    this._numberRegExp = new RegExp(regExpStr)\r\n  }\r\n\r\n  _extractTail (fromPos=0, toPos=this.value.length) {\r\n    return this._removeThousandsSeparators(super._extractTail(fromPos, toPos));\r\n  }\r\n\r\n  _removeThousandsSeparators (value) {\r\n    return value.replace(this._thousandsSeparatorRegExp, '');\r\n  }\r\n\r\n  _insertThousandsSeparators (value) {\r\n    // https://stackoverflow.com/questions/2901102/how-to-print-a-number-with-commas-as-thousands-separators-in-javascript\r\n    const parts = value.split(this.radix);\r\n    parts[0] = parts[0].replace(/\\B(?=(\\d{3})+(?!\\d))/g, this.thousandsSeparator);\r\n    return parts.join(this.radix);\r\n  }\r\n\r\n  append (str, soft) {\r\n    return super.append(\r\n      this._removeThousandsSeparators(\r\n        str.replace(this._mapToRadixRegExp, this.radix)),\r\n      soft);\r\n  }\r\n\r\n  appendWithTail (str, tail) {\r\n    const oldValueLength = this.value.length;\r\n    this._value = this._removeThousandsSeparators(this.value);\r\n    let removedSeparatorsCount = oldValueLength - this.value.length;\r\n\r\n\r\n    const appended = super.appendWithTail(str, tail);\r\n\r\n\r\n    this._value = this._insertThousandsSeparators(this.value);\r\n\r\n    let beforeTailPos = oldValueLength + appended - removedSeparatorsCount;\r\n    this._value = this._insertThousandsSeparators(this.value);\r\n    let insertedSeparatorsBeforeTailCount = 0;\r\n    for (let pos = 0; pos <= beforeTailPos; ++pos) {\r\n      if (this.value[pos] === this.thousandsSeparator) {\r\n        ++insertedSeparatorsBeforeTailCount;\r\n        ++beforeTailPos;\r\n      }\r\n    }\r\n\r\n    return appended - removedSeparatorsCount + insertedSeparatorsBeforeTailCount;\r\n  }\r\n\r\n  nearestInputPos (cursorPos, direction=DIRECTION.LEFT) {\r\n    if (!direction) return cursorPos;\r\n\r\n    const nextPos = indexInDirection(cursorPos, direction);\r\n    if (this.value[nextPos] === this.thousandsSeparator) cursorPos += direction;\r\n    return cursorPos;\r\n  }\r\n\r\n  _validate (soft) {\r\n    const regexp = soft ? this._numberRegExpSoft : this._numberRegExp;\r\n\r\n    // validate as string\r\n    let valid = regexp.test(this._removeThousandsSeparators(this.value));\r\n\r\n    if (valid) {\r\n      // validate as number\r\n      const number = this.number;\r\n      valid = valid && !isNaN(number) &&\r\n        // check min bound for negative values\r\n        (this.min == null || this.min >= 0 || this.min <= this.number) &&\r\n        // check max bound for positive values\r\n        (this.max == null || this.max <= 0 || this.number <= this.max);\r\n    }\r\n\r\n    return valid && super._validate(soft);\r\n  }\r\n\r\n  commit () {\r\n    const number = this.number;\r\n    let validnum = number;\r\n\r\n    // check bounds\r\n    if (this.min != null) validnum = Math.max(validnum, this.min);\r\n    if (this.max != null) validnum = Math.min(validnum, this.max);\r\n\r\n    if (validnum !== number) {\r\n      this.unmaskedValue = '' + validnum;\r\n    }\r\n\r\n    let formatted = this.value;\r\n\r\n    if (this.postFormat.normalizeZeros) {\r\n      formatted = this._normalizeZeros(formatted);\r\n    }\r\n\r\n    if (this.postFormat.padFractionalZeros) {\r\n      formatted = this._padFractionalZeros(formatted);\r\n    }\r\n\r\n    this._value = formatted;\r\n  }\r\n\r\n  _normalizeZeros (value) {\r\n    const parts = this._removeThousandsSeparators(value).split(this.radix);\r\n\r\n    // remove leading zeros\r\n    parts[0] = parts[0].replace(/^(\\D*)(0*)(\\d*)/, (match, sign, zeros, num) => sign + num);\r\n\r\n    // add leading zero\r\n    if (parts[0].length && !/\\d$/.test(parts[0])) parts[0] = parts[0] + '0';\r\n\r\n    if (parts.length > 1) {\r\n      parts[1] = parts[1].replace(/0*$/, '');  // remove trailing zeros\r\n      if (!parts[1].length) parts.length = 1;  // remove fractional\r\n    }\r\n\r\n    return this._insertThousandsSeparators(parts.join(this.radix));\r\n  }\r\n\r\n  _padFractionalZeros (value) {\r\n    const parts = value.split(this.radix);\r\n    if (parts.length < 2) parts.push('');\r\n    parts[1] = parts[1].padEnd(this.scale, '0');\r\n    return parts.join(this.radix);\r\n  }\r\n\r\n  get number () {\r\n    let numstr =\r\n      this._removeThousandsSeparators(\r\n        this._normalizeZeros(\r\n          this.unmaskedValue))\r\n      .replace(this.radix, '.');\r\n\r\n    return Number(numstr);\r\n  }\r\n\r\n  set number (number) {\r\n    this.unmaskedValue = \"\" + number;\r\n  }\r\n\r\n  get min () {\r\n    return this._min;\r\n  }\r\n\r\n  @refreshValueOnSet\r\n  set min (min) {\r\n    this._min = min;\r\n  }\r\n\r\n  get max () {\r\n    return this._max;\r\n  }\r\n\r\n  @refreshValueOnSet\r\n  set max (max) {\r\n    this._max = max;\r\n  }\r\n\r\n  get scale () {\r\n    return this._scale;\r\n  }\r\n\r\n  @refreshValueOnSet\r\n  set scale (scale) {\r\n    this._scale = scale;\r\n  }\r\n\r\n  get radix () {\r\n    return this._radix;\r\n  }\r\n\r\n  @refreshValueOnSet\r\n  set radix (radix) {\r\n    this._radix = radix;\r\n    this._updateNumberRegExp();\r\n  }\r\n\r\n  get signed () {\r\n    return this._signed || (this.min != null && this.min < 0) || (this.max != null && this.max < 0);\r\n  }\r\n\r\n  @refreshValueOnSet\r\n  set signed (signed) {\r\n    this._signed = signed;\r\n  }\r\n\r\n  get postFormat () {\r\n    return this._postFormat;\r\n  }\r\n\r\n  @refreshValueOnSet\r\n  set postFormat (postFormat) {\r\n    this._postFormat = {\r\n      ...MaskedNumber.DEFAULTS.postFormat,\r\n      ...postFormat\r\n    };\r\n  }\r\n\r\n  get mapToRadix () {\r\n    return this._mapToRadix;\r\n  }\r\n\r\n  @refreshValueOnSet\r\n  set mapToRadix (mapToRadix) {\r\n    this._mapToRadix = mapToRadix;\r\n    this._mapToRadixRegExp = new RegExp(\"[\" +\r\n      mapToRadix.map(escapeRegExp).join(\"\") +\r\n    \"]\", \"g\");\r\n  }\r\n\r\n  get thousandsSeparator () {\r\n    return this._thousandsSeparator;\r\n  }\r\n\r\n  @refreshValueOnSet\r\n  set thousandsSeparator (thousandsSeparator) {\r\n    this._thousandsSeparator = thousandsSeparator;\r\n    this._thousandsSeparatorRegExp = new RegExp(escapeRegExp(thousandsSeparator), \"g\");\r\n  }\r\n}\r\nMaskedNumber.DEFAULTS = {\r\n  radix: ',',\r\n  thousandsSeparator: '',\r\n  mapToRadix: [',', '.'],\r\n  scale: 2,\r\n  postFormat: {\r\n    normalizeZeros: true,\r\n  }\r\n};\r\n","import {refreshValueOnSet} from '../core/utils';\r\nimport MaskedPattern from './pattern';\r\nimport PatternGroup from './pattern/group';\r\n\r\n\r\nexport default\r\nclass MaskedDate extends MaskedPattern {\r\n  constructor (opts) {\r\n    const groups = opts.groups;\r\n    opts = Object.assign({}, MaskedDate.DEFAULTS, opts);\r\n    const {min, max, format, parse} = opts;\r\n\r\n    opts.groups = Object.assign({}, MaskedDate.DEFAULTS.groups);\r\n    if (opts.groups.Y) {\r\n      // adjust year group\r\n      if (min) opts.groups.Y.from = min.getFullYear();\r\n      if (max) opts.groups.Y.to = max.getFullYear();\r\n    }\r\n\r\n    Object.assign(opts.groups, groups);\r\n\r\n    super(opts);\r\n    delete this.isInitialized;\r\n\r\n    this.min = min;\r\n    this.max = max;\r\n    this.format = format;\r\n    this.parse = parse;\r\n\r\n    this.isInitialized = true;\r\n  }\r\n\r\n  _validate (soft) {\r\n    const valid = super._validate(soft);\r\n    const date = this.date;\r\n\r\n    return valid &&\r\n      (!this.isComplete ||\r\n        this.isDateExist(this.value) && date && (this.max == null || date <= this.max));\r\n  }\r\n\r\n  commit () {\r\n    if (!this.isComplete) return;\r\n\r\n    // check min date\r\n    if (this.min != null && this.date < this.min) {\r\n      this._value = this.format(this.min);\r\n    }\r\n  }\r\n\r\n  isDateExist (str) {\r\n    return this.format(this.parse(str)) === str;\r\n  }\r\n\r\n  get date () {\r\n    return this.isComplete ?\r\n      this.parse(this.value) :\r\n      null;\r\n  }\r\n\r\n  set date (date) {\r\n    this.value = this.format(date);\r\n  }\r\n\r\n  get min () {\r\n    return this._min;\r\n  }\r\n\r\n  @refreshValueOnSet\r\n  set min (min) {\r\n    this._min = min;\r\n  }\r\n\r\n  get max () {\r\n    return this._max;\r\n  }\r\n\r\n  @refreshValueOnSet\r\n  set max (max) {\r\n    this._max = max;\r\n  }\r\n}\r\nMaskedDate.DEFAULTS = {\r\n  mask: 'd{.}`m{.}`Y',\r\n  format: date => {\r\n    var day = ('' + date.getDate()).padStart(2, '0');\r\n    var month = ('' + (date.getMonth() + 1)).padStart(2, '0');\r\n    var year = date.getFullYear();\r\n\r\n    return [day, month, year].join('.');\r\n  },\r\n  parse: str => {\r\n    let [day, month, year] = str.split('.');\r\n    return new Date(year, month - 1, day);\r\n  },\r\n  groups: {\r\n    d: new PatternGroup.Range([1, 31]),\r\n    m: new PatternGroup.Range([1, 12]),\r\n    Y: new PatternGroup.Range([1900, 2200]),\r\n  },\r\n};\r\n","import {DIRECTION} from './utils';\r\n\r\n\r\nexport default\r\nclass ActionDetails {\r\n  constructor (value, cursorPos, oldValue, oldSelection) {\r\n    this.value = value;\r\n    this.cursorPos = cursorPos;\r\n    this.oldValue = oldValue;\r\n    this.oldSelection = oldSelection;\r\n  }\r\n\r\n  get startChangePos () {\r\n    return Math.min(this.cursorPos, this.oldSelection.start);\r\n  }\r\n\r\n  get insertedCount () {\r\n    return this.cursorPos - this.startChangePos;\r\n  }\r\n\r\n  get inserted () {\r\n    return this.value.substr(this.startChangePos, this.insertedCount);\r\n  }\r\n\r\n  get removedCount () {\r\n    // Math.max for opposite operation\r\n    return Math.max((this.oldSelection.end - this.startChangePos) ||\r\n      // for Delete\r\n      this.oldValue.length - this.value.length, 0);\r\n  }\r\n\r\n  get removed () {\r\n    return this.oldValue.substr(this.startChangePos, this.removedCount);\r\n  }\r\n\r\n  get head () {\r\n    return this.value.substring(0, this.startChangePos);\r\n  }\r\n\r\n  get tail () {\r\n    this.value.substring(this.startChangePos + this.insertedCount);\r\n  }\r\n\r\n  get removeDirection () {\r\n    return this.removedCount &&\r\n      ((this.oldSelection.end === this.cursorPos || this.insertedCount) ?\r\n        DIRECTION.RIGHT :\r\n        DIRECTION.LEFT);\r\n  }\r\n}\r\n","import ActionDetails from '../core/action-details';\r\nimport createMask from '../masked/factory';\r\n\r\n\r\nexport default\r\nclass InputMask {\r\n  constructor (el, opts) {\r\n    this.el = el;\r\n    this.masked = createMask(opts);\r\n\r\n    this._listeners = {};\r\n    this._value = '';\r\n    this._unmaskedValue = '';\r\n\r\n    this.saveSelection = this.saveSelection.bind(this);\r\n    this._onInput = this._onInput.bind(this);\r\n    this._onChange = this._onChange.bind(this);\r\n    this._onDrop = this._onDrop.bind(this);\r\n    this._alignCursor = this._alignCursor.bind(this);\r\n    this._alignCursorFriendly = this._alignCursorFriendly.bind(this);\r\n\r\n    this.bindEvents();\r\n\r\n    // refresh\r\n    this.updateValue();\r\n    this._onChange();\r\n  }\r\n\r\n  update (opts) {\r\n    const mask = opts.mask;\r\n    if (mask) this.mask = mask;\r\n\r\n    this.masked.withValueRefresh(() => {\r\n      for (const k in opts) {\r\n        if (k === 'mask') continue;\r\n        this.masked[k] = opts[k];\r\n      }\r\n    });\r\n\r\n    this.updateControl();\r\n  }\r\n\r\n  on (ev, handler) {\r\n    if (!this._listeners[ev]) this._listeners[ev] = [];\r\n    this._listeners[ev].push(handler);\r\n    return this;\r\n  }\r\n\r\n  off (ev, handler) {\r\n    if (!this._listeners[ev]) return;\r\n    if (!handler) {\r\n      delete this._listeners[ev];\r\n      return;\r\n    }\r\n    const hIndex = this._listeners[ev].indexOf(handler);\r\n    if (hIndex >= 0) this._listeners.splice(hIndex, 1);\r\n    return this;\r\n  }\r\n\r\n  get mask () { return this.masked.mask; }\r\n  set mask (mask) {\r\n    const unmasked = this.masked ? this.masked.unmaskedValue : null;\r\n    if (typeof mask === typeof this.masked.mask) this.masked.mask = mask;\r\n    this.masked = createMask(this.masked);\r\n    if (unmasked != null) this.masked.unmaskedValue = unmasked;\r\n  }\r\n\r\n  get value () {\r\n    return this._value;\r\n  }\r\n\r\n  set value (str) {\r\n    this.masked.value = str;\r\n    this.updateControl();\r\n    this._alignCursor();\r\n  }\r\n\r\n  bindEvents () {\r\n    this.el.addEventListener('keydown', this.saveSelection);\r\n    this.el.addEventListener('input', this._onInput);\r\n    this.el.addEventListener('drop', this._onDrop);\r\n    this.el.addEventListener('click', this._alignCursorFriendly);\r\n    this.el.addEventListener('change', this._onChange);\r\n  }\r\n\r\n  unbindEvents () {\r\n    this.el.removeEventListener('keydown', this.saveSelection);\r\n    this.el.removeEventListener('input', this._onInput);\r\n    this.el.removeEventListener('drop', this._onDrop);\r\n    this.el.removeEventListener('click', this._alignCursorFriendly);\r\n    this.el.removeEventListener('change', this._onChange);\r\n  }\r\n\r\n  fireEvent (ev) {\r\n    const listeners = this._listeners[ev] || [];\r\n    listeners.forEach(l => l());\r\n  }\r\n\r\n  get selectionStart () {\r\n    return this._cursorChanging ?\r\n      this._changingCursorPos :\r\n\r\n      this.el.selectionStart;\r\n  }\r\n\r\n  get cursorPos () {\r\n    return this._cursorChanging ?\r\n      this._changingCursorPos :\r\n\r\n      this.el.selectionEnd;\r\n  }\r\n\r\n  set cursorPos (pos) {\r\n    if (this.el !== document.activeElement) return;\r\n\r\n    this.el.setSelectionRange(pos, pos);\r\n    this.saveSelection();\r\n  }\r\n\r\n  saveSelection (/* ev */) {\r\n    if (this.value !== this.el.value) {\r\n      console.warn('Uncontrolled input change, refresh mask manually!'); // eslint-disable-line no-console\r\n    }\r\n    this._selection = {\r\n      start: this.selectionStart,\r\n      end: this.cursorPos\r\n    };\r\n  }\r\n\r\n  destroy () {\r\n    this.unbindEvents();\r\n    this._listeners.length = 0;\r\n  }\r\n\r\n  get unmaskedValue () {\r\n    return this._unmaskedValue;\r\n  }\r\n\r\n  set unmaskedValue (str) {\r\n    this.masked.unmaskedValue = str;\r\n    this.updateControl();\r\n    this._alignCursor();\r\n  }\r\n\r\n  updateControl () {\r\n    const newUnmaskedValue = this.masked.unmaskedValue;\r\n    const newValue = this.masked.value;\r\n    const isChanged = (this.unmaskedValue !== newUnmaskedValue ||\r\n      this.value !== newValue);\r\n\r\n    this._unmaskedValue = newUnmaskedValue;\r\n    this._value = newValue;\r\n\r\n    if (this.el.value !== newValue) this.el.value = newValue;\r\n    if (isChanged) this._fireChangeEvents();\r\n  }\r\n\r\n  _fireChangeEvents () {\r\n    this.fireEvent('accept');\r\n    if (this.masked.isComplete) this.fireEvent('complete');\r\n  }\r\n\r\n  updateCursor (cursorPos) {\r\n    if (cursorPos == null) return;\r\n    this.cursorPos = cursorPos;\r\n\r\n    // also queue change cursor for mobile browsers\r\n    this._delayUpdateCursor(cursorPos);\r\n  }\r\n\r\n  _delayUpdateCursor (cursorPos) {\r\n    this._abortUpdateCursor();\r\n    this._changingCursorPos = cursorPos;\r\n    this._cursorChanging = setTimeout(() => {\r\n      this.cursorPos = this._changingCursorPos;\r\n      this._abortUpdateCursor();\r\n    }, 10);\r\n  }\r\n\r\n  _abortUpdateCursor () {\r\n    if (this._cursorChanging) {\r\n      clearTimeout(this._cursorChanging);\r\n      delete this._cursorChanging;\r\n    }\r\n  }\r\n\r\n  _alignCursor () {\r\n    this.cursorPos = this.masked.nearestInputPos(this.cursorPos);\r\n  }\r\n\r\n  _alignCursorFriendly () {\r\n    if (this.selectionStart !== this.cursorPos) return;\r\n    this._alignCursor();\r\n  }\r\n\r\n  _onInput () {\r\n    this._abortUpdateCursor();\r\n\r\n    const details = new ActionDetails(\r\n      // new state\r\n      this.el.value, this.cursorPos,\r\n      // old state\r\n      this.value, this._selection);\r\n\r\n    // const insertedCount = this.masked.splice(\r\n    //   this.masked.nearestInputPos(details.startChangePos, details.removeDirection),\r\n    //   details.removed.length,\r\n    //   details.inserted);\r\n\r\n\r\n    const tailPos = details.startChangePos + details.removed.length;\r\n    const tail = this.masked._extractTail(tailPos);\r\n\r\n    const lastInputPos = this.masked.nearestInputPos(details.startChangePos, details.removeDirection);\r\n    this.masked.clear(lastInputPos);\r\n    const insertedCount = this.masked.appendWithTail(details.inserted, tail);\r\n\r\n\r\n    const cursorPos = this.masked.nearestInputPos(\r\n      lastInputPos + insertedCount,\r\n      details.removeDirection);\r\n\r\n    this.updateControl();\r\n    this.updateCursor(cursorPos);\r\n  }\r\n\r\n  updateValue () {\r\n    this.masked.value = this.el.value;\r\n  }\r\n\r\n  _onChange () {\r\n    if (this.value !== this.el.value) {\r\n      this.updateValue();\r\n    }\r\n    this.masked.commit();\r\n    this.updateControl();\r\n  }\r\n\r\n  _onDrop (ev) {\r\n    ev.preventDefault();\r\n    ev.stopPropagation();\r\n  }\r\n}\r\n"],"names":["isString","str","String","conform","res","fallback","indexInDirection","pos","direction","DIRECTION","LEFT","refreshValueOnSet","target","key","descriptor","method","set","args","this","withValueRefresh","bind","escapeRegExp","replace","createMask","opts","mask","Masked","RegExp","value","test","MaskedPattern","prototype","Function","IMask","el","InputMask","global","module","window","Math","self","__g","core","version","__e","it","isObject","TypeError","exec","e","require$$0","Object","defineProperty","get","a","document","is","createElement","require$$1","require$$2","S","fn","val","toString","call","valueOf","dP","O","P","Attributes","anObject","toPrimitive","IE8_DOM_DEFINE","bitmap","enumerable","configurable","writable","object","f","createDesc","hasOwnProperty","id","px","random","concat","undefined","SRC","$toString","TPL","split","inspectSource","safe","isFunction","has","hide","join","that","length","aFunction","b","c","apply","arguments","PROTOTYPE","$export","type","name","source","own","out","exp","IS_FORCED","F","IS_GLOBAL","G","IS_STATIC","IS_PROTO","IS_BIND","B","exports","expProto","ctx","redefine","U","W","R","slice","propertyIsEnumerable","cof","defined","ceil","floor","isNaN","min","toInteger","Array","isArray","arg","SHARED","store","Symbol","USE_SYMBOL","uid","SPECIES","original","C","constructor","speciesConstructor","TYPE","$create","IS_MAP","IS_FILTER","IS_SOME","IS_EVERY","IS_FIND_INDEX","NO_HOLES","create","asc","$this","callbackfn","toObject","IObject","toLength","index","result","push","UNSCOPABLES","ArrayProto","$find","KEY","forced","find","max","IS_INCLUDES","fromIndex","toIObject","toIndex","shared","arrayIndexOf","IE_PROTO","names","i","keys","$keys","enumBugKeys","fails","count","n","Infinity","RangeError","repeat","maxLength","fillString","left","stringLength","fillStr","intMaxLength","fillLen","stringFiller","padStart","$pad","padEnd","validate","_value","isInitialized","_validate","soft","clone","m","reset","nearestInputPos","cursorPos","extractInput","fromPos","toPos","_extractTail","_appendTail","tail","append","oldValueLength","consistentValue","ci","appendWithTail","appendCount","consistentAppended","ch","appended","_unmask","clear","from","to","_refreshing","unmasked","unmaskedValue","ret","commit","_mask","PatternDefinition","_masked","isHollow","resolve","TYPES","INPUT","optional","DEFAULTS","PatternGroup","masked","offset","mapDefIndexToPos","Range","maxlen","_from","_to","_maxLength","_update","minstr","maxstr","match","placeholder","num","search","_matchFrom","Number","definitions","groups","_Masked","_this","_updateMask","defs","_definitions","_charDefs","_groupDefs","pattern","unmaskingBlock","optionalBlock","stopAlign","_this2","_groups","p","gName","indexOf","group","char","FIXED","unmasking","STOP_CHAR","ESCAPE_CHAR","every","g","forEach","d","babelHelpers.extends","_this3","hiddenHollowsBefore","defIndex","filter","isHiddenHollow","mapPosToDefIndex","di","def","appendChunks","_appendPlaceholder","resolved","skipped","chres","chunks","fromDefIndex","input","extractInputChunks","toDefIndex","isInput","stopDefIndices","map","stops","s","_this4","stop","maxDefIndex","show","initialDefIndex","firstInputIndex","firstFilledInputIndex","firstVisibleHollowIndex","nextdi","nextDef","overflow","allGroups","groupsByName","_placeholder","ph","DEFAULT_PLACEHOLDER","some","_this5","Definition","MaskedNumber","scale","radix","mapToRadix","signed","thousandsSeparator","postFormat","_updateNumberRegExp","regExpStrSoft","regExpStr","_numberRegExpSoft","_numberRegExp","_removeThousandsSeparators","_thousandsSeparatorRegExp","_insertThousandsSeparators","parts","_mapToRadixRegExp","removedSeparatorsCount","beforeTailPos","insertedSeparatorsBeforeTailCount","nextPos","valid","number","validnum","formatted","normalizeZeros","_normalizeZeros","padFractionalZeros","_padFractionalZeros","sign","zeros","numstr","_min","_max","_scale","_radix","_signed","_postFormat","_mapToRadix","_thousandsSeparator","MaskedDate","format","parse","Y","getFullYear","_MaskedPattern","date","isComplete","isDateExist","getDate","getMonth","day","month","year","Date","ActionDetails","oldValue","oldSelection","start","startChangePos","substr","insertedCount","end","removedCount","substring","RIGHT","_listeners","_unmaskedValue","saveSelection","_onInput","_onChange","_onDrop","_alignCursor","_alignCursorFriendly","bindEvents","updateValue","update","k","updateControl","on","ev","handler","off","hIndex","splice","addEventListener","unbindEvents","removeEventListener","fireEvent","l","warn","_selection","selectionStart","destroy","newUnmaskedValue","newValue","isChanged","_fireChangeEvents","updateCursor","_delayUpdateCursor","_abortUpdateCursor","_changingCursorPos","_cursorChanging","setTimeout","details","tailPos","removed","lastInputPos","removeDirection","inserted","preventDefault","stopPropagation","selectionEnd","activeElement","setSelectionRange"],"mappings":"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"}