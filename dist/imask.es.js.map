{"version":3,"file":"imask.es.js","sources":["../src/core/utils.js","../src/masked/base.js","../src/masked/factory.js","../src/masked/pattern/definition.js","../src/masked/pattern.js","../src/masked/number.js","../src/core/action-details.js","../src/controls/input.js","../src/imask.js"],"sourcesContent":["export\r\nfunction isString (str) {\r\n  return typeof str === 'string' || str instanceof String;\r\n}\r\n\r\nexport\r\nfunction conform (res, str, fallback='') {\r\n  return isString(res) ?\r\n    res :\r\n    res ?\r\n      str :\r\n      fallback;\r\n}\r\n\r\nexport\r\nconst DIRECTION = {\r\n  NONE: 0,\r\n  LEFT: -1,\r\n  RIGHT: 1\r\n}\r\n\r\nexport\r\nfunction indexInDirection (pos, direction) {\r\n  if (direction === DIRECTION.LEFT) --pos;\r\n  return pos;\r\n}\r\n\r\nexport\r\nfunction refreshValueOnSet (target, key, descriptor) {\r\n  const method = descriptor.set;\r\n  descriptor.set = function (...args) {\r\n    return this.withValueRefresh(method.bind(this, ...args));\r\n  };\r\n}\r\n\r\nexport\r\nfunction escapeRegExp(str) {\r\n  return str.replace(/([.*+?^=!:${}()|\\[\\]\\/\\\\])/g, \"\\\\$1\");\r\n}\r\n","import {refreshValueOnSet} from '../core/utils';\r\n\r\n\r\nexport default\r\nclass Masked {\r\n  constructor ({mask, validate}) {\r\n    this._value = '';\r\n    this.mask = mask;\r\n    this.validate = validate || (() => true);\r\n    this.isInitialized = true;\r\n  }\r\n\r\n  get mask () {\r\n    return this._mask;\r\n  }\r\n\r\n  @refreshValueOnSet\r\n  set mask (mask) {\r\n    this._mask = mask;\r\n  }\r\n\r\n  _validate (soft) {\r\n    return this.validate(this, soft);\r\n  }\r\n\r\n  clone () {\r\n    const m = new Masked(this);\r\n    m._value = this.value.slice();\r\n    return m;\r\n  }\r\n\r\n  reset () {\r\n    this._value = '';\r\n  }\r\n\r\n  get value () {\r\n    return this._value;\r\n  }\r\n\r\n  set value (value) {\r\n    this.reset();\r\n    this.append(value, true);\r\n    this._appendTail();\r\n  }\r\n\r\n  get unmaskedValue () {\r\n    return this._unmask();\r\n  }\r\n\r\n  set unmaskedValue (value) {\r\n    this.reset();\r\n    this.append(value);\r\n    this._appendTail();\r\n  }\r\n\r\n  get isComplete () {\r\n    return true;\r\n  }\r\n\r\n  nearestInputPos (cursorPos, /* direction */) {\r\n    return cursorPos;\r\n  }\r\n\r\n  extractInput (fromPos=0, toPos=this.value.length) {\r\n    return this.value.slice(fromPos, toPos);\r\n  }\r\n\r\n  _extractTail (fromPos=0, toPos=this.value.length) {\r\n    return this.extractInput(fromPos, toPos);\r\n  }\r\n\r\n  _appendTail (tail) {\r\n    return !tail || this.append(tail);\r\n  }\r\n\r\n  append (str, soft) {\r\n    const oldValueLength = this.value.length;\r\n    let consistentValue = this.clone();\r\n\r\n    for (let ci=0; ci<str.length; ++ci) {\r\n      this._value += str[ci];\r\n      if (this._validate(soft) === false) {\r\n        Object.assign(this, consistentValue);\r\n        if (!soft) return false;\r\n      }\r\n\r\n      consistentValue = this.clone();\r\n    }\r\n\r\n    return this.value.length - oldValueLength;\r\n\r\n  }\r\n\r\n  appendWithTail (str, tail) {\r\n    // TODO refactor\r\n    let appendCount = 0;\r\n    let consistentValue = this.clone();\r\n    let consistentAppended;\r\n\r\n    for (let ci=0; ci<str.length; ++ci) {\r\n      const ch = str[ci];\r\n\r\n      const appended = this.append(ch, true);\r\n      consistentAppended = this.clone();\r\n      const tailAppended = appended !== false && this._appendTail(tail) !== false;\r\n      if (tailAppended === false || this._validate(true) === false) {\r\n        Object.assign(this, consistentValue);\r\n        break;\r\n      }\r\n\r\n      consistentValue = this.clone();\r\n      Object.assign(this, consistentAppended);\r\n      appendCount += appended;\r\n    }\r\n\r\n    // TODO needed for cases when\r\n    // 1) REMOVE ONLY AND NO LOOP AT ALL\r\n    // 2) last loop iteration removes tail\r\n    // 3) when breaks on tail insert\r\n    this._appendTail(tail);\r\n\r\n    return appendCount;\r\n  }\r\n\r\n  _unmask () {\r\n    return this.value;\r\n  }\r\n\r\n  // TODO rename - refactor\r\n  clear (from=0, to=this.value.length) {\r\n    this._value = this.value.slice(0, from) + this.value.slice(to);\r\n  }\r\n\r\n  withValueRefresh (fn) {\r\n    if (this._refreshing) return fn();\r\n    this._refreshing = true;\r\n\r\n    const unmasked = this.isInitialized ? this.unmaskedValue : null;\r\n\r\n    const ret = fn();\r\n\r\n    if (unmasked != null) this.unmaskedValue = unmasked;\r\n    delete this._refreshing;\r\n    return ret;\r\n  }\r\n\r\n  commit () {}\r\n\r\n  // TODO\r\n  // resolve (inputRaw) -> outputRaw\r\n\r\n  // TODO\r\n  // insert (str, fromPos, soft)\r\n\r\n  // splice (start, deleteCount, inserted, removeDirection) {\r\n  //   const tailPos = start + deleteCount;\r\n  //   const tail = this._extractTail(tailPos);\r\n\r\n  //   start = this.nearestInputPos(start, removeDirection);\r\n  //   this.clear(start);\r\n  //   return this.appendWithTail(inserted, tail);\r\n  // }\r\n}\r\n","import {isString} from '../core/utils';\r\n\r\nimport Masked from './base';\r\nimport MaskedPattern from './pattern';\r\n\r\n\r\nexport default\r\nfunction createMask (opts) {\r\n  const mask = opts.mask;\r\n  if (mask instanceof Masked) return mask;\r\n  if (mask instanceof RegExp) return new Masked({\r\n    ...opts,\r\n    validate: (masked) => mask.test(masked.value)\r\n  });\r\n  if (isString(mask)) return new MaskedPattern(opts);\r\n  if (mask.prototype instanceof Masked) return new mask(opts);\r\n  if (mask instanceof Function) return new Masked({\r\n    ...opts,\r\n    validate: mask\r\n  });\r\n  return new Masked(opts);\r\n}\r\n","import createMask from '../factory';\r\n\r\n\r\nexport default\r\nclass PatternDefinition {\r\n  constructor(opts) {\r\n    Object.assign(this, opts);\r\n\r\n    if (this.mask) {\r\n      this._masked = createMask(opts);\r\n    }\r\n  }\r\n\r\n  reset () {\r\n    this.isHollow = false;\r\n    if (this._masked) this._masked.reset();\r\n  }\r\n\r\n  get isInput () {\r\n    return this.type === PatternDefinition.TYPES.INPUT;\r\n  }\r\n\r\n  get isHiddenHollow () {\r\n    return this.isHollow && this.optional;\r\n  }\r\n\r\n  resolve (ch) {\r\n    if (!this._masked) return false;\r\n    // TODO seems strange\r\n    this._masked.value = ch;\r\n    return this._masked.value;\r\n  }\r\n}\r\n\r\nPatternDefinition.DEFAULTS = {\r\n  '0': /\\d/,\r\n  'a': /[\\u0041-\\u005A\\u0061-\\u007A\\u00AA\\u00B5\\u00BA\\u00C0-\\u00D6\\u00D8-\\u00F6\\u00F8-\\u02C1\\u02C6-\\u02D1\\u02E0-\\u02E4\\u02EC\\u02EE\\u0370-\\u0374\\u0376\\u0377\\u037A-\\u037D\\u0386\\u0388-\\u038A\\u038C\\u038E-\\u03A1\\u03A3-\\u03F5\\u03F7-\\u0481\\u048A-\\u0527\\u0531-\\u0556\\u0559\\u0561-\\u0587\\u05D0-\\u05EA\\u05F0-\\u05F2\\u0620-\\u064A\\u066E\\u066F\\u0671-\\u06D3\\u06D5\\u06E5\\u06E6\\u06EE\\u06EF\\u06FA-\\u06FC\\u06FF\\u0710\\u0712-\\u072F\\u074D-\\u07A5\\u07B1\\u07CA-\\u07EA\\u07F4\\u07F5\\u07FA\\u0800-\\u0815\\u081A\\u0824\\u0828\\u0840-\\u0858\\u08A0\\u08A2-\\u08AC\\u0904-\\u0939\\u093D\\u0950\\u0958-\\u0961\\u0971-\\u0977\\u0979-\\u097F\\u0985-\\u098C\\u098F\\u0990\\u0993-\\u09A8\\u09AA-\\u09B0\\u09B2\\u09B6-\\u09B9\\u09BD\\u09CE\\u09DC\\u09DD\\u09DF-\\u09E1\\u09F0\\u09F1\\u0A05-\\u0A0A\\u0A0F\\u0A10\\u0A13-\\u0A28\\u0A2A-\\u0A30\\u0A32\\u0A33\\u0A35\\u0A36\\u0A38\\u0A39\\u0A59-\\u0A5C\\u0A5E\\u0A72-\\u0A74\\u0A85-\\u0A8D\\u0A8F-\\u0A91\\u0A93-\\u0AA8\\u0AAA-\\u0AB0\\u0AB2\\u0AB3\\u0AB5-\\u0AB9\\u0ABD\\u0AD0\\u0AE0\\u0AE1\\u0B05-\\u0B0C\\u0B0F\\u0B10\\u0B13-\\u0B28\\u0B2A-\\u0B30\\u0B32\\u0B33\\u0B35-\\u0B39\\u0B3D\\u0B5C\\u0B5D\\u0B5F-\\u0B61\\u0B71\\u0B83\\u0B85-\\u0B8A\\u0B8E-\\u0B90\\u0B92-\\u0B95\\u0B99\\u0B9A\\u0B9C\\u0B9E\\u0B9F\\u0BA3\\u0BA4\\u0BA8-\\u0BAA\\u0BAE-\\u0BB9\\u0BD0\\u0C05-\\u0C0C\\u0C0E-\\u0C10\\u0C12-\\u0C28\\u0C2A-\\u0C33\\u0C35-\\u0C39\\u0C3D\\u0C58\\u0C59\\u0C60\\u0C61\\u0C85-\\u0C8C\\u0C8E-\\u0C90\\u0C92-\\u0CA8\\u0CAA-\\u0CB3\\u0CB5-\\u0CB9\\u0CBD\\u0CDE\\u0CE0\\u0CE1\\u0CF1\\u0CF2\\u0D05-\\u0D0C\\u0D0E-\\u0D10\\u0D12-\\u0D3A\\u0D3D\\u0D4E\\u0D60\\u0D61\\u0D7A-\\u0D7F\\u0D85-\\u0D96\\u0D9A-\\u0DB1\\u0DB3-\\u0DBB\\u0DBD\\u0DC0-\\u0DC6\\u0E01-\\u0E30\\u0E32\\u0E33\\u0E40-\\u0E46\\u0E81\\u0E82\\u0E84\\u0E87\\u0E88\\u0E8A\\u0E8D\\u0E94-\\u0E97\\u0E99-\\u0E9F\\u0EA1-\\u0EA3\\u0EA5\\u0EA7\\u0EAA\\u0EAB\\u0EAD-\\u0EB0\\u0EB2\\u0EB3\\u0EBD\\u0EC0-\\u0EC4\\u0EC6\\u0EDC-\\u0EDF\\u0F00\\u0F40-\\u0F47\\u0F49-\\u0F6C\\u0F88-\\u0F8C\\u1000-\\u102A\\u103F\\u1050-\\u1055\\u105A-\\u105D\\u1061\\u1065\\u1066\\u106E-\\u1070\\u1075-\\u1081\\u108E\\u10A0-\\u10C5\\u10C7\\u10CD\\u10D0-\\u10FA\\u10FC-\\u1248\\u124A-\\u124D\\u1250-\\u1256\\u1258\\u125A-\\u125D\\u1260-\\u1288\\u128A-\\u128D\\u1290-\\u12B0\\u12B2-\\u12B5\\u12B8-\\u12BE\\u12C0\\u12C2-\\u12C5\\u12C8-\\u12D6\\u12D8-\\u1310\\u1312-\\u1315\\u1318-\\u135A\\u1380-\\u138F\\u13A0-\\u13F4\\u1401-\\u166C\\u166F-\\u167F\\u1681-\\u169A\\u16A0-\\u16EA\\u1700-\\u170C\\u170E-\\u1711\\u1720-\\u1731\\u1740-\\u1751\\u1760-\\u176C\\u176E-\\u1770\\u1780-\\u17B3\\u17D7\\u17DC\\u1820-\\u1877\\u1880-\\u18A8\\u18AA\\u18B0-\\u18F5\\u1900-\\u191C\\u1950-\\u196D\\u1970-\\u1974\\u1980-\\u19AB\\u19C1-\\u19C7\\u1A00-\\u1A16\\u1A20-\\u1A54\\u1AA7\\u1B05-\\u1B33\\u1B45-\\u1B4B\\u1B83-\\u1BA0\\u1BAE\\u1BAF\\u1BBA-\\u1BE5\\u1C00-\\u1C23\\u1C4D-\\u1C4F\\u1C5A-\\u1C7D\\u1CE9-\\u1CEC\\u1CEE-\\u1CF1\\u1CF5\\u1CF6\\u1D00-\\u1DBF\\u1E00-\\u1F15\\u1F18-\\u1F1D\\u1F20-\\u1F45\\u1F48-\\u1F4D\\u1F50-\\u1F57\\u1F59\\u1F5B\\u1F5D\\u1F5F-\\u1F7D\\u1F80-\\u1FB4\\u1FB6-\\u1FBC\\u1FBE\\u1FC2-\\u1FC4\\u1FC6-\\u1FCC\\u1FD0-\\u1FD3\\u1FD6-\\u1FDB\\u1FE0-\\u1FEC\\u1FF2-\\u1FF4\\u1FF6-\\u1FFC\\u2071\\u207F\\u2090-\\u209C\\u2102\\u2107\\u210A-\\u2113\\u2115\\u2119-\\u211D\\u2124\\u2126\\u2128\\u212A-\\u212D\\u212F-\\u2139\\u213C-\\u213F\\u2145-\\u2149\\u214E\\u2183\\u2184\\u2C00-\\u2C2E\\u2C30-\\u2C5E\\u2C60-\\u2CE4\\u2CEB-\\u2CEE\\u2CF2\\u2CF3\\u2D00-\\u2D25\\u2D27\\u2D2D\\u2D30-\\u2D67\\u2D6F\\u2D80-\\u2D96\\u2DA0-\\u2DA6\\u2DA8-\\u2DAE\\u2DB0-\\u2DB6\\u2DB8-\\u2DBE\\u2DC0-\\u2DC6\\u2DC8-\\u2DCE\\u2DD0-\\u2DD6\\u2DD8-\\u2DDE\\u2E2F\\u3005\\u3006\\u3031-\\u3035\\u303B\\u303C\\u3041-\\u3096\\u309D-\\u309F\\u30A1-\\u30FA\\u30FC-\\u30FF\\u3105-\\u312D\\u3131-\\u318E\\u31A0-\\u31BA\\u31F0-\\u31FF\\u3400-\\u4DB5\\u4E00-\\u9FCC\\uA000-\\uA48C\\uA4D0-\\uA4FD\\uA500-\\uA60C\\uA610-\\uA61F\\uA62A\\uA62B\\uA640-\\uA66E\\uA67F-\\uA697\\uA6A0-\\uA6E5\\uA717-\\uA71F\\uA722-\\uA788\\uA78B-\\uA78E\\uA790-\\uA793\\uA7A0-\\uA7AA\\uA7F8-\\uA801\\uA803-\\uA805\\uA807-\\uA80A\\uA80C-\\uA822\\uA840-\\uA873\\uA882-\\uA8B3\\uA8F2-\\uA8F7\\uA8FB\\uA90A-\\uA925\\uA930-\\uA946\\uA960-\\uA97C\\uA984-\\uA9B2\\uA9CF\\uAA00-\\uAA28\\uAA40-\\uAA42\\uAA44-\\uAA4B\\uAA60-\\uAA76\\uAA7A\\uAA80-\\uAAAF\\uAAB1\\uAAB5\\uAAB6\\uAAB9-\\uAABD\\uAAC0\\uAAC2\\uAADB-\\uAADD\\uAAE0-\\uAAEA\\uAAF2-\\uAAF4\\uAB01-\\uAB06\\uAB09-\\uAB0E\\uAB11-\\uAB16\\uAB20-\\uAB26\\uAB28-\\uAB2E\\uABC0-\\uABE2\\uAC00-\\uD7A3\\uD7B0-\\uD7C6\\uD7CB-\\uD7FB\\uF900-\\uFA6D\\uFA70-\\uFAD9\\uFB00-\\uFB06\\uFB13-\\uFB17\\uFB1D\\uFB1F-\\uFB28\\uFB2A-\\uFB36\\uFB38-\\uFB3C\\uFB3E\\uFB40\\uFB41\\uFB43\\uFB44\\uFB46-\\uFBB1\\uFBD3-\\uFD3D\\uFD50-\\uFD8F\\uFD92-\\uFDC7\\uFDF0-\\uFDFB\\uFE70-\\uFE74\\uFE76-\\uFEFC\\uFF21-\\uFF3A\\uFF41-\\uFF5A\\uFF66-\\uFFBE\\uFFC2-\\uFFC7\\uFFCA-\\uFFCF\\uFFD2-\\uFFD7\\uFFDA-\\uFFDC]/,  // http://stackoverflow.com/a/22075070\r\n  '*': /./\r\n};\r\nPatternDefinition.TYPES = {\r\n  INPUT: 'input',\r\n  FIXED: 'fixed'\r\n};\r\n","import {conform, DIRECTION, indexInDirection, refreshValueOnSet} from '../core/utils';\r\nimport Masked from './base';\r\nimport PatternDefinition from './pattern/definition';\r\n\r\n\r\nexport default\r\nclass MaskedPattern extends Masked {\r\n  constructor (opts) {\r\n    const {definitions, placeholder} = opts;\r\n    super(opts);\r\n    delete this.isInitialized;\r\n\r\n    this.placeholder = placeholder;\r\n    this.definitions = definitions;\r\n\r\n    this.isInitialized = true;\r\n  }\r\n\r\n  get placeholder () {\r\n    return this._placeholder;\r\n  }\r\n\r\n  @refreshValueOnSet\r\n  set placeholder (ph) {\r\n    this._placeholder = {\r\n      ...MaskedPattern.DEFAULT_PLACEHOLDER,\r\n      ...ph\r\n    };\r\n  }\r\n\r\n  get definitions () {\r\n    return this._definitions;\r\n  }\r\n\r\n  @refreshValueOnSet\r\n  set definitions (defs) {\r\n    defs = {\r\n      ...PatternDefinition.DEFAULTS,\r\n      ...defs\r\n    };\r\n\r\n    this._definitions = defs;\r\n    this._updateMask();\r\n  }\r\n\r\n  get mask () {\r\n    return this._mask;\r\n  }\r\n\r\n  @refreshValueOnSet\r\n  set mask (mask) {\r\n    this._mask = mask;\r\n    this._updateMask();\r\n  }\r\n\r\n  _updateMask () {\r\n    const defs = this._definitions;\r\n    this._charDefs = [];\r\n\r\n    const pattern = this.mask;\r\n    if (!pattern || !defs) return;\r\n\r\n    let unmaskingBlock = false;\r\n    let optionalBlock = false;\r\n    let stopAlign = false;\r\n    for (let i=0; i<pattern.length; ++i) {\r\n      let char = pattern[i];\r\n      let type = !unmaskingBlock && char in defs ?\r\n        PatternDefinition.TYPES.INPUT :\r\n        PatternDefinition.TYPES.FIXED;\r\n      const unmasking = type === PatternDefinition.TYPES.INPUT || unmaskingBlock;\r\n      const optional = type === PatternDefinition.TYPES.INPUT && optionalBlock;\r\n\r\n      if (char === MaskedPattern.STOP_CHAR) {\r\n        stopAlign = true;\r\n        continue;\r\n      }\r\n\r\n      if (char === '{' || char === '}') {\r\n        unmaskingBlock = !unmaskingBlock;\r\n        continue;\r\n      }\r\n\r\n      if (char === '[' || char === ']') {\r\n        optionalBlock = !optionalBlock;\r\n        continue;\r\n      }\r\n\r\n      if (char === MaskedPattern.ESCAPE_CHAR) {\r\n        ++i;\r\n        char = pattern[i];\r\n        // TODO validation\r\n        if (!char) break;\r\n        type = PatternDefinition.TYPES.FIXED;\r\n      }\r\n\r\n      this._charDefs.push(new PatternDefinition({\r\n        char,\r\n        type,\r\n        optional,\r\n        stopAlign,\r\n        mask: unmasking &&\r\n          (type === PatternDefinition.TYPES.INPUT ?\r\n            defs[char] :\r\n            (m => m.value === char))\r\n      }));\r\n\r\n      stopAlign = false;\r\n    }\r\n  }\r\n\r\n  clone () {\r\n    const m = new MaskedPattern(this);\r\n    m._value = this.value.slice();\r\n    m._charDefs.forEach((d, i) => Object.assign(d, this._charDefs[i]));\r\n    return m;\r\n  }\r\n\r\n  reset () {\r\n    super.reset();\r\n    this._charDefs.forEach(d => {delete d.isHollow;});\r\n  }\r\n\r\n  get isComplete () {\r\n    return !this._charDefs.some(d =>\r\n      d.isInput && !d.optional && d.isHollow);\r\n  }\r\n\r\n  hiddenHollowsBefore (defIndex) {\r\n    return this._charDefs\r\n      .slice(0, defIndex)\r\n      .filter(d => d.isHiddenHollow)\r\n      .length;\r\n  }\r\n\r\n  mapDefIndexToPos (defIndex) {\r\n    if (defIndex == null) return;\r\n    return defIndex - this.hiddenHollowsBefore(defIndex);\r\n  }\r\n\r\n  mapPosToDefIndex (pos) {\r\n    if (pos == null) return;\r\n    let defIndex = pos;\r\n    for (let di=0; di<this._charDefs.length; ++di) {\r\n      const def = this._charDefs[di];\r\n      if (di >= defIndex) break;\r\n      if (def.isHiddenHollow) ++defIndex;\r\n    }\r\n    return defIndex;\r\n  }\r\n\r\n  _unmask () {\r\n    const str = this.value;\r\n    let unmasked = '';\r\n\r\n    for (let ci=0, di=0; ci<str.length && di<this._charDefs.length; ++di) {\r\n      const ch = str[ci];\r\n      const def = this._charDefs[di];\r\n\r\n      if (def.isHiddenHollow) continue;\r\n      if (def.mask && !def.isHollow) unmasked += ch;\r\n      ++ci;\r\n    }\r\n\r\n    return unmasked;\r\n  }\r\n\r\n  _appendTail (tail) {\r\n    return (!tail || this.appendChunks(tail)) && this._appendPlaceholder();\r\n  }\r\n\r\n  append (str, soft) {\r\n    const oldValueLength = this.value.length;\r\n\r\n    for (let ci=0, di=this.mapPosToDefIndex(this.value.length); ci < str.length;) {\r\n      const ch = str[ci];\r\n      const def = this._charDefs[di];\r\n\r\n      // check overflow\r\n      if (!def) return false;\r\n\r\n      // reset\r\n      def.isHollow = false;\r\n\r\n      let resolved, skipped;\r\n      let chres = conform(def.resolve(ch), ch);\r\n\r\n      if (def.type === PatternDefinition.TYPES.INPUT) {\r\n        if (chres) {\r\n          const m = this.clone();\r\n          this._value += chres;\r\n          if (!this._validate()) {\r\n            chres = '';\r\n            Object.assign(this, m);\r\n          }\r\n        }\r\n\r\n        resolved = !!chres;\r\n        skipped = !chres && !def.optional;\r\n\r\n        // if ok - next di\r\n        if (!chres) {\r\n          if (!def.optional && !soft) {\r\n            this._value += this.placeholder.char;\r\n            skipped = false;\r\n          }\r\n          if (!skipped) def.isHollow = true;\r\n        }\r\n      } else {\r\n        this._value += def.char;\r\n        resolved = chres && (def.mask || soft);\r\n      }\r\n\r\n      if (!skipped) ++di;\r\n      if (resolved || skipped) ++ci;\r\n    }\r\n\r\n    return this.value.length - oldValueLength;\r\n  }\r\n\r\n  appendChunks (chunks, soft) {\r\n    for (let ci=0; ci < chunks.length; ++ci) {\r\n      const [fromDefIndex, input] = chunks[ci];\r\n      if (fromDefIndex != null) this._appendPlaceholder(fromDefIndex);\r\n      if (this.append(input, soft) === false) return false;\r\n    }\r\n    return true;\r\n  }\r\n\r\n  _extractTail (fromPos, toPos) {\r\n    return this.extractInputChunks(fromPos, toPos);\r\n  }\r\n\r\n  extractInput (fromPos=0, toPos=this.value.length) {\r\n    // TODO fromPos === toPos\r\n    const str = this.value;\r\n    let input = '';\r\n\r\n    const toDefIndex = this.mapPosToDefIndex(toPos);\r\n    for (let ci=fromPos, di=this.mapPosToDefIndex(fromPos); ci<toPos && di < toDefIndex; ++di) {\r\n      const ch = str[ci];\r\n      const def = this._charDefs[di];\r\n\r\n      if (!def) break;\r\n      if (def.isHiddenHollow) continue;\r\n\r\n      if (def.isInput && !def.isHollow) input += ch;\r\n      ++ci;\r\n    }\r\n    return input;\r\n  }\r\n\r\n  extractInputChunks (fromPos=0, toPos=this.value.length) {\r\n    // TODO fromPos === toPos\r\n    const fromDefIndex = this.mapPosToDefIndex(fromPos);\r\n    const toDefIndex = this.mapPosToDefIndex(toPos);\r\n    const stopDefIndices = this._charDefs\r\n      .map((d, i) => [d, i])\r\n      .slice(fromDefIndex, toDefIndex)\r\n      .filter(([d]) => d.stopAlign)\r\n      .map(([, i]) => i);\r\n\r\n    const stops = [\r\n      fromDefIndex,\r\n      ...stopDefIndices,\r\n      toDefIndex\r\n    ];\r\n\r\n    return stops.map((s, i) => [\r\n      stopDefIndices.indexOf(s) >= 0 ?\r\n        s :\r\n        null,\r\n\r\n      this.extractInput(\r\n        this.mapDefIndexToPos(s),\r\n        this.mapDefIndexToPos(stops[++i]))\r\n    ]).filter(([stop, input]) => stop != null || input);\r\n  }\r\n\r\n  _appendPlaceholder (toDefIndex) {\r\n    const maxDefIndex = toDefIndex || this._charDefs.length;\r\n    for (let di=this.mapPosToDefIndex(this.value.length); di < maxDefIndex; ++di) {\r\n      const def = this._charDefs[di];\r\n      if (def.isInput) def.isHollow = true;\r\n\r\n      if (this.placeholder.show === 'always' || toDefIndex) {\r\n        this._value += !def.isInput ?\r\n          def.char :\r\n          !def.optional ?\r\n            this.placeholder.char :\r\n            '';\r\n      }\r\n    }\r\n  }\r\n\r\n  clear (from=0, to=this.value.length) {\r\n    this._value = this.value.slice(0, from) + this.value.slice(to);\r\n    const fromDefIndex = this.mapPosToDefIndex(from);\r\n    const toDefIndex = this.mapPosToDefIndex(to);\r\n    this._charDefs\r\n      .slice(fromDefIndex, toDefIndex)\r\n      .forEach(d => d.reset());\r\n  }\r\n\r\n   nearestInputPos (cursorPos, direction=DIRECTION.LEFT) {\r\n    if (!direction) return cursorPos;\r\n\r\n    const initialDefIndex = this.mapPosToDefIndex(cursorPos);\r\n    let di = initialDefIndex;\r\n\r\n    let firstInputIndex,\r\n        firstFilledInputIndex,\r\n        firstVisibleHollowIndex,\r\n        nextdi;\r\n\r\n    // search forward\r\n    for (nextdi = indexInDirection(di, direction); 0 <= nextdi && nextdi < this._charDefs.length; di += direction, nextdi += direction) {\r\n      const nextDef = this._charDefs[nextdi];\r\n      if (firstInputIndex == null && nextDef.isInput) firstInputIndex = di;\r\n      if (firstVisibleHollowIndex == null && nextDef.isHollow && !nextDef.isHiddenHollow) firstVisibleHollowIndex = di;\r\n      if (nextDef.isInput && !nextDef.isHollow) {\r\n        firstFilledInputIndex = di;\r\n        break;\r\n      }\r\n    }\r\n\r\n    if (direction === DIRECTION.LEFT || firstInputIndex == null) {\r\n      // search backwards\r\n      direction = -direction;\r\n      let overflow = false;\r\n\r\n      // find hollows only before initial pos\r\n      for (nextdi = indexInDirection(di, direction);\r\n        0 <= nextdi && nextdi < this._charDefs.length;\r\n        di += direction, nextdi += direction)\r\n      {\r\n        const nextDef = this._charDefs[nextdi];\r\n        if (nextDef.isInput) {\r\n          firstInputIndex = di;\r\n          if (nextDef.isHollow && !nextDef.isHiddenHollow) break;\r\n        }\r\n\r\n        // if hollow not found before start position - set `overflow`\r\n        // and try to find just any input\r\n        if (di === initialDefIndex) overflow = true;\r\n\r\n        // first input found\r\n        if (overflow && firstInputIndex != null) break;\r\n      }\r\n\r\n      // process overflow\r\n      overflow = overflow || nextdi >= this._charDefs.length;\r\n      if (overflow && firstInputIndex != null) di = firstInputIndex;\r\n    } else if (firstFilledInputIndex == null) {\r\n      // adjust index if delete at right and filled input not found at right\r\n      di = firstVisibleHollowIndex != null ?\r\n        firstVisibleHollowIndex :\r\n        firstInputIndex;\r\n    }\r\n\r\n    return this.mapDefIndexToPos(di);\r\n  }\r\n}\r\n\r\nMaskedPattern.DEFAULT_PLACEHOLDER = {\r\n  show: 'lazy',\r\n  char: '_'\r\n};\r\nMaskedPattern.STOP_CHAR = '`';\r\nMaskedPattern.ESCAPE_CHAR = '\\\\';\r\nMaskedPattern.Definition = PatternDefinition;\r\n","import {escapeRegExp, refreshValueOnSet, DIRECTION, indexInDirection} from '../core/utils';\r\nimport Masked from './base';\r\n\r\n\r\nexport default\r\nclass MaskedNumber extends Masked {\r\n  constructor (opts) {\r\n    const {scale, radix, mapToRadix, min, max, signed, thousandsSeparator, postFormat} = {\r\n      ...MaskedNumber.DEFAULTS,\r\n      ...opts\r\n    };\r\n\r\n    super(opts);\r\n    delete this.isInitialized;\r\n\r\n    this.min = min;\r\n    this.max = max;\r\n    this.scale = scale;\r\n    this.radix = radix;\r\n    this.mapToRadix = mapToRadix;\r\n    this.signed = signed;\r\n    this.thousandsSeparator = thousandsSeparator;\r\n    this.postFormat = postFormat;\r\n\r\n    this._updateNumberRegExp();\r\n\r\n    this.isInitialized = true;\r\n  }\r\n\r\n  _updateNumberRegExp () {\r\n    // TODO refactor?\r\n    let regExpStrSoft = \"^\";\r\n    let regExpStr = \"^\";\r\n\r\n    if (this.signed) {\r\n      regExpStrSoft += \"([+|\\\\-]?|([+|\\\\-]?(0|([1-9]+\\\\d*))))\";\r\n      regExpStr += \"[+|\\\\-]?\";\r\n    } else {\r\n      regExpStrSoft += \"(0|([1-9]+\\\\d*))\";\r\n    }\r\n    regExpStr += \"\\\\d*\";\r\n\r\n    if (this.scale) {\r\n      regExpStrSoft += \"(\" + this.radix + \"\\\\d{0,\" + this.scale + \"})?\";\r\n      regExpStr += \"(\" + this.radix + \"\\\\d{0,\" + this.scale + \"})?\";\r\n    }\r\n\r\n    regExpStrSoft += \"$\";\r\n    regExpStr += \"$\";\r\n\r\n    this._numberRegExpSoft = new RegExp(regExpStrSoft);\r\n    this._numberRegExp = new RegExp(regExpStr)\r\n  }\r\n\r\n  _extractTail (fromPos=0, toPos=this.value.length) {\r\n    return this._removeThousandsSeparators(super._extractTail(fromPos, toPos));\r\n  }\r\n\r\n  _removeThousandsSeparators (value) {\r\n    return value.replace(this._thousandsSeparatorRegExp, '');\r\n  }\r\n\r\n  _insertThousandsSeparators (value) {\r\n    // https://stackoverflow.com/questions/2901102/how-to-print-a-number-with-commas-as-thousands-separators-in-javascript\r\n    const parts = value.split(this.radix);\r\n    parts[0] = parts[0].replace(/\\B(?=(\\d{3})+(?!\\d))/g, this.thousandsSeparator);\r\n    return parts.join(this.radix);\r\n  }\r\n\r\n  append (str, soft) {\r\n    return super.append(\r\n      this._removeThousandsSeparators(\r\n        str.replace(this._mapToRadixRegExp, this.radix)),\r\n      soft);\r\n  }\r\n\r\n  appendWithTail (str, tail) {\r\n    const oldValueLength = this.value.length;\r\n    this._value = this._removeThousandsSeparators(this.value);\r\n    let removedSeparatorsCount = oldValueLength - this.value.length;\r\n\r\n\r\n    const appended = super.appendWithTail(str, tail);\r\n\r\n\r\n    this._value = this._insertThousandsSeparators(this.value);\r\n\r\n    let beforeTailPos = oldValueLength + appended - removedSeparatorsCount;\r\n    this._value = this._insertThousandsSeparators(this.value);\r\n    let insertedSeparatorsBeforeTailCount = 0;\r\n    for (let pos = 0; pos <= beforeTailPos; ++pos) {\r\n      if (this.value[pos] === this.thousandsSeparator) {\r\n        ++insertedSeparatorsBeforeTailCount;\r\n        ++beforeTailPos;\r\n      }\r\n    }\r\n\r\n    return appended - removedSeparatorsCount + insertedSeparatorsBeforeTailCount;\r\n  }\r\n\r\n  nearestInputPos (cursorPos, direction=DIRECTION.LEFT) {\r\n    if (!direction) return cursorPos;\r\n\r\n    const nextPos = indexInDirection(cursorPos, direction);\r\n    if (this.value[nextPos] === this.thousandsSeparator) cursorPos += direction;\r\n    return cursorPos;\r\n  }\r\n\r\n  _validate (soft) {\r\n    const regexp = soft ? this._numberRegExpSoft : this._numberRegExp;\r\n\r\n    // validate as string\r\n    let valid = regexp.test(this._removeThousandsSeparators(this.value));\r\n\r\n    if (valid) {\r\n      // validate as number\r\n      const number = this.number;\r\n      valid = valid && !isNaN(number) &&\r\n        // check min bound for negative values\r\n        (this.min == null || this.min >= 0 || this.min <= this.number) &&\r\n        // check max bound for positive values\r\n        (this.max == null || this.max <= 0 || this.number <= this.max);\r\n    }\r\n\r\n    return valid;\r\n  }\r\n\r\n  commit () {\r\n    // value is already ok, just additional check\r\n    const number = this.number;\r\n    let validnum = number;\r\n\r\n    // check min bound\r\n    if (this.min != null) validnum = Math.max(validnum, this.min);\r\n    if (this.max != null) validnum = Math.min(validnum, this.max);\r\n\r\n    if (validnum !== number) {\r\n      this.unmaskedValue = '' + validnum;\r\n    }\r\n\r\n    let formatted = this.value;\r\n\r\n    if (this.postFormat.normalizeZeros) {\r\n      formatted = this._normalizeZeros(formatted);\r\n    }\r\n\r\n    if (this.postFormat.padFractionalZeros) {\r\n      formatted = this._padFractionalZeros(formatted);\r\n    }\r\n\r\n    this._value = formatted;\r\n  }\r\n\r\n  _normalizeZeros (value) {\r\n    const parts = this._removeThousandsSeparators(value).split(this.radix);\r\n\r\n    // remove leading zeros\r\n    parts[0] = parts[0].replace(/^(\\D*)(0*)(\\d*)/, (match, sign, zeros, num) => sign + num);\r\n\r\n    // add leading zero\r\n    if (parts[0].length && !/\\d$/.test(parts[0])) parts[0] = parts[0] + '0';\r\n\r\n    if (parts.length > 1) {\r\n      parts[1] = parts[1].replace(/0*$/, '');  // remove trailing zeros\r\n      if (!parts[1].length) parts.length = 1;  // remove fractional\r\n    }\r\n\r\n    return this._insertThousandsSeparators(parts.join(this.radix));\r\n  }\r\n\r\n  _padFractionalZeros (value) {\r\n    const parts = value.split(this.radix);\r\n    if (parts.length < 2) parts.push('');\r\n    // TODO str.padEnd does not got shimed\r\n    while (parts[1].length < this.scale) parts[1] = parts[1] += '0';\r\n    return parts.join(this.radix);\r\n  }\r\n\r\n  get number () {\r\n    let numstr =\r\n      this._removeThousandsSeparators(\r\n        this._normalizeZeros(\r\n          this.unmaskedValue))\r\n      .replace(this.radix, '.');\r\n\r\n    return Number(numstr);\r\n  }\r\n\r\n  set number (number) {\r\n    this.unmaskedValue = \"\" + number;\r\n  }\r\n\r\n  get min () {\r\n    return this._min;\r\n  }\r\n\r\n  @refreshValueOnSet\r\n  set min (min) {\r\n    this._min = min;\r\n  }\r\n\r\n  get max () {\r\n    return this._max;\r\n  }\r\n\r\n  @refreshValueOnSet\r\n  set max (max) {\r\n    this._max = max;\r\n  }\r\n\r\n  get scale () {\r\n    return this._scale;\r\n  }\r\n\r\n  @refreshValueOnSet\r\n  set scale (scale) {\r\n    this._scale = scale;\r\n  }\r\n\r\n  get radix () {\r\n    return this._radix;\r\n  }\r\n\r\n  @refreshValueOnSet\r\n  set radix (radix) {\r\n    this._radix = radix;\r\n    this._updateNumberRegExp();\r\n  }\r\n\r\n  get signed () {\r\n    return this._signed || (this.min != null && this.min < 0) || (this.max != null && this.max < 0);\r\n  }\r\n\r\n  @refreshValueOnSet\r\n  set signed (signed) {\r\n    this._signed = signed;\r\n  }\r\n\r\n  get postFormat () {\r\n    return this._postFormat;\r\n  }\r\n\r\n  @refreshValueOnSet\r\n  set postFormat (postFormat) {\r\n    this._postFormat = {\r\n      ...MaskedNumber.DEFAULTS.postFormat,\r\n      ...postFormat\r\n    };\r\n  }\r\n\r\n  get mapToRadix () {\r\n    return this._mapToRadix;\r\n  }\r\n\r\n  @refreshValueOnSet\r\n  set mapToRadix (mapToRadix) {\r\n    this._mapToRadix = mapToRadix;\r\n    this._mapToRadixRegExp = new RegExp(\"[\" +\r\n      mapToRadix.map(escapeRegExp).join(\"\") +\r\n    \"]\", \"g\");\r\n  }\r\n\r\n  get thousandsSeparator () {\r\n    return this._thousandsSeparator;\r\n  }\r\n\r\n  @refreshValueOnSet\r\n  set thousandsSeparator (thousandsSeparator) {\r\n    this._thousandsSeparator = thousandsSeparator;\r\n    this._thousandsSeparatorRegExp = new RegExp(escapeRegExp(thousandsSeparator), \"g\");\r\n  }\r\n}\r\nMaskedNumber.DEFAULTS = {\r\n  radix: ',',\r\n  thousandsSeparator: '',\r\n  mapToRadix: [',', '.'],\r\n  scale: 2,\r\n  postFormat: {\r\n    normalizeZeros: true,\r\n  }\r\n};\r\n","import {DIRECTION} from './utils';\r\n\r\n\r\nexport default\r\nclass ActionDetails {\r\n  constructor (value, cursorPos, oldValue, oldSelection) {\r\n    this.value = value;\r\n    this.cursorPos = cursorPos;\r\n    this.oldValue = oldValue;\r\n    this.oldSelection = oldSelection;\r\n  }\r\n\r\n  get startChangePos () {\r\n    return Math.min(this.cursorPos, this.oldSelection.start);\r\n  }\r\n\r\n  get insertedCount () {\r\n    return this.cursorPos - this.startChangePos;\r\n  }\r\n\r\n  get inserted () {\r\n    return this.value.substr(this.startChangePos, this.insertedCount);\r\n  }\r\n\r\n  get removedCount () {\r\n    // Math.max for opposite operation\r\n    return Math.max((this.oldSelection.end - this.startChangePos) ||\r\n      // for Delete\r\n      this.oldValue.length - this.value.length, 0);\r\n  }\r\n\r\n  get removed () {\r\n    return this.oldValue.substr(this.startChangePos, this.removedCount);\r\n  }\r\n\r\n  get head () {\r\n    return this.value.substring(0, this.startChangePos);\r\n  }\r\n\r\n  get tail () {\r\n    this.value.substring(this.startChangePos + this.insertedCount);\r\n  }\r\n\r\n  get removeDirection () {\r\n    return this.removedCount &&\r\n      ((this.oldSelection.end === this.cursorPos || this.insertedCount) ?\r\n        DIRECTION.RIGHT :\r\n        DIRECTION.LEFT);\r\n  }\r\n}\r\n","import ActionDetails from '../core/action-details';\r\nimport createMask from '../masked/factory';\r\n\r\n\r\nexport default\r\nclass InputMask {\r\n  constructor (el, opts) {\r\n    this.el = el;\r\n    this.masked = createMask(opts);\r\n\r\n    this._listeners = {};\r\n    this._value = '';\r\n    this._unmaskedValue = '';\r\n\r\n    this.saveSelection = this.saveSelection.bind(this);\r\n    this._onInput = this._onInput.bind(this);\r\n    this._onChange = this._onChange.bind(this);\r\n    this._onDrop = this._onDrop.bind(this);\r\n    this._alignCursor = this._alignCursor.bind(this);\r\n    this._alignCursorFriendly = this._alignCursorFriendly.bind(this);\r\n\r\n    this.bindEvents();\r\n\r\n    // refresh\r\n    this.updateValue();\r\n    this._onChange();\r\n  }\r\n\r\n  update (opts) {\r\n    const mask = opts.mask;\r\n    if (mask) this.mask = mask;\r\n\r\n    this.masked.withValueRefresh(() => {\r\n      for (const k in opts) {\r\n        if (k === 'mask') continue;\r\n        this.masked[k] = opts[k];\r\n      }\r\n    });\r\n\r\n    this.updateControl();\r\n  }\r\n\r\n  on (ev, handler) {\r\n    if (!this._listeners[ev]) this._listeners[ev] = [];\r\n    this._listeners[ev].push(handler);\r\n    return this;\r\n  }\r\n\r\n  off (ev, handler) {\r\n    if (!this._listeners[ev]) return;\r\n    if (!handler) {\r\n      delete this._listeners[ev];\r\n      return;\r\n    }\r\n    const hIndex = this._listeners[ev].indexOf(handler);\r\n    if (hIndex >= 0) this._listeners.splice(hIndex, 1);\r\n    return this;\r\n  }\r\n\r\n  get mask () { return this.masked.mask; }\r\n  set mask (mask) {\r\n    const unmasked = this.masked ? this.masked.unmaskedValue : null;\r\n    if (typeof mask === typeof this.masked.mask) this.masked.mask = mask;\r\n    this.masked = createMask(this.masked);\r\n    if (unmasked != null) this.masked.unmaskedValue = unmasked;\r\n  }\r\n\r\n  get value () {\r\n    return this._value;\r\n  }\r\n\r\n  set value (str) {\r\n    this.masked.value = str;\r\n    this.updateControl();\r\n    this._alignCursor();\r\n  }\r\n\r\n  bindEvents () {\r\n    this.el.addEventListener('keydown', this.saveSelection);\r\n    this.el.addEventListener('input', this._onInput);\r\n    this.el.addEventListener('drop', this._onDrop);\r\n    this.el.addEventListener('click', this._alignCursorFriendly);\r\n    this.el.addEventListener('change', this._onChange);\r\n  }\r\n\r\n  unbindEvents () {\r\n    this.el.removeEventListener('keydown', this.saveSelection);\r\n    this.el.removeEventListener('input', this._onInput);\r\n    this.el.removeEventListener('drop', this._onDrop);\r\n    this.el.removeEventListener('click', this._alignCursorFriendly);\r\n    this.el.removeEventListener('change', this._onChange);\r\n  }\r\n\r\n  fireEvent (ev) {\r\n    const listeners = this._listeners[ev] || [];\r\n    listeners.forEach(l => l());\r\n  }\r\n\r\n  get selectionStart () {\r\n    return this._cursorChanging ?\r\n      this._changingCursorPos :\r\n\r\n      this.el.selectionStart;\r\n  }\r\n\r\n  get cursorPos () {\r\n    return this._cursorChanging ?\r\n      this._changingCursorPos :\r\n\r\n      this.el.selectionEnd;\r\n  }\r\n\r\n  set cursorPos (pos) {\r\n    if (this.el !== document.activeElement) return;\r\n\r\n    this.el.setSelectionRange(pos, pos);\r\n    this.saveSelection();\r\n  }\r\n\r\n  saveSelection (/* ev */) {\r\n    if (this.value !== this.el.value) {\r\n      console.warn('Uncontrolled input change, refresh mask manually!'); // eslint-disable-line no-console\r\n    }\r\n    this._selection = {\r\n      start: this.selectionStart,\r\n      end: this.cursorPos\r\n    };\r\n  }\r\n\r\n  destroy () {\r\n    this.unbindEvents();\r\n    this._listeners.length = 0;\r\n  }\r\n\r\n  get unmaskedValue () {\r\n    return this._unmaskedValue;\r\n  }\r\n\r\n  set unmaskedValue (str) {\r\n    this.masked.unmaskedValue = str;\r\n    this.updateControl();\r\n    this._alignCursor();\r\n  }\r\n\r\n  updateControl () {\r\n    const newUnmaskedValue = this.masked.unmaskedValue;\r\n    const newValue = this.masked.value;\r\n    const isChanged = (this.unmaskedValue !== newUnmaskedValue ||\r\n      this.value !== newValue);\r\n\r\n    this._unmaskedValue = newUnmaskedValue;\r\n    this._value = newValue;\r\n\r\n    if (this.el.value !== newValue) this.el.value = newValue;\r\n    if (isChanged) this._fireChangeEvents();\r\n  }\r\n\r\n  _fireChangeEvents () {\r\n    this.fireEvent('accept');\r\n    if (this.masked.isComplete) this.fireEvent('complete');\r\n  }\r\n\r\n  updateCursor (cursorPos) {\r\n    if (cursorPos == null) return;\r\n    this.cursorPos = cursorPos;\r\n\r\n    // also queue change cursor for mobile browsers\r\n    this._delayUpdateCursor(cursorPos);\r\n  }\r\n\r\n  _delayUpdateCursor (cursorPos) {\r\n    this._abortUpdateCursor();\r\n    this._changingCursorPos = cursorPos;\r\n    this._cursorChanging = setTimeout(() => {\r\n      this.cursorPos = this._changingCursorPos;\r\n      this._abortUpdateCursor();\r\n    }, 10);\r\n  }\r\n\r\n  _abortUpdateCursor () {\r\n    if (this._cursorChanging) {\r\n      clearTimeout(this._cursorChanging);\r\n      delete this._cursorChanging;\r\n    }\r\n  }\r\n\r\n  _alignCursor () {\r\n    this.cursorPos = this.masked.nearestInputPos(this.cursorPos);\r\n  }\r\n\r\n  _alignCursorFriendly () {\r\n    if (this.selectionStart !== this.cursorPos) return;\r\n    this._alignCursor();\r\n  }\r\n\r\n  _onInput () {\r\n    this._abortUpdateCursor();\r\n\r\n    const details = new ActionDetails(\r\n      // new state\r\n      this.el.value, this.cursorPos,\r\n      // old state\r\n      this.value, this._selection);\r\n\r\n    // const insertedCount = this.masked.splice(\r\n    //   this.masked.nearestInputPos(details.startChangePos, details.removeDirection),\r\n    //   details.removed.length,\r\n    //   details.inserted);\r\n\r\n\r\n    const tailPos = details.startChangePos + details.removed.length;\r\n    const tail = this.masked._extractTail(tailPos);\r\n\r\n    const lastInputPos = this.masked.nearestInputPos(details.startChangePos, details.removeDirection);\r\n    this.masked.clear(lastInputPos);\r\n    const insertedCount = this.masked.appendWithTail(details.inserted, tail);\r\n\r\n\r\n    const cursorPos = this.masked.nearestInputPos(\r\n      lastInputPos + insertedCount,\r\n      details.removeDirection);\r\n\r\n    this.updateControl();\r\n    this.updateCursor(cursorPos);\r\n  }\r\n\r\n  updateValue () {\r\n    this.masked.value = this.el.value;\r\n  }\r\n\r\n  _onChange () {\r\n    if (this.value !== this.el.value) {\r\n      this.updateValue();\r\n    }\r\n    this.masked.commit();\r\n    this.updateControl();\r\n  }\r\n\r\n  _onDrop (ev) {\r\n    ev.preventDefault();\r\n    ev.stopPropagation();\r\n  }\r\n}\r\n","import Masked from './masked/base';\r\nimport MaskedPattern from './masked/pattern';\r\nimport MaskedNumber from './masked/number';\r\n\r\nimport InputMask from './controls/input';\r\n\r\n\r\nexport default\r\nfunction IMask (el, opts={}) {\r\n\t// currently available only for input elements\r\n  return new InputMask(el, opts);\r\n}\r\n\r\n\r\nIMask.InputMask = InputMask;\r\n\r\nIMask.Masked = Masked;\r\nIMask.MaskedPattern = MaskedPattern;\r\nIMask.MaskedNumber = MaskedNumber;\r\n\r\nwindow.IMask = IMask;\r\n"],"names":["isString","str","String","conform","res","fallback","DIRECTION","indexInDirection","pos","direction","LEFT","refreshValueOnSet","target","key","descriptor","method","set","args","withValueRefresh","bind","escapeRegExp","replace","Masked","mask","validate","_value","isInitialized","_validate","soft","clone","m","value","slice","reset","nearestInputPos","cursorPos","extractInput","fromPos","toPos","length","_extractTail","_appendTail","tail","append","oldValueLength","consistentValue","ci","appendWithTail","appendCount","consistentAppended","ch","appended","tailAppended","_unmask","clear","from","to","fn","_refreshing","unmasked","unmaskedValue","ret","commit","_mask","createMask","opts","RegExp","masked","test","MaskedPattern","prototype","Function","PatternDefinition","_masked","isHollow","resolve","type","TYPES","INPUT","optional","DEFAULTS","definitions","placeholder","_updateMask","defs","_definitions","_charDefs","pattern","unmaskingBlock","optionalBlock","stopAlign","char","i","FIXED","unmasking","STOP_CHAR","ESCAPE_CHAR","push","forEach","d","babelHelpers.extends","hiddenHollowsBefore","defIndex","filter","isHiddenHollow","mapDefIndexToPos","mapPosToDefIndex","di","def","appendChunks","_appendPlaceholder","resolved","skipped","chres","chunks","fromDefIndex","input","extractInputChunks","toDefIndex","isInput","stopDefIndices","map","stops","s","indexOf","stop","maxDefIndex","show","initialDefIndex","firstInputIndex","firstFilledInputIndex","firstVisibleHollowIndex","nextdi","nextDef","overflow","_placeholder","ph","DEFAULT_PLACEHOLDER","some","Definition","MaskedNumber","scale","radix","mapToRadix","min","max","signed","thousandsSeparator","postFormat","_updateNumberRegExp","regExpStrSoft","regExpStr","_numberRegExpSoft","_numberRegExp","_removeThousandsSeparators","_thousandsSeparatorRegExp","_insertThousandsSeparators","parts","split","join","_mapToRadixRegExp","removedSeparatorsCount","beforeTailPos","insertedSeparatorsBeforeTailCount","nextPos","regexp","valid","number","isNaN","validnum","Math","formatted","normalizeZeros","_normalizeZeros","padFractionalZeros","_padFractionalZeros","match","sign","zeros","num","numstr","Number","_min","_max","_scale","_radix","_signed","_postFormat","_mapToRadix","_thousandsSeparator","ActionDetails","oldValue","oldSelection","start","startChangePos","substr","insertedCount","end","removedCount","substring","RIGHT","InputMask","el","_listeners","_unmaskedValue","saveSelection","_onInput","_onChange","_onDrop","_alignCursor","_alignCursorFriendly","bindEvents","updateValue","update","k","updateControl","on","ev","handler","off","hIndex","splice","addEventListener","unbindEvents","removeEventListener","fireEvent","listeners","l","warn","_selection","selectionStart","destroy","newUnmaskedValue","newValue","isChanged","_fireChangeEvents","isComplete","updateCursor","_delayUpdateCursor","_abortUpdateCursor","_changingCursorPos","_cursorChanging","setTimeout","details","tailPos","removed","lastInputPos","removeDirection","inserted","preventDefault","stopPropagation","selectionEnd","document","activeElement","setSelectionRange","IMask","window"],"mappings":"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"}