{"version":3,"file":"imask.min.js","sources":["../src/core/utils.js","../src/masked/factory.js","../src/imask.js","../node_modules/core-js/modules/_global.js","../node_modules/core-js/modules/_core.js","../node_modules/core-js/modules/_is-object.js","../node_modules/core-js/modules/_an-object.js","../node_modules/core-js/modules/_fails.js","../node_modules/core-js/modules/_descriptors.js","../node_modules/core-js/modules/_dom-create.js","../node_modules/core-js/modules/_ie8-dom-define.js","../node_modules/core-js/modules/_to-primitive.js","../node_modules/core-js/modules/_object-dp.js","../node_modules/core-js/modules/_property-desc.js","../node_modules/core-js/modules/_hide.js","../node_modules/core-js/modules/_has.js","../node_modules/core-js/modules/_uid.js","../node_modules/core-js/modules/_redefine.js","../node_modules/core-js/modules/_a-function.js","../node_modules/core-js/modules/_ctx.js","../node_modules/core-js/modules/_export.js","../node_modules/core-js/modules/_cof.js","../node_modules/core-js/modules/_iobject.js","../node_modules/core-js/modules/_defined.js","../node_modules/core-js/modules/_to-object.js","../node_modules/core-js/modules/_to-integer.js","../node_modules/core-js/modules/_to-length.js","../node_modules/core-js/modules/_is-array.js","../node_modules/core-js/modules/_shared.js","../node_modules/core-js/modules/_wks.js","../node_modules/core-js/modules/_array-species-constructor.js","../node_modules/core-js/modules/_array-species-create.js","../node_modules/core-js/modules/_add-to-unscopables.js","../node_modules/core-js/modules/es6.array.find.js","../node_modules/core-js/modules/_array-methods.js","../node_modules/core-js/modules/_to-iobject.js","../node_modules/core-js/modules/_to-index.js","../node_modules/core-js/modules/_shared-key.js","../node_modules/core-js/modules/_object-keys-internal.js","../node_modules/core-js/modules/_array-includes.js","../node_modules/core-js/modules/_enum-bug-keys.js","../node_modules/core-js/modules/_object-keys.js","../node_modules/core-js/modules/_object-sap.js","../node_modules/core-js/modules/es6.object.keys.js","../node_modules/core-js/modules/_string-repeat.js","../node_modules/core-js/modules/es6.string.repeat.js","../node_modules/core-js/modules/_string-pad.js","../node_modules/core-js/modules/es7.string.pad-start.js","../node_modules/core-js/modules/es7.string.pad-end.js","../src/masked/base.js","../src/masked/pattern/definition.js","../src/masked/pattern/group.js","../src/masked/pattern.js","../src/masked/number.js","../src/masked/date.js","../src/core/action-details.js","../src/controls/input.js"],"sourcesContent":["export\r\nfunction isString (str) {\r\n  return typeof str === 'string' || str instanceof String;\r\n}\r\n\r\nexport\r\nfunction conform (res, str, fallback='') {\r\n  return isString(res) ?\r\n    res :\r\n    res ?\r\n      str :\r\n      fallback;\r\n}\r\n\r\nexport\r\nconst DIRECTION = {\r\n  NONE: 0,\r\n  LEFT: -1,\r\n  RIGHT: 1\r\n}\r\n\r\nexport\r\nfunction indexInDirection (pos, direction) {\r\n  if (direction === DIRECTION.LEFT) --pos;\r\n  return pos;\r\n}\r\n\r\nexport\r\nfunction refreshValueOnSet (target, key, descriptor) {\r\n  const method = descriptor.set;\r\n  descriptor.set = function (...args) {\r\n    return this.withValueRefresh(method.bind(this, ...args));\r\n  };\r\n}\r\n\r\nexport\r\nfunction escapeRegExp(str) {\r\n  return str.replace(/([.*+?^=!:${}()|\\[\\]\\/\\\\])/g, '\\\\$1');\r\n}\r\n","import {isString} from '../core/utils';\r\n\r\n\r\nexport default\r\nfunction createMask (opts) {\r\n  const mask = opts.mask;\r\n\r\n  if (mask instanceof IMask.Masked) {\r\n    return mask;\r\n  }\r\n  if (mask instanceof RegExp) {\r\n    return new IMask.Masked({\r\n      ...opts,\r\n      validate: (value) => mask.test(value)\r\n    });\r\n  }\r\n  if (isString(mask)) {\r\n    return new IMask.MaskedPattern(opts);\r\n  }\r\n  if (mask.prototype instanceof IMask.Masked) {\r\n    delete opts.mask;\r\n    return new mask(opts);\r\n  }\r\n  if (mask instanceof Number || typeof mask === 'number' || mask === Number) {\r\n    delete opts.mask;\r\n    return new IMask.MaskedNumber(opts);\r\n  }\r\n  if (mask instanceof Date || mask === Date) {\r\n    delete opts.mask;\r\n    if (opts.pattern) {\r\n      opts.mask = opts.pattern;\r\n      delete opts.pattern;\r\n    }\r\n    return new IMask.MaskedDate(opts);\r\n  }\r\n  if (mask instanceof Function){\r\n    return new IMask.Masked({\r\n      ...opts,\r\n      validate: mask\r\n    });\r\n  }\r\n\r\n  console.warn('Mask not found for', opts);  // eslint-disable-line no-console\r\n  return new IMask.Masked(opts);\r\n}\r\n","import 'core-js/fn/array/find';\r\nimport 'core-js/fn/object/keys';\r\nimport 'core-js/fn/string/repeat';\r\nimport 'core-js/fn/string/pad-start';\r\nimport 'core-js/fn/string/pad-end';\r\n\r\n\r\nimport Masked from './masked/base';\r\nimport MaskedPattern from './masked/pattern';\r\nimport MaskedNumber from './masked/number';\r\nimport MaskedDate from './masked/date';\r\n\r\nimport InputMask from './controls/input';\r\n\r\n\r\nexport default\r\nfunction IMask (el, opts={}) {\r\n\t// currently available only for input elements\r\n  return new InputMask(el, opts);\r\n}\r\n\r\n\r\nIMask.InputMask = InputMask;\r\n\r\nIMask.Masked = Masked;\r\nIMask.MaskedPattern = MaskedPattern;\r\nIMask.MaskedNumber = MaskedNumber;\r\nIMask.MaskedDate = MaskedDate;\r\n\r\nwindow.IMask = IMask;\r\n","// https://github.com/zloirock/core-js/issues/86#issuecomment-115759028\nvar global = module.exports = typeof window != 'undefined' && window.Math == Math\n  ? window : typeof self != 'undefined' && self.Math == Math ? self : Function('return this')();\nif(typeof __g == 'number')__g = global; // eslint-disable-line no-undef","var core = module.exports = {version: '2.4.0'};\nif(typeof __e == 'number')__e = core; // eslint-disable-line no-undef","module.exports = function(it){\n  return typeof it === 'object' ? it !== null : typeof it === 'function';\n};","var isObject = require('./_is-object');\nmodule.exports = function(it){\n  if(!isObject(it))throw TypeError(it + ' is not an object!');\n  return it;\n};","module.exports = function(exec){\n  try {\n    return !!exec();\n  } catch(e){\n    return true;\n  }\n};","// Thank's IE8 for his funny defineProperty\nmodule.exports = !require('./_fails')(function(){\n  return Object.defineProperty({}, 'a', {get: function(){ return 7; }}).a != 7;\n});","var isObject = require('./_is-object')\n  , document = require('./_global').document\n  // in old IE typeof document.createElement is 'object'\n  , is = isObject(document) && isObject(document.createElement);\nmodule.exports = function(it){\n  return is ? document.createElement(it) : {};\n};","module.exports = !require('./_descriptors') && !require('./_fails')(function(){\n  return Object.defineProperty(require('./_dom-create')('div'), 'a', {get: function(){ return 7; }}).a != 7;\n});","// 7.1.1 ToPrimitive(input [, PreferredType])\nvar isObject = require('./_is-object');\n// instead of the ES6 spec version, we didn't implement @@toPrimitive case\n// and the second argument - flag - preferred type is a string\nmodule.exports = function(it, S){\n  if(!isObject(it))return it;\n  var fn, val;\n  if(S && typeof (fn = it.toString) == 'function' && !isObject(val = fn.call(it)))return val;\n  if(typeof (fn = it.valueOf) == 'function' && !isObject(val = fn.call(it)))return val;\n  if(!S && typeof (fn = it.toString) == 'function' && !isObject(val = fn.call(it)))return val;\n  throw TypeError(\"Can't convert object to primitive value\");\n};","var anObject       = require('./_an-object')\n  , IE8_DOM_DEFINE = require('./_ie8-dom-define')\n  , toPrimitive    = require('./_to-primitive')\n  , dP             = Object.defineProperty;\n\nexports.f = require('./_descriptors') ? Object.defineProperty : function defineProperty(O, P, Attributes){\n  anObject(O);\n  P = toPrimitive(P, true);\n  anObject(Attributes);\n  if(IE8_DOM_DEFINE)try {\n    return dP(O, P, Attributes);\n  } catch(e){ /* empty */ }\n  if('get' in Attributes || 'set' in Attributes)throw TypeError('Accessors not supported!');\n  if('value' in Attributes)O[P] = Attributes.value;\n  return O;\n};","module.exports = function(bitmap, value){\n  return {\n    enumerable  : !(bitmap & 1),\n    configurable: !(bitmap & 2),\n    writable    : !(bitmap & 4),\n    value       : value\n  };\n};","var dP         = require('./_object-dp')\n  , createDesc = require('./_property-desc');\nmodule.exports = require('./_descriptors') ? function(object, key, value){\n  return dP.f(object, key, createDesc(1, value));\n} : function(object, key, value){\n  object[key] = value;\n  return object;\n};","var hasOwnProperty = {}.hasOwnProperty;\nmodule.exports = function(it, key){\n  return hasOwnProperty.call(it, key);\n};","var id = 0\n  , px = Math.random();\nmodule.exports = function(key){\n  return 'Symbol('.concat(key === undefined ? '' : key, ')_', (++id + px).toString(36));\n};","var global    = require('./_global')\n  , hide      = require('./_hide')\n  , has       = require('./_has')\n  , SRC       = require('./_uid')('src')\n  , TO_STRING = 'toString'\n  , $toString = Function[TO_STRING]\n  , TPL       = ('' + $toString).split(TO_STRING);\n\nrequire('./_core').inspectSource = function(it){\n  return $toString.call(it);\n};\n\n(module.exports = function(O, key, val, safe){\n  var isFunction = typeof val == 'function';\n  if(isFunction)has(val, 'name') || hide(val, 'name', key);\n  if(O[key] === val)return;\n  if(isFunction)has(val, SRC) || hide(val, SRC, O[key] ? '' + O[key] : TPL.join(String(key)));\n  if(O === global){\n    O[key] = val;\n  } else {\n    if(!safe){\n      delete O[key];\n      hide(O, key, val);\n    } else {\n      if(O[key])O[key] = val;\n      else hide(O, key, val);\n    }\n  }\n// add fake Function#toString for correct work wrapped methods / constructors with methods like LoDash isNative\n})(Function.prototype, TO_STRING, function toString(){\n  return typeof this == 'function' && this[SRC] || $toString.call(this);\n});","module.exports = function(it){\n  if(typeof it != 'function')throw TypeError(it + ' is not a function!');\n  return it;\n};","// optional / simple context binding\nvar aFunction = require('./_a-function');\nmodule.exports = function(fn, that, length){\n  aFunction(fn);\n  if(that === undefined)return fn;\n  switch(length){\n    case 1: return function(a){\n      return fn.call(that, a);\n    };\n    case 2: return function(a, b){\n      return fn.call(that, a, b);\n    };\n    case 3: return function(a, b, c){\n      return fn.call(that, a, b, c);\n    };\n  }\n  return function(/* ...args */){\n    return fn.apply(that, arguments);\n  };\n};","var global    = require('./_global')\n  , core      = require('./_core')\n  , hide      = require('./_hide')\n  , redefine  = require('./_redefine')\n  , ctx       = require('./_ctx')\n  , PROTOTYPE = 'prototype';\n\nvar $export = function(type, name, source){\n  var IS_FORCED = type & $export.F\n    , IS_GLOBAL = type & $export.G\n    , IS_STATIC = type & $export.S\n    , IS_PROTO  = type & $export.P\n    , IS_BIND   = type & $export.B\n    , target    = IS_GLOBAL ? global : IS_STATIC ? global[name] || (global[name] = {}) : (global[name] || {})[PROTOTYPE]\n    , exports   = IS_GLOBAL ? core : core[name] || (core[name] = {})\n    , expProto  = exports[PROTOTYPE] || (exports[PROTOTYPE] = {})\n    , key, own, out, exp;\n  if(IS_GLOBAL)source = name;\n  for(key in source){\n    // contains in native\n    own = !IS_FORCED && target && target[key] !== undefined;\n    // export native or passed\n    out = (own ? target : source)[key];\n    // bind timers to global for call from export context\n    exp = IS_BIND && own ? ctx(out, global) : IS_PROTO && typeof out == 'function' ? ctx(Function.call, out) : out;\n    // extend global\n    if(target)redefine(target, key, out, type & $export.U);\n    // export\n    if(exports[key] != out)hide(exports, key, exp);\n    if(IS_PROTO && expProto[key] != out)expProto[key] = out;\n  }\n};\nglobal.core = core;\n// type bitmap\n$export.F = 1;   // forced\n$export.G = 2;   // global\n$export.S = 4;   // static\n$export.P = 8;   // proto\n$export.B = 16;  // bind\n$export.W = 32;  // wrap\n$export.U = 64;  // safe\n$export.R = 128; // real proto method for `library` \nmodule.exports = $export;","var toString = {}.toString;\n\nmodule.exports = function(it){\n  return toString.call(it).slice(8, -1);\n};","// fallback for non-array-like ES3 and non-enumerable old V8 strings\nvar cof = require('./_cof');\nmodule.exports = Object('z').propertyIsEnumerable(0) ? Object : function(it){\n  return cof(it) == 'String' ? it.split('') : Object(it);\n};","// 7.2.1 RequireObjectCoercible(argument)\nmodule.exports = function(it){\n  if(it == undefined)throw TypeError(\"Can't call method on  \" + it);\n  return it;\n};","// 7.1.13 ToObject(argument)\nvar defined = require('./_defined');\nmodule.exports = function(it){\n  return Object(defined(it));\n};","// 7.1.4 ToInteger\nvar ceil  = Math.ceil\n  , floor = Math.floor;\nmodule.exports = function(it){\n  return isNaN(it = +it) ? 0 : (it > 0 ? floor : ceil)(it);\n};","// 7.1.15 ToLength\nvar toInteger = require('./_to-integer')\n  , min       = Math.min;\nmodule.exports = function(it){\n  return it > 0 ? min(toInteger(it), 0x1fffffffffffff) : 0; // pow(2, 53) - 1 == 9007199254740991\n};","// 7.2.2 IsArray(argument)\nvar cof = require('./_cof');\nmodule.exports = Array.isArray || function isArray(arg){\n  return cof(arg) == 'Array';\n};","var global = require('./_global')\n  , SHARED = '__core-js_shared__'\n  , store  = global[SHARED] || (global[SHARED] = {});\nmodule.exports = function(key){\n  return store[key] || (store[key] = {});\n};","var store      = require('./_shared')('wks')\n  , uid        = require('./_uid')\n  , Symbol     = require('./_global').Symbol\n  , USE_SYMBOL = typeof Symbol == 'function';\n\nvar $exports = module.exports = function(name){\n  return store[name] || (store[name] =\n    USE_SYMBOL && Symbol[name] || (USE_SYMBOL ? Symbol : uid)('Symbol.' + name));\n};\n\n$exports.store = store;","var isObject = require('./_is-object')\n  , isArray  = require('./_is-array')\n  , SPECIES  = require('./_wks')('species');\n\nmodule.exports = function(original){\n  var C;\n  if(isArray(original)){\n    C = original.constructor;\n    // cross-realm fallback\n    if(typeof C == 'function' && (C === Array || isArray(C.prototype)))C = undefined;\n    if(isObject(C)){\n      C = C[SPECIES];\n      if(C === null)C = undefined;\n    }\n  } return C === undefined ? Array : C;\n};","// 9.4.2.3 ArraySpeciesCreate(originalArray, length)\nvar speciesConstructor = require('./_array-species-constructor');\n\nmodule.exports = function(original, length){\n  return new (speciesConstructor(original))(length);\n};","// 22.1.3.31 Array.prototype[@@unscopables]\nvar UNSCOPABLES = require('./_wks')('unscopables')\n  , ArrayProto  = Array.prototype;\nif(ArrayProto[UNSCOPABLES] == undefined)require('./_hide')(ArrayProto, UNSCOPABLES, {});\nmodule.exports = function(key){\n  ArrayProto[UNSCOPABLES][key] = true;\n};","'use strict';\n// 22.1.3.8 Array.prototype.find(predicate, thisArg = undefined)\nvar $export = require('./_export')\n  , $find   = require('./_array-methods')(5)\n  , KEY     = 'find'\n  , forced  = true;\n// Shouldn't skip holes\nif(KEY in [])Array(1)[KEY](function(){ forced = false; });\n$export($export.P + $export.F * forced, 'Array', {\n  find: function find(callbackfn/*, that = undefined */){\n    return $find(this, callbackfn, arguments.length > 1 ? arguments[1] : undefined);\n  }\n});\nrequire('./_add-to-unscopables')(KEY);","// 0 -> Array#forEach\n// 1 -> Array#map\n// 2 -> Array#filter\n// 3 -> Array#some\n// 4 -> Array#every\n// 5 -> Array#find\n// 6 -> Array#findIndex\nvar ctx      = require('./_ctx')\n  , IObject  = require('./_iobject')\n  , toObject = require('./_to-object')\n  , toLength = require('./_to-length')\n  , asc      = require('./_array-species-create');\nmodule.exports = function(TYPE, $create){\n  var IS_MAP        = TYPE == 1\n    , IS_FILTER     = TYPE == 2\n    , IS_SOME       = TYPE == 3\n    , IS_EVERY      = TYPE == 4\n    , IS_FIND_INDEX = TYPE == 6\n    , NO_HOLES      = TYPE == 5 || IS_FIND_INDEX\n    , create        = $create || asc;\n  return function($this, callbackfn, that){\n    var O      = toObject($this)\n      , self   = IObject(O)\n      , f      = ctx(callbackfn, that, 3)\n      , length = toLength(self.length)\n      , index  = 0\n      , result = IS_MAP ? create($this, length) : IS_FILTER ? create($this, 0) : undefined\n      , val, res;\n    for(;length > index; index++)if(NO_HOLES || index in self){\n      val = self[index];\n      res = f(val, index, O);\n      if(TYPE){\n        if(IS_MAP)result[index] = res;            // map\n        else if(res)switch(TYPE){\n          case 3: return true;                    // some\n          case 5: return val;                     // find\n          case 6: return index;                   // findIndex\n          case 2: result.push(val);               // filter\n        } else if(IS_EVERY)return false;          // every\n      }\n    }\n    return IS_FIND_INDEX ? -1 : IS_SOME || IS_EVERY ? IS_EVERY : result;\n  };\n};","// to indexed object, toObject with fallback for non-array-like ES3 strings\nvar IObject = require('./_iobject')\n  , defined = require('./_defined');\nmodule.exports = function(it){\n  return IObject(defined(it));\n};","var toInteger = require('./_to-integer')\n  , max       = Math.max\n  , min       = Math.min;\nmodule.exports = function(index, length){\n  index = toInteger(index);\n  return index < 0 ? max(index + length, 0) : min(index, length);\n};","var shared = require('./_shared')('keys')\n  , uid    = require('./_uid');\nmodule.exports = function(key){\n  return shared[key] || (shared[key] = uid(key));\n};","var has          = require('./_has')\n  , toIObject    = require('./_to-iobject')\n  , arrayIndexOf = require('./_array-includes')(false)\n  , IE_PROTO     = require('./_shared-key')('IE_PROTO');\n\nmodule.exports = function(object, names){\n  var O      = toIObject(object)\n    , i      = 0\n    , result = []\n    , key;\n  for(key in O)if(key != IE_PROTO)has(O, key) && result.push(key);\n  // Don't enum bug & hidden keys\n  while(names.length > i)if(has(O, key = names[i++])){\n    ~arrayIndexOf(result, key) || result.push(key);\n  }\n  return result;\n};","// false -> Array#indexOf\n// true  -> Array#includes\nvar toIObject = require('./_to-iobject')\n  , toLength  = require('./_to-length')\n  , toIndex   = require('./_to-index');\nmodule.exports = function(IS_INCLUDES){\n  return function($this, el, fromIndex){\n    var O      = toIObject($this)\n      , length = toLength(O.length)\n      , index  = toIndex(fromIndex, length)\n      , value;\n    // Array#includes uses SameValueZero equality algorithm\n    if(IS_INCLUDES && el != el)while(length > index){\n      value = O[index++];\n      if(value != value)return true;\n    // Array#toIndex ignores holes, Array#includes - not\n    } else for(;length > index; index++)if(IS_INCLUDES || index in O){\n      if(O[index] === el)return IS_INCLUDES || index || 0;\n    } return !IS_INCLUDES && -1;\n  };\n};","// IE 8- don't enum bug keys\nmodule.exports = (\n  'constructor,hasOwnProperty,isPrototypeOf,propertyIsEnumerable,toLocaleString,toString,valueOf'\n).split(',');","// 19.1.2.14 / 15.2.3.14 Object.keys(O)\nvar $keys       = require('./_object-keys-internal')\n  , enumBugKeys = require('./_enum-bug-keys');\n\nmodule.exports = Object.keys || function keys(O){\n  return $keys(O, enumBugKeys);\n};","// most Object methods by ES6 should accept primitives\nvar $export = require('./_export')\n  , core    = require('./_core')\n  , fails   = require('./_fails');\nmodule.exports = function(KEY, exec){\n  var fn  = (core.Object || {})[KEY] || Object[KEY]\n    , exp = {};\n  exp[KEY] = exec(fn);\n  $export($export.S + $export.F * fails(function(){ fn(1); }), 'Object', exp);\n};","// 19.1.2.14 Object.keys(O)\nvar toObject = require('./_to-object')\n  , $keys    = require('./_object-keys');\n\nrequire('./_object-sap')('keys', function(){\n  return function keys(it){\n    return $keys(toObject(it));\n  };\n});","'use strict';\nvar toInteger = require('./_to-integer')\n  , defined   = require('./_defined');\n\nmodule.exports = function repeat(count){\n  var str = String(defined(this))\n    , res = ''\n    , n   = toInteger(count);\n  if(n < 0 || n == Infinity)throw RangeError(\"Count can't be negative\");\n  for(;n > 0; (n >>>= 1) && (str += str))if(n & 1)res += str;\n  return res;\n};","var $export = require('./_export');\n\n$export($export.P, 'String', {\n  // 21.1.3.13 String.prototype.repeat(count)\n  repeat: require('./_string-repeat')\n});","// https://github.com/tc39/proposal-string-pad-start-end\nvar toLength = require('./_to-length')\n  , repeat   = require('./_string-repeat')\n  , defined  = require('./_defined');\n\nmodule.exports = function(that, maxLength, fillString, left){\n  var S            = String(defined(that))\n    , stringLength = S.length\n    , fillStr      = fillString === undefined ? ' ' : String(fillString)\n    , intMaxLength = toLength(maxLength);\n  if(intMaxLength <= stringLength || fillStr == '')return S;\n  var fillLen = intMaxLength - stringLength\n    , stringFiller = repeat.call(fillStr, Math.ceil(fillLen / fillStr.length));\n  if(stringFiller.length > fillLen)stringFiller = stringFiller.slice(0, fillLen);\n  return left ? stringFiller + S : S + stringFiller;\n};\n","'use strict';\n// https://github.com/tc39/proposal-string-pad-start-end\nvar $export = require('./_export')\n  , $pad    = require('./_string-pad');\n\n$export($export.P, 'String', {\n  padStart: function padStart(maxLength /*, fillString = ' ' */){\n    return $pad(this, maxLength, arguments.length > 1 ? arguments[1] : undefined, true);\n  }\n});","'use strict';\n// https://github.com/tc39/proposal-string-pad-start-end\nvar $export = require('./_export')\n  , $pad    = require('./_string-pad');\n\n$export($export.P, 'String', {\n  padEnd: function padEnd(maxLength /*, fillString = ' ' */){\n    return $pad(this, maxLength, arguments.length > 1 ? arguments[1] : undefined, false);\n  }\n});","import {refreshValueOnSet} from '../core/utils';\r\n\r\n\r\nexport default\r\nclass Masked {\r\n  constructor ({mask, validate}) {\r\n    this._value = '';\r\n    this.mask = mask;\r\n    this.validate = validate || (() => true);\r\n    this.isInitialized = true;\r\n  }\r\n\r\n  get mask () {\r\n    return this._mask;\r\n  }\r\n\r\n  @refreshValueOnSet\r\n  set mask (mask) {\r\n    this._mask = mask;\r\n  }\r\n\r\n  _validate (soft) {\r\n    return this.validate(this.value, this, soft);\r\n  }\r\n\r\n  clone () {\r\n    const m = new Masked(this);\r\n    m._value = this.value.slice();\r\n    return m;\r\n  }\r\n\r\n  reset () {\r\n    this._value = '';\r\n  }\r\n\r\n  get value () {\r\n    return this._value;\r\n  }\r\n\r\n  set value (value) {\r\n    this.reset();\r\n    this._append(value, true);\r\n    this._appendTail();\r\n  }\r\n\r\n  get unmaskedValue () {\r\n    return this._unmask();\r\n  }\r\n\r\n  set unmaskedValue (value) {\r\n    this.reset();\r\n    this._append(value);\r\n    this._appendTail();\r\n  }\r\n\r\n  get isComplete () {\r\n    return true;\r\n  }\r\n\r\n  nearestInputPos (cursorPos, /* direction */) {\r\n    return cursorPos;\r\n  }\r\n\r\n  extractInput (fromPos=0, toPos=this.value.length) {\r\n    return this.value.slice(fromPos, toPos);\r\n  }\r\n\r\n  extractTail (fromPos=0, toPos=this.value.length) {\r\n    return this.extractInput(fromPos, toPos);\r\n  }\r\n\r\n  _appendTail (tail) {\r\n    return !tail || this._append(tail);\r\n  }\r\n\r\n  _append (str, soft) {\r\n    const oldValueLength = this.value.length;\r\n    let consistentValue = this.clone();\r\n\r\n    for (let ci=0; ci<str.length; ++ci) {\r\n      this._value += str[ci];\r\n      if (this._validate(soft) === false) {\r\n        Object.assign(this, consistentValue);\r\n        if (!soft) return false;\r\n      }\r\n\r\n      consistentValue = this.clone();\r\n    }\r\n\r\n    return this.value.length - oldValueLength;\r\n\r\n  }\r\n\r\n  appendWithTail (str, tail) {\r\n    // TODO refactor\r\n    let appendCount = 0;\r\n    let consistentValue = this.clone();\r\n    let consistentAppended;\r\n\r\n    for (let ci=0; ci<str.length; ++ci) {\r\n      const ch = str[ci];\r\n\r\n      const appended = this._append(ch, true);\r\n      consistentAppended = this.clone();\r\n      const tailAppended = appended !== false && this._appendTail(tail) !== false;\r\n      if (tailAppended === false || this._validate(true) === false) {\r\n        Object.assign(this, consistentValue);\r\n        break;\r\n      }\r\n\r\n      consistentValue = this.clone();\r\n      Object.assign(this, consistentAppended);\r\n      appendCount += appended;\r\n    }\r\n\r\n    // TODO needed for cases when\r\n    // 1) REMOVE ONLY AND NO LOOP AT ALL\r\n    // 2) last loop iteration removes tail\r\n    // 3) when breaks on tail insert\r\n    this._appendTail(tail);\r\n\r\n    return appendCount;\r\n  }\r\n\r\n  _unmask () {\r\n    return this.value;\r\n  }\r\n\r\n  // TODO rename - refactor\r\n  clear (from=0, to=this.value.length) {\r\n    this._value = this.value.slice(0, from) + this.value.slice(to);\r\n  }\r\n\r\n  withValueRefresh (fn) {\r\n    if (this._refreshing) return fn();\r\n    this._refreshing = true;\r\n\r\n    const unmasked = this.isInitialized ? this.unmaskedValue : null;\r\n\r\n    const ret = fn();\r\n\r\n    if (unmasked != null) this.unmaskedValue = unmasked;\r\n    delete this._refreshing;\r\n    return ret;\r\n  }\r\n\r\n  commit () {}\r\n\r\n  // TODO\r\n  // resolve (inputRaw) -> outputRaw\r\n\r\n  // TODO\r\n  // insert (str, fromPos, soft)\r\n\r\n  // splice (start, deleteCount, inserted, removeDirection) {\r\n  //   const tailPos = start + deleteCount;\r\n  //   const tail = this.extractTail(tailPos);\r\n\r\n  //   start = this.nearestInputPos(start, removeDirection);\r\n  //   this.clear(start);\r\n  //   return this.appendWithTail(inserted, tail);\r\n  // }\r\n}\r\n","import createMask from '../factory';\r\n\r\n\r\nexport default\r\nclass PatternDefinition {\r\n  constructor(opts) {\r\n    Object.assign(this, opts);\r\n\r\n    if (this.mask) {\r\n      this._masked = createMask(opts);\r\n    }\r\n  }\r\n\r\n  reset () {\r\n    this.isHollow = false;\r\n    if (this._masked) this._masked.reset();\r\n  }\r\n\r\n  get isInput () {\r\n    return this.type === PatternDefinition.TYPES.INPUT;\r\n  }\r\n\r\n  get isHiddenHollow () {\r\n    return this.isHollow && this.optional;\r\n  }\r\n\r\n  resolve (ch) {\r\n    if (!this._masked) return false;\r\n    // TODO seems strange\r\n    this._masked.value = ch;\r\n    return this._masked.value;\r\n  }\r\n}\r\n\r\nPatternDefinition.DEFAULTS = {\r\n  '0': /\\d/,\r\n  'a': /[\\u0041-\\u005A\\u0061-\\u007A\\u00AA\\u00B5\\u00BA\\u00C0-\\u00D6\\u00D8-\\u00F6\\u00F8-\\u02C1\\u02C6-\\u02D1\\u02E0-\\u02E4\\u02EC\\u02EE\\u0370-\\u0374\\u0376\\u0377\\u037A-\\u037D\\u0386\\u0388-\\u038A\\u038C\\u038E-\\u03A1\\u03A3-\\u03F5\\u03F7-\\u0481\\u048A-\\u0527\\u0531-\\u0556\\u0559\\u0561-\\u0587\\u05D0-\\u05EA\\u05F0-\\u05F2\\u0620-\\u064A\\u066E\\u066F\\u0671-\\u06D3\\u06D5\\u06E5\\u06E6\\u06EE\\u06EF\\u06FA-\\u06FC\\u06FF\\u0710\\u0712-\\u072F\\u074D-\\u07A5\\u07B1\\u07CA-\\u07EA\\u07F4\\u07F5\\u07FA\\u0800-\\u0815\\u081A\\u0824\\u0828\\u0840-\\u0858\\u08A0\\u08A2-\\u08AC\\u0904-\\u0939\\u093D\\u0950\\u0958-\\u0961\\u0971-\\u0977\\u0979-\\u097F\\u0985-\\u098C\\u098F\\u0990\\u0993-\\u09A8\\u09AA-\\u09B0\\u09B2\\u09B6-\\u09B9\\u09BD\\u09CE\\u09DC\\u09DD\\u09DF-\\u09E1\\u09F0\\u09F1\\u0A05-\\u0A0A\\u0A0F\\u0A10\\u0A13-\\u0A28\\u0A2A-\\u0A30\\u0A32\\u0A33\\u0A35\\u0A36\\u0A38\\u0A39\\u0A59-\\u0A5C\\u0A5E\\u0A72-\\u0A74\\u0A85-\\u0A8D\\u0A8F-\\u0A91\\u0A93-\\u0AA8\\u0AAA-\\u0AB0\\u0AB2\\u0AB3\\u0AB5-\\u0AB9\\u0ABD\\u0AD0\\u0AE0\\u0AE1\\u0B05-\\u0B0C\\u0B0F\\u0B10\\u0B13-\\u0B28\\u0B2A-\\u0B30\\u0B32\\u0B33\\u0B35-\\u0B39\\u0B3D\\u0B5C\\u0B5D\\u0B5F-\\u0B61\\u0B71\\u0B83\\u0B85-\\u0B8A\\u0B8E-\\u0B90\\u0B92-\\u0B95\\u0B99\\u0B9A\\u0B9C\\u0B9E\\u0B9F\\u0BA3\\u0BA4\\u0BA8-\\u0BAA\\u0BAE-\\u0BB9\\u0BD0\\u0C05-\\u0C0C\\u0C0E-\\u0C10\\u0C12-\\u0C28\\u0C2A-\\u0C33\\u0C35-\\u0C39\\u0C3D\\u0C58\\u0C59\\u0C60\\u0C61\\u0C85-\\u0C8C\\u0C8E-\\u0C90\\u0C92-\\u0CA8\\u0CAA-\\u0CB3\\u0CB5-\\u0CB9\\u0CBD\\u0CDE\\u0CE0\\u0CE1\\u0CF1\\u0CF2\\u0D05-\\u0D0C\\u0D0E-\\u0D10\\u0D12-\\u0D3A\\u0D3D\\u0D4E\\u0D60\\u0D61\\u0D7A-\\u0D7F\\u0D85-\\u0D96\\u0D9A-\\u0DB1\\u0DB3-\\u0DBB\\u0DBD\\u0DC0-\\u0DC6\\u0E01-\\u0E30\\u0E32\\u0E33\\u0E40-\\u0E46\\u0E81\\u0E82\\u0E84\\u0E87\\u0E88\\u0E8A\\u0E8D\\u0E94-\\u0E97\\u0E99-\\u0E9F\\u0EA1-\\u0EA3\\u0EA5\\u0EA7\\u0EAA\\u0EAB\\u0EAD-\\u0EB0\\u0EB2\\u0EB3\\u0EBD\\u0EC0-\\u0EC4\\u0EC6\\u0EDC-\\u0EDF\\u0F00\\u0F40-\\u0F47\\u0F49-\\u0F6C\\u0F88-\\u0F8C\\u1000-\\u102A\\u103F\\u1050-\\u1055\\u105A-\\u105D\\u1061\\u1065\\u1066\\u106E-\\u1070\\u1075-\\u1081\\u108E\\u10A0-\\u10C5\\u10C7\\u10CD\\u10D0-\\u10FA\\u10FC-\\u1248\\u124A-\\u124D\\u1250-\\u1256\\u1258\\u125A-\\u125D\\u1260-\\u1288\\u128A-\\u128D\\u1290-\\u12B0\\u12B2-\\u12B5\\u12B8-\\u12BE\\u12C0\\u12C2-\\u12C5\\u12C8-\\u12D6\\u12D8-\\u1310\\u1312-\\u1315\\u1318-\\u135A\\u1380-\\u138F\\u13A0-\\u13F4\\u1401-\\u166C\\u166F-\\u167F\\u1681-\\u169A\\u16A0-\\u16EA\\u1700-\\u170C\\u170E-\\u1711\\u1720-\\u1731\\u1740-\\u1751\\u1760-\\u176C\\u176E-\\u1770\\u1780-\\u17B3\\u17D7\\u17DC\\u1820-\\u1877\\u1880-\\u18A8\\u18AA\\u18B0-\\u18F5\\u1900-\\u191C\\u1950-\\u196D\\u1970-\\u1974\\u1980-\\u19AB\\u19C1-\\u19C7\\u1A00-\\u1A16\\u1A20-\\u1A54\\u1AA7\\u1B05-\\u1B33\\u1B45-\\u1B4B\\u1B83-\\u1BA0\\u1BAE\\u1BAF\\u1BBA-\\u1BE5\\u1C00-\\u1C23\\u1C4D-\\u1C4F\\u1C5A-\\u1C7D\\u1CE9-\\u1CEC\\u1CEE-\\u1CF1\\u1CF5\\u1CF6\\u1D00-\\u1DBF\\u1E00-\\u1F15\\u1F18-\\u1F1D\\u1F20-\\u1F45\\u1F48-\\u1F4D\\u1F50-\\u1F57\\u1F59\\u1F5B\\u1F5D\\u1F5F-\\u1F7D\\u1F80-\\u1FB4\\u1FB6-\\u1FBC\\u1FBE\\u1FC2-\\u1FC4\\u1FC6-\\u1FCC\\u1FD0-\\u1FD3\\u1FD6-\\u1FDB\\u1FE0-\\u1FEC\\u1FF2-\\u1FF4\\u1FF6-\\u1FFC\\u2071\\u207F\\u2090-\\u209C\\u2102\\u2107\\u210A-\\u2113\\u2115\\u2119-\\u211D\\u2124\\u2126\\u2128\\u212A-\\u212D\\u212F-\\u2139\\u213C-\\u213F\\u2145-\\u2149\\u214E\\u2183\\u2184\\u2C00-\\u2C2E\\u2C30-\\u2C5E\\u2C60-\\u2CE4\\u2CEB-\\u2CEE\\u2CF2\\u2CF3\\u2D00-\\u2D25\\u2D27\\u2D2D\\u2D30-\\u2D67\\u2D6F\\u2D80-\\u2D96\\u2DA0-\\u2DA6\\u2DA8-\\u2DAE\\u2DB0-\\u2DB6\\u2DB8-\\u2DBE\\u2DC0-\\u2DC6\\u2DC8-\\u2DCE\\u2DD0-\\u2DD6\\u2DD8-\\u2DDE\\u2E2F\\u3005\\u3006\\u3031-\\u3035\\u303B\\u303C\\u3041-\\u3096\\u309D-\\u309F\\u30A1-\\u30FA\\u30FC-\\u30FF\\u3105-\\u312D\\u3131-\\u318E\\u31A0-\\u31BA\\u31F0-\\u31FF\\u3400-\\u4DB5\\u4E00-\\u9FCC\\uA000-\\uA48C\\uA4D0-\\uA4FD\\uA500-\\uA60C\\uA610-\\uA61F\\uA62A\\uA62B\\uA640-\\uA66E\\uA67F-\\uA697\\uA6A0-\\uA6E5\\uA717-\\uA71F\\uA722-\\uA788\\uA78B-\\uA78E\\uA790-\\uA793\\uA7A0-\\uA7AA\\uA7F8-\\uA801\\uA803-\\uA805\\uA807-\\uA80A\\uA80C-\\uA822\\uA840-\\uA873\\uA882-\\uA8B3\\uA8F2-\\uA8F7\\uA8FB\\uA90A-\\uA925\\uA930-\\uA946\\uA960-\\uA97C\\uA984-\\uA9B2\\uA9CF\\uAA00-\\uAA28\\uAA40-\\uAA42\\uAA44-\\uAA4B\\uAA60-\\uAA76\\uAA7A\\uAA80-\\uAAAF\\uAAB1\\uAAB5\\uAAB6\\uAAB9-\\uAABD\\uAAC0\\uAAC2\\uAADB-\\uAADD\\uAAE0-\\uAAEA\\uAAF2-\\uAAF4\\uAB01-\\uAB06\\uAB09-\\uAB0E\\uAB11-\\uAB16\\uAB20-\\uAB26\\uAB28-\\uAB2E\\uABC0-\\uABE2\\uAC00-\\uD7A3\\uD7B0-\\uD7C6\\uD7CB-\\uD7FB\\uF900-\\uFA6D\\uFA70-\\uFAD9\\uFB00-\\uFB06\\uFB13-\\uFB17\\uFB1D\\uFB1F-\\uFB28\\uFB2A-\\uFB36\\uFB38-\\uFB3C\\uFB3E\\uFB40\\uFB41\\uFB43\\uFB44\\uFB46-\\uFBB1\\uFBD3-\\uFD3D\\uFD50-\\uFD8F\\uFD92-\\uFDC7\\uFDF0-\\uFDFB\\uFE70-\\uFE74\\uFE76-\\uFEFC\\uFF21-\\uFF3A\\uFF41-\\uFF5A\\uFF66-\\uFFBE\\uFFC2-\\uFFC7\\uFFCA-\\uFFCF\\uFFD2-\\uFFD7\\uFFDA-\\uFFDC]/,  // http://stackoverflow.com/a/22075070\r\n  '*': /./\r\n};\r\nPatternDefinition.TYPES = {\r\n  INPUT: 'input',\r\n  FIXED: 'fixed'\r\n};\r\n","export default\r\nclass PatternGroup {\r\n  constructor(masked, {name, offset, mask, validate}) {\r\n    this.masked = masked;\r\n    this.name = name;\r\n    this.offset = offset;\r\n    this.mask = mask;\r\n    this.validate = validate || (() => true);\r\n  }\r\n\r\n  get value () {\r\n    return this.masked.value.slice(\r\n      this.masked.mapDefIndexToPos(this.offset),\r\n      this.masked.mapDefIndexToPos(this.offset + this.mask.length));\r\n  }\r\n\r\n  get unmaskedValue () {\r\n    return this.masked.extractInput(\r\n      this.masked.mapDefIndexToPos(this.offset),\r\n      this.masked.mapDefIndexToPos(this.offset + this.mask.length));\r\n  }\r\n\r\n  _validate (soft) {\r\n    return this.validate(this.value, this, soft);\r\n  }\r\n}\r\n\r\nexport\r\nclass RangeGroup {\r\n  constructor ([from, to], maxlen=(to+'').length) {\r\n    this._from = from;\r\n    this._to = to;\r\n    this._maxLength = maxlen;\r\n    this.validate = this.validate.bind(this);\r\n\r\n    this._update();\r\n  }\r\n\r\n  get to () {\r\n    return this._to;\r\n  }\r\n\r\n  set to (to) {\r\n    this._to = to;\r\n    this._update();\r\n  }\r\n\r\n  get from () {\r\n    return this._from;\r\n  }\r\n\r\n  set from (from) {\r\n    this._from = from;\r\n    this._update();\r\n  }\r\n\r\n  get maxLength () {\r\n    return this._maxLength;\r\n  }\r\n\r\n  set maxLength (maxLength) {\r\n    this._maxLength = maxLength;\r\n    this._update();\r\n  }\r\n\r\n  get _matchFrom () {\r\n    return this.maxLength - (this.from + '').length;\r\n  }\r\n\r\n  _update() {\r\n    this._maxLength = Math.max(this._maxLength, (this.from + '').length);\r\n    this.mask = '0'.repeat(this._maxLength);\r\n\r\n  }\r\n\r\n  validate (str) {\r\n    let minstr = '';\r\n    let maxstr = '';\r\n\r\n    const [, placeholder, num] = str.match(/^(\\D*)(\\d*)(\\D*)/);\r\n    if (num) {\r\n      minstr = ('0'.repeat(placeholder.length) + num);\r\n      maxstr = ('9'.repeat(placeholder.length) + num);\r\n    }\r\n\r\n    const firstNonZero = str.search(/[^0]/);\r\n    if (firstNonZero === -1 && str.length <= this._matchFrom) return true;\r\n\r\n    minstr = minstr.padEnd(this._maxLength, '0');\r\n    maxstr = maxstr.padEnd(this._maxLength, '9');\r\n\r\n    return this.from <= Number(maxstr) && Number(minstr) <= this.to;\r\n  }\r\n}\r\n\r\nexport\r\nfunction EnumGroup (enums) {\r\n  return {\r\n    mask: '*'.repeat(enums[0].length),\r\n    validate: (value, group) => enums.some(e => e.indexOf(group.unmaskedValue) >= 0)\r\n  };\r\n}\r\n\r\nPatternGroup.Range = RangeGroup;\r\nPatternGroup.Enum = EnumGroup;\r\n","import {conform, DIRECTION, indexInDirection, refreshValueOnSet} from '../core/utils';\r\nimport Masked from './base';\r\nimport PatternDefinition from './pattern/definition';\r\nimport PatternGroup from './pattern/group';\r\n\r\n\r\nexport default\r\nclass MaskedPattern extends Masked {\r\n  constructor (opts={}) {\r\n    const {definitions, placeholder, groups} = opts;\r\n    super(opts);\r\n    delete this.isInitialized;\r\n\r\n    this.placeholder = placeholder;\r\n    this.definitions = definitions;\r\n    this.groups = groups;\r\n\r\n    this.isInitialized = true;\r\n  }\r\n\r\n  get placeholder () {\r\n    return this._placeholder;\r\n  }\r\n\r\n  @refreshValueOnSet\r\n  set placeholder (ph) {\r\n    this._placeholder = {\r\n      ...MaskedPattern.DEFAULT_PLACEHOLDER,\r\n      ...ph\r\n    };\r\n  }\r\n\r\n  get definitions () {\r\n    return this._definitions;\r\n  }\r\n\r\n  @refreshValueOnSet\r\n  set definitions (defs) {\r\n    defs = {\r\n      ...PatternDefinition.DEFAULTS,\r\n      ...defs\r\n    };\r\n\r\n    this._definitions = defs;\r\n    this._updateMask();\r\n  }\r\n\r\n  get mask () {\r\n    return this._mask;\r\n  }\r\n\r\n  @refreshValueOnSet\r\n  set mask (mask) {\r\n    this._mask = mask;\r\n    this._updateMask();\r\n  }\r\n\r\n  _updateMask () {\r\n    const defs = this._definitions;\r\n    this._charDefs = [];\r\n    this._groupDefs = [];\r\n\r\n    let pattern = this.mask;\r\n    if (!pattern || !defs) return;\r\n\r\n    let unmaskingBlock = false;\r\n    let optionalBlock = false;\r\n    let stopAlign = false;\r\n\r\n\r\n    for (let i=0; i<pattern.length; ++i) {\r\n      if (this._groups) {\r\n        const p = pattern.slice(i);\r\n        const gName = Object.keys(this._groups).find(gName => p.indexOf(gName) === 0);\r\n        if (gName) {\r\n          const group = this._groups[gName];\r\n          this._groupDefs.push(new PatternGroup(this, {\r\n            name: gName,\r\n            offset: this._charDefs.length,\r\n            mask: group.mask,\r\n            validate: group.validate\r\n          }));\r\n          pattern = pattern.replace(gName, group.mask);\r\n        }\r\n      }\r\n\r\n      let char = pattern[i];\r\n      let type = !unmaskingBlock && char in defs ?\r\n        PatternDefinition.TYPES.INPUT :\r\n        PatternDefinition.TYPES.FIXED;\r\n      const unmasking = type === PatternDefinition.TYPES.INPUT || unmaskingBlock;\r\n      const optional = type === PatternDefinition.TYPES.INPUT && optionalBlock;\r\n\r\n      if (char === MaskedPattern.STOP_CHAR) {\r\n        stopAlign = true;\r\n        continue;\r\n      }\r\n\r\n      if (char === '{' || char === '}') {\r\n        unmaskingBlock = !unmaskingBlock;\r\n        continue;\r\n      }\r\n\r\n      if (char === '[' || char === ']') {\r\n        optionalBlock = !optionalBlock;\r\n        continue;\r\n      }\r\n\r\n      if (char === MaskedPattern.ESCAPE_CHAR) {\r\n        ++i;\r\n        char = pattern[i];\r\n        // TODO validation\r\n        if (!char) break;\r\n        type = PatternDefinition.TYPES.FIXED;\r\n      }\r\n\r\n      this._charDefs.push(new PatternDefinition({\r\n        char,\r\n        type,\r\n        optional,\r\n        stopAlign,\r\n        mask: unmasking &&\r\n          (type === PatternDefinition.TYPES.INPUT ?\r\n            defs[char] :\r\n            (value => value === char))\r\n      }));\r\n\r\n      stopAlign = false;\r\n    }\r\n  }\r\n\r\n  _validate (soft) {\r\n    return this._groupDefs.every(g => g._validate(soft)) && super._validate(soft);\r\n  }\r\n\r\n  clone () {\r\n    const m = new MaskedPattern(this);\r\n    m._value = this.value;\r\n    m._charDefs.forEach((d, i) => Object.assign(d, this._charDefs[i]));\r\n    m._groupDefs.forEach((d, i) => Object.assign(d, this._groupDefs[i]));\r\n    return m;\r\n  }\r\n\r\n  reset () {\r\n    super.reset();\r\n    this._charDefs.forEach(d => {delete d.isHollow;});\r\n  }\r\n\r\n  get isComplete () {\r\n    return !this._charDefs.some((d, i) =>\r\n      d.isInput && !d.optional && (d.isHollow || !this.extractInput(i, i+1)));\r\n  }\r\n\r\n  hiddenHollowsBefore (defIndex) {\r\n    return this._charDefs\r\n      .slice(0, defIndex)\r\n      .filter(d => d.isHiddenHollow)\r\n      .length;\r\n  }\r\n\r\n  mapDefIndexToPos (defIndex) {\r\n    if (defIndex == null) return;\r\n    return defIndex - this.hiddenHollowsBefore(defIndex);\r\n  }\r\n\r\n  mapPosToDefIndex (pos) {\r\n    if (pos == null) return;\r\n    let defIndex = pos;\r\n    for (let di=0; di<this._charDefs.length; ++di) {\r\n      const def = this._charDefs[di];\r\n      if (di >= defIndex) break;\r\n      if (def.isHiddenHollow) ++defIndex;\r\n    }\r\n    return defIndex;\r\n  }\r\n\r\n  _unmask () {\r\n    const str = this.value;\r\n    let unmasked = '';\r\n\r\n    for (let ci=0, di=0; ci<str.length && di<this._charDefs.length; ++di) {\r\n      const ch = str[ci];\r\n      const def = this._charDefs[di];\r\n\r\n      if (def.isHiddenHollow) continue;\r\n      if (def.mask && !def.isHollow) unmasked += ch;\r\n      ++ci;\r\n    }\r\n\r\n    return unmasked;\r\n  }\r\n\r\n  _appendTail (tail) {\r\n    return (!tail || this._appendChunks(tail)) && this._appendPlaceholder();\r\n  }\r\n\r\n  _append (str, soft) {\r\n    const oldValueLength = this.value.length;\r\n\r\n    for (let ci=0, di=this.mapPosToDefIndex(this.value.length); ci < str.length;) {\r\n      const ch = str[ci];\r\n      const def = this._charDefs[di];\r\n\r\n      // check overflow\r\n      if (!def) return false;\r\n\r\n      // reset\r\n      def.isHollow = false;\r\n\r\n      let resolved, skipped;\r\n      let chres = conform(def.resolve(ch), ch);\r\n\r\n      if (def.type === PatternDefinition.TYPES.INPUT) {\r\n        if (chres) {\r\n          this._value += chres;\r\n          if (!this._validate()) {\r\n            chres = '';\r\n            this._value = this.value.slice(0, -1);\r\n          }\r\n        }\r\n\r\n        resolved = !!chres;\r\n        skipped = !chres && !def.optional;\r\n\r\n        // if ok - next di\r\n        if (!chres) {\r\n          if (!def.optional && !soft) {\r\n            this._value += this.placeholder.char;\r\n            skipped = false;\r\n          }\r\n          if (!skipped) def.isHollow = true;\r\n        }\r\n      } else {\r\n        this._value += def.char;\r\n        resolved = chres && (def.mask || soft);\r\n      }\r\n\r\n      if (!skipped) ++di;\r\n      if (resolved || skipped) ++ci;\r\n    }\r\n\r\n    return this.value.length - oldValueLength;\r\n  }\r\n\r\n  _appendChunks (chunks, soft) {\r\n    for (let ci=0; ci < chunks.length; ++ci) {\r\n      const [fromDefIndex, input] = chunks[ci];\r\n      if (fromDefIndex != null) this._appendPlaceholder(fromDefIndex);\r\n      if (this._append(input, soft) === false) return false;\r\n    }\r\n    return true;\r\n  }\r\n\r\n  extractTail (fromPos, toPos) {\r\n    return this.extractInputChunks(fromPos, toPos);\r\n  }\r\n\r\n  extractInput (fromPos=0, toPos=this.value.length) {\r\n    // TODO fromPos === toPos\r\n    const str = this.value;\r\n    let input = '';\r\n\r\n    const toDefIndex = this.mapPosToDefIndex(toPos);\r\n    for (\r\n      let ci=fromPos, di=this.mapPosToDefIndex(fromPos);\r\n      ci<toPos && ci<str.length && di < toDefIndex;\r\n      ++di)\r\n    {\r\n      const ch = str[ci];\r\n      const def = this._charDefs[di];\r\n\r\n      if (!def) break;\r\n      if (def.isHiddenHollow) continue;\r\n\r\n      if (def.isInput && !def.isHollow) input += ch;\r\n      ++ci;\r\n    }\r\n    return input;\r\n  }\r\n\r\n  extractInputChunks (fromPos=0, toPos=this.value.length) {\r\n    // TODO fromPos === toPos\r\n    const fromDefIndex = this.mapPosToDefIndex(fromPos);\r\n    const toDefIndex = this.mapPosToDefIndex(toPos);\r\n    const stopDefIndices = this._charDefs\r\n      .map((d, i) => [d, i])\r\n      .slice(fromDefIndex, toDefIndex)\r\n      .filter(([d]) => d.stopAlign)\r\n      .map(([, i]) => i);\r\n\r\n    const stops = [\r\n      fromDefIndex,\r\n      ...stopDefIndices,\r\n      toDefIndex\r\n    ];\r\n\r\n    return stops.map((s, i) => [\r\n      stopDefIndices.indexOf(s) >= 0 ?\r\n        s :\r\n        null,\r\n\r\n      this.extractInput(\r\n        this.mapDefIndexToPos(s),\r\n        this.mapDefIndexToPos(stops[++i]))\r\n    ]).filter(([stop, input]) => stop != null || input);\r\n  }\r\n\r\n  _appendPlaceholder (toDefIndex) {\r\n    const maxDefIndex = toDefIndex || this._charDefs.length;\r\n    for (let di=this.mapPosToDefIndex(this.value.length); di < maxDefIndex; ++di) {\r\n      const def = this._charDefs[di];\r\n      if (def.isInput) def.isHollow = true;\r\n\r\n      if (!this.placeholder.lazy || toDefIndex) {\r\n        this._value += !def.isInput ?\r\n          def.char :\r\n          !def.optional ?\r\n            this.placeholder.char :\r\n            '';\r\n      }\r\n    }\r\n  }\r\n\r\n  clear (from=0, to=this.value.length) {\r\n    this._value = this.value.slice(0, from) + this.value.slice(to);\r\n    const fromDefIndex = this.mapPosToDefIndex(from);\r\n    const toDefIndex = this.mapPosToDefIndex(to);\r\n    this._charDefs\r\n      .slice(fromDefIndex, toDefIndex)\r\n      .forEach(d => d.reset());\r\n  }\r\n\r\n   nearestInputPos (cursorPos, direction=DIRECTION.LEFT) {\r\n    if (!direction) return cursorPos;\r\n\r\n    const initialDefIndex = this.mapPosToDefIndex(cursorPos);\r\n    let di = initialDefIndex;\r\n\r\n    let firstInputIndex,\r\n        firstFilledInputIndex,\r\n        firstVisibleHollowIndex,\r\n        nextdi;\r\n\r\n    // search forward\r\n    for (nextdi = indexInDirection(di, direction); 0 <= nextdi && nextdi < this._charDefs.length; di += direction, nextdi += direction) {\r\n      const nextDef = this._charDefs[nextdi];\r\n      if (firstInputIndex == null && nextDef.isInput) firstInputIndex = di;\r\n      if (firstVisibleHollowIndex == null && nextDef.isHollow && !nextDef.isHiddenHollow) firstVisibleHollowIndex = di;\r\n      if (nextDef.isInput && !nextDef.isHollow) {\r\n        firstFilledInputIndex = di;\r\n        break;\r\n      }\r\n    }\r\n\r\n    if (direction === DIRECTION.LEFT || firstInputIndex == null) {\r\n      // search backwards\r\n      direction = -direction;\r\n      let overflow = false;\r\n\r\n      // find hollows only before initial pos\r\n      for (nextdi = indexInDirection(di, direction);\r\n        0 <= nextdi && nextdi < this._charDefs.length;\r\n        di += direction, nextdi += direction)\r\n      {\r\n        const nextDef = this._charDefs[nextdi];\r\n        if (nextDef.isInput) {\r\n          firstInputIndex = di;\r\n          if (nextDef.isHollow && !nextDef.isHiddenHollow) break;\r\n        }\r\n\r\n        // if hollow not found before start position - set `overflow`\r\n        // and try to find just any input\r\n        if (di === initialDefIndex) overflow = true;\r\n\r\n        // first input found\r\n        if (overflow && firstInputIndex != null) break;\r\n      }\r\n\r\n      // process overflow\r\n      overflow = overflow || nextdi >= this._charDefs.length;\r\n      if (overflow && firstInputIndex != null) di = firstInputIndex;\r\n    } else if (firstFilledInputIndex == null) {\r\n      // adjust index if delete at right and filled input not found at right\r\n      di = firstVisibleHollowIndex != null ?\r\n        firstVisibleHollowIndex :\r\n        firstInputIndex;\r\n    }\r\n\r\n    return this.mapDefIndexToPos(di);\r\n  }\r\n\r\n  get groups () { return this._groups; }\r\n\r\n  @refreshValueOnSet\r\n  set groups (groups) {\r\n    this._groups = groups;\r\n    this._updateMask();\r\n  }\r\n\r\n  group (name) {\r\n    return this.groupsByName(name)[0];\r\n  }\r\n\r\n  groupsByName (name) {\r\n    return this._groupDefs.filter(g => g.name === name);\r\n  }\r\n}\r\n\r\nMaskedPattern.DEFAULT_PLACEHOLDER = {\r\n  lazy: true,\r\n  char: '_'\r\n};\r\nMaskedPattern.STOP_CHAR = '`';\r\nMaskedPattern.ESCAPE_CHAR = '\\\\';\r\nMaskedPattern.Definition = PatternDefinition;\r\nMaskedPattern.Group = PatternGroup;\r\n","import {escapeRegExp, refreshValueOnSet, DIRECTION, indexInDirection} from '../core/utils';\r\nimport Masked from './base';\r\n\r\n\r\nexport default\r\nclass MaskedNumber extends Masked {\r\n  constructor (opts={}) {\r\n    opts = Object.assign({}, MaskedNumber.DEFAULTS, opts);\r\n    super(opts);\r\n    delete this.isInitialized;\r\n\r\n    const {scale, radix, mapToRadix, min, max, signed, thousandsSeparator, postFormat} = opts;\r\n\r\n    this.min = min;\r\n    this.max = max;\r\n    this.scale = scale;\r\n    this.radix = radix;\r\n    this.mapToRadix = mapToRadix;\r\n    this.signed = signed;\r\n    this.thousandsSeparator = thousandsSeparator;\r\n    this.postFormat = postFormat;\r\n\r\n    this._updateNumberRegExp();\r\n\r\n    this.isInitialized = true;\r\n  }\r\n\r\n  _updateNumberRegExp () {\r\n    // TODO refactor?\r\n    let regExpStrSoft = '^';\r\n    let regExpStr = '^';\r\n\r\n    if (this.signed) {\r\n      regExpStrSoft += '([+|\\\\-]?|([+|\\\\-]?(0|([1-9]+\\\\d*))))';\r\n      regExpStr += '[+|\\\\-]?';\r\n    } else {\r\n      regExpStrSoft += '(0|([1-9]+\\\\d*))';\r\n    }\r\n    regExpStr += '\\\\d*';\r\n\r\n    if (this.scale) {\r\n      regExpStrSoft += '(' + this.radix + '\\\\d{0,' + this.scale + '})?';\r\n      regExpStr += '(' + this.radix + '\\\\d{0,' + this.scale + '})?';\r\n    }\r\n\r\n    regExpStrSoft += '$';\r\n    regExpStr += '$';\r\n\r\n    this._numberRegExpSoft = new RegExp(regExpStrSoft);\r\n    this._numberRegExp = new RegExp(regExpStr)\r\n  }\r\n\r\n  extractTail (fromPos=0, toPos=this.value.length) {\r\n    return this._removeThousandsSeparators(super.extractTail(fromPos, toPos));\r\n  }\r\n\r\n  _removeThousandsSeparators (value) {\r\n    return value.replace(this._thousandsSeparatorRegExp, '');\r\n  }\r\n\r\n  _insertThousandsSeparators (value) {\r\n    // https://stackoverflow.com/questions/2901102/how-to-print-a-number-with-commas-as-thousands-separators-in-javascript\r\n    const parts = value.split(this.radix);\r\n    parts[0] = parts[0].replace(/\\B(?=(\\d{3})+(?!\\d))/g, this.thousandsSeparator);\r\n    return parts.join(this.radix);\r\n  }\r\n\r\n  _append (str, soft) {\r\n    return super._append(\r\n      this._removeThousandsSeparators(\r\n        str.replace(this._mapToRadixRegExp, this.radix)),\r\n      soft);\r\n  }\r\n\r\n  appendWithTail (str, tail) {\r\n    const oldValueLength = this.value.length;\r\n    this._value = this._removeThousandsSeparators(this.value);\r\n    let removedSeparatorsCount = oldValueLength - this.value.length;\r\n\r\n\r\n    const appended = super.appendWithTail(str, tail);\r\n\r\n\r\n    this._value = this._insertThousandsSeparators(this.value);\r\n\r\n    let beforeTailPos = oldValueLength + appended - removedSeparatorsCount;\r\n    this._value = this._insertThousandsSeparators(this.value);\r\n    let insertedSeparatorsBeforeTailCount = 0;\r\n    for (let pos = 0; pos <= beforeTailPos; ++pos) {\r\n      if (this.value[pos] === this.thousandsSeparator) {\r\n        ++insertedSeparatorsBeforeTailCount;\r\n        ++beforeTailPos;\r\n      }\r\n    }\r\n\r\n    return appended - removedSeparatorsCount + insertedSeparatorsBeforeTailCount;\r\n  }\r\n\r\n  nearestInputPos (cursorPos, direction=DIRECTION.LEFT) {\r\n    if (!direction) return cursorPos;\r\n\r\n    const nextPos = indexInDirection(cursorPos, direction);\r\n    if (this.value[nextPos] === this.thousandsSeparator) cursorPos += direction;\r\n    return cursorPos;\r\n  }\r\n\r\n  _validate (soft) {\r\n    const regexp = soft ? this._numberRegExpSoft : this._numberRegExp;\r\n\r\n    // validate as string\r\n    let valid = regexp.test(this._removeThousandsSeparators(this.value));\r\n\r\n    if (valid) {\r\n      // validate as number\r\n      const number = this.number;\r\n      valid = valid && !isNaN(number) &&\r\n        // check min bound for negative values\r\n        (this.min == null || this.min >= 0 || this.min <= this.number) &&\r\n        // check max bound for positive values\r\n        (this.max == null || this.max <= 0 || this.number <= this.max);\r\n    }\r\n\r\n    return valid && super._validate(soft);\r\n  }\r\n\r\n  commit () {\r\n    const number = this.number;\r\n    let validnum = number;\r\n\r\n    // check bounds\r\n    if (this.min != null) validnum = Math.max(validnum, this.min);\r\n    if (this.max != null) validnum = Math.min(validnum, this.max);\r\n\r\n    if (validnum !== number) {\r\n      this.unmaskedValue = '' + validnum;\r\n    }\r\n\r\n    let formatted = this.value;\r\n\r\n    if (this.postFormat.normalizeZeros) {\r\n      formatted = this._normalizeZeros(formatted);\r\n    }\r\n\r\n    if (this.postFormat.padFractionalZeros) {\r\n      formatted = this._padFractionalZeros(formatted);\r\n    }\r\n\r\n    this._value = formatted;\r\n  }\r\n\r\n  _normalizeZeros (value) {\r\n    const parts = this._removeThousandsSeparators(value).split(this.radix);\r\n\r\n    // remove leading zeros\r\n    parts[0] = parts[0].replace(/^(\\D*)(0*)(\\d*)/, (match, sign, zeros, num) => sign + num);\r\n\r\n    // add leading zero\r\n    if (parts[0].length && !/\\d$/.test(parts[0])) parts[0] = parts[0] + '0';\r\n\r\n    if (parts.length > 1) {\r\n      parts[1] = parts[1].replace(/0*$/, '');  // remove trailing zeros\r\n      if (!parts[1].length) parts.length = 1;  // remove fractional\r\n    }\r\n\r\n    return this._insertThousandsSeparators(parts.join(this.radix));\r\n  }\r\n\r\n  _padFractionalZeros (value) {\r\n    const parts = value.split(this.radix);\r\n    if (parts.length < 2) parts.push('');\r\n    parts[1] = parts[1].padEnd(this.scale, '0');\r\n    return parts.join(this.radix);\r\n  }\r\n\r\n  get number () {\r\n    let numstr =\r\n      this._removeThousandsSeparators(\r\n        this._normalizeZeros(\r\n          this.unmaskedValue))\r\n      .replace(this.radix, '.');\r\n\r\n    return Number(numstr);\r\n  }\r\n\r\n  set number (number) {\r\n    this.unmaskedValue = '' + number;\r\n  }\r\n\r\n  get min () {\r\n    return this._min;\r\n  }\r\n\r\n  @refreshValueOnSet\r\n  set min (min) {\r\n    this._min = min;\r\n  }\r\n\r\n  get max () {\r\n    return this._max;\r\n  }\r\n\r\n  @refreshValueOnSet\r\n  set max (max) {\r\n    this._max = max;\r\n  }\r\n\r\n  get scale () {\r\n    return this._scale;\r\n  }\r\n\r\n  @refreshValueOnSet\r\n  set scale (scale) {\r\n    this._scale = scale;\r\n  }\r\n\r\n  get radix () {\r\n    return this._radix;\r\n  }\r\n\r\n  @refreshValueOnSet\r\n  set radix (radix) {\r\n    this._radix = radix;\r\n    this._updateNumberRegExp();\r\n  }\r\n\r\n  get signed () {\r\n    return this._signed || (this.min != null && this.min < 0) || (this.max != null && this.max < 0);\r\n  }\r\n\r\n  @refreshValueOnSet\r\n  set signed (signed) {\r\n    this._signed = signed;\r\n  }\r\n\r\n  get postFormat () {\r\n    return this._postFormat;\r\n  }\r\n\r\n  @refreshValueOnSet\r\n  set postFormat (postFormat) {\r\n    this._postFormat = {\r\n      ...MaskedNumber.DEFAULTS.postFormat,\r\n      ...postFormat\r\n    };\r\n  }\r\n\r\n  get mapToRadix () {\r\n    return this._mapToRadix;\r\n  }\r\n\r\n  @refreshValueOnSet\r\n  set mapToRadix (mapToRadix) {\r\n    this._mapToRadix = mapToRadix;\r\n    this._mapToRadixRegExp = new RegExp('[' +\r\n      mapToRadix.map(escapeRegExp).join('') +\r\n    ']', 'g');\r\n  }\r\n\r\n  get thousandsSeparator () {\r\n    return this._thousandsSeparator;\r\n  }\r\n\r\n  @refreshValueOnSet\r\n  set thousandsSeparator (thousandsSeparator) {\r\n    this._thousandsSeparator = thousandsSeparator;\r\n    this._thousandsSeparatorRegExp = new RegExp(escapeRegExp(thousandsSeparator), 'g');\r\n  }\r\n}\r\nMaskedNumber.DEFAULTS = {\r\n  radix: ',',\r\n  thousandsSeparator: '',\r\n  mapToRadix: ['.'],\r\n  scale: 2,\r\n  postFormat: {\r\n    normalizeZeros: true,\r\n  }\r\n};\r\n","import {refreshValueOnSet} from '../core/utils';\r\nimport MaskedPattern from './pattern';\r\nimport PatternGroup from './pattern/group';\r\n\r\n\r\nexport default\r\nclass MaskedDate extends MaskedPattern {\r\n  constructor (opts={}) {\r\n    const groups = opts.groups;\r\n    opts = Object.assign({}, MaskedDate.DEFAULTS, opts);\r\n    const {min, max, format, parse} = opts;\r\n\r\n    opts.groups = Object.assign({}, MaskedDate.DEFAULTS.groups);\r\n    if (opts.groups.Y) {\r\n      // adjust year group\r\n      if (min) opts.groups.Y.from = min.getFullYear();\r\n      if (max) opts.groups.Y.to = max.getFullYear();\r\n    }\r\n\r\n    Object.assign(opts.groups, groups);\r\n\r\n    super(opts);\r\n    delete this.isInitialized;\r\n\r\n    this.min = min;\r\n    this.max = max;\r\n    this.format = format;\r\n    this.parse = parse;\r\n\r\n    this.isInitialized = true;\r\n  }\r\n\r\n  _validate (soft) {\r\n    const valid = super._validate(soft);\r\n    const date = this.date;\r\n\r\n    return valid &&\r\n      (!this.isComplete ||\r\n        this.isDateExist(this.value) && date && (this.max == null || date <= this.max));\r\n  }\r\n\r\n  commit () {\r\n    if (!this.isComplete) return;\r\n\r\n    // check min date\r\n    if (this.min != null && this.date < this.min) {\r\n      this._value = this.format(this.min);\r\n    }\r\n  }\r\n\r\n  isDateExist (str) {\r\n    return this.format(this.parse(str)) === str;\r\n  }\r\n\r\n  get date () {\r\n    return this.isComplete ?\r\n      this.parse(this.value) :\r\n      null;\r\n  }\r\n\r\n  set date (date) {\r\n    this.value = this.format(date);\r\n  }\r\n\r\n  get min () {\r\n    return this._min;\r\n  }\r\n\r\n  @refreshValueOnSet\r\n  set min (min) {\r\n    this._min = min;\r\n  }\r\n\r\n  get max () {\r\n    return this._max;\r\n  }\r\n\r\n  @refreshValueOnSet\r\n  set max (max) {\r\n    this._max = max;\r\n  }\r\n}\r\nMaskedDate.DEFAULTS = {\r\n  mask: 'd{.}`m{.}`Y',\r\n  format: date => {\r\n    const day = ('' + date.getDate()).padStart(2, '0');\r\n    const month = ('' + (date.getMonth() + 1)).padStart(2, '0');\r\n    const year = date.getFullYear();\r\n\r\n    return [day, month, year].join('.');\r\n  },\r\n  parse: str => {\r\n    const [day, month, year] = str.split('.');\r\n    return new Date(year, month - 1, day);\r\n  },\r\n  groups: {\r\n    d: new PatternGroup.Range([1, 31]),\r\n    m: new PatternGroup.Range([1, 12]),\r\n    Y: new PatternGroup.Range([1900, 2200]),\r\n  },\r\n};\r\n","import {DIRECTION} from './utils';\r\n\r\n\r\nexport default\r\nclass ActionDetails {\r\n  constructor (value, cursorPos, oldValue, oldSelection) {\r\n    this.value = value;\r\n    this.cursorPos = cursorPos;\r\n    this.oldValue = oldValue;\r\n    this.oldSelection = oldSelection;\r\n  }\r\n\r\n  get startChangePos () {\r\n    return Math.min(this.cursorPos, this.oldSelection.start);\r\n  }\r\n\r\n  get insertedCount () {\r\n    return this.cursorPos - this.startChangePos;\r\n  }\r\n\r\n  get inserted () {\r\n    return this.value.substr(this.startChangePos, this.insertedCount);\r\n  }\r\n\r\n  get removedCount () {\r\n    // Math.max for opposite operation\r\n    return Math.max((this.oldSelection.end - this.startChangePos) ||\r\n      // for Delete\r\n      this.oldValue.length - this.value.length, 0);\r\n  }\r\n\r\n  get removed () {\r\n    return this.oldValue.substr(this.startChangePos, this.removedCount);\r\n  }\r\n\r\n  get head () {\r\n    return this.value.substring(0, this.startChangePos);\r\n  }\r\n\r\n  get tail () {\r\n    this.value.substring(this.startChangePos + this.insertedCount);\r\n  }\r\n\r\n  get removeDirection () {\r\n    return this.removedCount &&\r\n      ((this.oldSelection.end === this.cursorPos || this.insertedCount) ?\r\n        DIRECTION.RIGHT :\r\n        DIRECTION.LEFT);\r\n  }\r\n}\r\n","import ActionDetails from '../core/action-details';\r\nimport createMask from '../masked/factory';\r\n\r\n\r\nexport default\r\nclass InputMask {\r\n  constructor (el, opts) {\r\n    this.el = el;\r\n    this.masked = createMask(opts);\r\n\r\n    this._listeners = {};\r\n    this._value = '';\r\n    this._unmaskedValue = '';\r\n\r\n    this.saveSelection = this.saveSelection.bind(this);\r\n    this._onInput = this._onInput.bind(this);\r\n    this._onChange = this._onChange.bind(this);\r\n    this._onDrop = this._onDrop.bind(this);\r\n    this._alignCursor = this._alignCursor.bind(this);\r\n    this._alignCursorFriendly = this._alignCursorFriendly.bind(this);\r\n\r\n    this.bindEvents();\r\n\r\n    // refresh\r\n    this.updateValue();\r\n    this._onChange();\r\n  }\r\n\r\n  get mask () { return this.masked.mask; }\r\n  set mask (mask) {\r\n    const unmasked = this.masked ? this.masked.unmaskedValue : null;\r\n    let opts = {mask};\r\n    if (typeof mask === typeof this.masked.mask) {\r\n      this.masked.mask = mask;\r\n      opts = this.masked;\r\n    }\r\n    this.masked = createMask(opts);\r\n    if (unmasked != null) this.masked.unmaskedValue = unmasked;\r\n  }\r\n\r\n  get value () {\r\n    return this._value;\r\n  }\r\n\r\n  set value (str) {\r\n    this.masked.value = str;\r\n    this.updateControl();\r\n    this._alignCursor();\r\n  }\r\n\r\n  get unmaskedValue () {\r\n    return this._unmaskedValue;\r\n  }\r\n\r\n  set unmaskedValue (str) {\r\n    this.masked.unmaskedValue = str;\r\n    this.updateControl();\r\n    this._alignCursor();\r\n  }\r\n\r\n  bindEvents () {\r\n    this.el.addEventListener('keydown', this.saveSelection);\r\n    this.el.addEventListener('input', this._onInput);\r\n    this.el.addEventListener('drop', this._onDrop);\r\n    this.el.addEventListener('click', this._alignCursorFriendly);\r\n    this.el.addEventListener('change', this._onChange);\r\n  }\r\n\r\n  unbindEvents () {\r\n    this.el.removeEventListener('keydown', this.saveSelection);\r\n    this.el.removeEventListener('input', this._onInput);\r\n    this.el.removeEventListener('drop', this._onDrop);\r\n    this.el.removeEventListener('click', this._alignCursorFriendly);\r\n    this.el.removeEventListener('change', this._onChange);\r\n  }\r\n\r\n  fireEvent (ev) {\r\n    const listeners = this._listeners[ev] || [];\r\n    listeners.forEach(l => l());\r\n  }\r\n\r\n  get selectionStart () {\r\n    return this._cursorChanging ?\r\n      this._changingCursorPos :\r\n\r\n      this.el.selectionStart;\r\n  }\r\n\r\n  get cursorPos () {\r\n    return this._cursorChanging ?\r\n      this._changingCursorPos :\r\n\r\n      this.el.selectionEnd;\r\n  }\r\n\r\n  set cursorPos (pos) {\r\n    if (this.el !== document.activeElement) return;\r\n\r\n    this.el.setSelectionRange(pos, pos);\r\n    this.saveSelection();\r\n  }\r\n\r\n  saveSelection (/* ev */) {\r\n    if (this.value !== this.el.value) {\r\n      console.warn('Uncontrolled input change, refresh mask manually!'); // eslint-disable-line no-console\r\n    }\r\n    this._selection = {\r\n      start: this.selectionStart,\r\n      end: this.cursorPos\r\n    };\r\n  }\r\n\r\n  updateValue () {\r\n    this.masked.value = this.el.value;\r\n  }\r\n\r\n  updateControl () {\r\n    const newUnmaskedValue = this.masked.unmaskedValue;\r\n    const newValue = this.masked.value;\r\n    const isChanged = (this.unmaskedValue !== newUnmaskedValue ||\r\n      this.value !== newValue);\r\n\r\n    this._unmaskedValue = newUnmaskedValue;\r\n    this._value = newValue;\r\n\r\n    if (this.el.value !== newValue) this.el.value = newValue;\r\n    if (isChanged) this._fireChangeEvents();\r\n  }\r\n\r\n  updateOptions (opts) {\r\n    const mask = opts.mask;\r\n    if (mask) this.mask = mask;\r\n\r\n    this.masked.withValueRefresh(() => {\r\n      for (const k in opts) {\r\n        if (k === 'mask') continue;\r\n        this.masked[k] = opts[k];\r\n      }\r\n    });\r\n\r\n    this.updateControl();\r\n  }\r\n\r\n  updateCursor (cursorPos) {\r\n    if (cursorPos == null) return;\r\n    this.cursorPos = cursorPos;\r\n\r\n    // also queue change cursor for mobile browsers\r\n    this._delayUpdateCursor(cursorPos);\r\n  }\r\n\r\n  _delayUpdateCursor (cursorPos) {\r\n    this._abortUpdateCursor();\r\n    this._changingCursorPos = cursorPos;\r\n    this._cursorChanging = setTimeout(() => {\r\n      this.cursorPos = this._changingCursorPos;\r\n      this._abortUpdateCursor();\r\n    }, 10);\r\n  }\r\n\r\n  _fireChangeEvents () {\r\n    this.fireEvent('accept');\r\n    if (this.masked.isComplete) this.fireEvent('complete');\r\n  }\r\n\r\n  _abortUpdateCursor () {\r\n    if (this._cursorChanging) {\r\n      clearTimeout(this._cursorChanging);\r\n      delete this._cursorChanging;\r\n    }\r\n  }\r\n\r\n  _alignCursor () {\r\n    this.cursorPos = this.masked.nearestInputPos(this.cursorPos);\r\n  }\r\n\r\n  _alignCursorFriendly () {\r\n    if (this.selectionStart !== this.cursorPos) return;\r\n    this._alignCursor();\r\n  }\r\n\r\n  on (ev, handler) {\r\n    if (!this._listeners[ev]) this._listeners[ev] = [];\r\n    this._listeners[ev].push(handler);\r\n    return this;\r\n  }\r\n\r\n  off (ev, handler) {\r\n    if (!this._listeners[ev]) return;\r\n    if (!handler) {\r\n      delete this._listeners[ev];\r\n      return;\r\n    }\r\n    const hIndex = this._listeners[ev].indexOf(handler);\r\n    if (hIndex >= 0) this._listeners.splice(hIndex, 1);\r\n    return this;\r\n  }\r\n\r\n  _onInput () {\r\n    this._abortUpdateCursor();\r\n\r\n    const details = new ActionDetails(\r\n      // new state\r\n      this.el.value, this.cursorPos,\r\n      // old state\r\n      this.value, this._selection);\r\n\r\n    const tailPos = details.startChangePos + details.removed.length;\r\n    const tail = this.masked.extractTail(tailPos);\r\n\r\n    const lastInputPos = this.masked.nearestInputPos(details.startChangePos, details.removeDirection);\r\n    this.masked.clear(lastInputPos);\r\n    const insertedCount = this.masked.appendWithTail(details.inserted, tail);\r\n\r\n\r\n    const cursorPos = this.masked.nearestInputPos(\r\n      lastInputPos + insertedCount,\r\n      details.removeDirection);\r\n\r\n    this.updateControl();\r\n    this.updateCursor(cursorPos);\r\n  }\r\n\r\n  _onChange () {\r\n    if (this.value !== this.el.value) {\r\n      this.updateValue();\r\n    }\r\n    this.masked.commit();\r\n    this.updateControl();\r\n  }\r\n\r\n  _onDrop (ev) {\r\n    ev.preventDefault();\r\n    ev.stopPropagation();\r\n  }\r\n\r\n  destroy () {\r\n    this.unbindEvents();\r\n    this._listeners.length = 0;\r\n  }\r\n}\r\n"],"names":["isString","str","String","conform","res","fallback","indexInDirection","pos","direction","DIRECTION","LEFT","refreshValueOnSet","target","key","descriptor","method","set","args","this","withValueRefresh","bind","escapeRegExp","replace","createMask","opts","mask","IMask","Masked","RegExp","value","test","MaskedPattern","prototype","Number","MaskedNumber","Date","pattern","MaskedDate","Function","warn","el","InputMask","global","module","window","Math","self","__g","core","version","__e","it","isObject","TypeError","exec","e","require$$0","Object","defineProperty","get","a","document","is","createElement","require$$1","require$$2","S","fn","val","toString","call","valueOf","dP","O","P","Attributes","anObject","toPrimitive","IE8_DOM_DEFINE","bitmap","enumerable","configurable","writable","object","f","createDesc","hasOwnProperty","id","px","random","concat","undefined","SRC","$toString","TPL","split","inspectSource","safe","isFunction","has","hide","join","that","length","aFunction","b","c","apply","arguments","$export","type","name","source","own","out","exp","IS_FORCED","F","IS_GLOBAL","G","IS_STATIC","IS_PROTO","IS_BIND","B","exports","expProto","ctx","redefine","U","W","R","slice","propertyIsEnumerable","cof","defined","ceil","floor","isNaN","min","toInteger","Array","isArray","arg","store","Symbol","USE_SYMBOL","uid","SPECIES","original","C","constructor","speciesConstructor","UNSCOPABLES","ArrayProto","$find","TYPE","$create","IS_MAP","IS_FILTER","IS_SOME","IS_EVERY","IS_FIND_INDEX","NO_HOLES","create","asc","$this","callbackfn","toObject","IObject","toLength","index","result","push","forced","find","max","shared","arrayIndexOf","IS_INCLUDES","fromIndex","toIObject","toIndex","IE_PROTO","names","i","keys","$keys","enumBugKeys","KEY","fails","count","n","Infinity","RangeError","repeat","maxLength","fillString","left","stringLength","fillStr","intMaxLength","fillLen","stringFiller","padStart","$pad","padEnd","validate","_value","isInitialized","_validate","soft","clone","m","reset","nearestInputPos","cursorPos","extractInput","fromPos","toPos","extractTail","_appendTail","tail","_append","oldValueLength","consistentValue","ci","appendWithTail","appendCount","consistentAppended","ch","appended","_unmask","clear","from","to","_refreshing","unmasked","unmaskedValue","ret","commit","_mask","PatternDefinition","_masked","isHollow","resolve","TYPES","INPUT","optional","DEFAULTS","PatternGroup","masked","offset","mapDefIndexToPos","RangeGroup","maxlen","_from","_to","_maxLength","_update","minstr","maxstr","match","placeholder","num","search","_matchFrom","Range","Enum","enums","group","some","indexOf","definitions","groups","_Masked","_this","_updateMask","defs","_definitions","_charDefs","_groupDefs","unmaskingBlock","optionalBlock","stopAlign","_this2","_groups","p","gName","char","FIXED","unmasking","STOP_CHAR","ESCAPE_CHAR","every","g","forEach","d","babelHelpers.extends","_this3","hiddenHollowsBefore","defIndex","filter","isHiddenHollow","mapPosToDefIndex","di","def","_appendChunks","_appendPlaceholder","resolved","skipped","chres","chunks","fromDefIndex","input","extractInputChunks","toDefIndex","isInput","stopDefIndices","map","stops","s","_this4","stop","maxDefIndex","lazy","initialDefIndex","firstInputIndex","firstFilledInputIndex","firstVisibleHollowIndex","nextdi","nextDef","overflow","groupsByName","_placeholder","ph","DEFAULT_PLACEHOLDER","_this5","Definition","Group","scale","radix","mapToRadix","signed","thousandsSeparator","postFormat","_updateNumberRegExp","regExpStrSoft","regExpStr","_numberRegExpSoft","_numberRegExp","_removeThousandsSeparators","_thousandsSeparatorRegExp","_insertThousandsSeparators","parts","_mapToRadixRegExp","removedSeparatorsCount","beforeTailPos","insertedSeparatorsBeforeTailCount","nextPos","valid","number","validnum","formatted","normalizeZeros","_normalizeZeros","padFractionalZeros","_padFractionalZeros","sign","zeros","numstr","_min","_max","_scale","_radix","_signed","_postFormat","_mapToRadix","_thousandsSeparator","format","parse","Y","getFullYear","_MaskedPattern","date","isComplete","isDateExist","getDate","getMonth","day","month","year","ActionDetails","oldValue","oldSelection","start","startChangePos","substr","insertedCount","end","removedCount","substring","RIGHT","_listeners","_unmaskedValue","saveSelection","_onInput","_onChange","_onDrop","_alignCursor","_alignCursorFriendly","bindEvents","updateValue","addEventListener","unbindEvents","removeEventListener","fireEvent","ev","l","_selection","selectionStart","updateControl","newUnmaskedValue","newValue","isChanged","_fireChangeEvents","updateOptions","k","updateCursor","_delayUpdateCursor","_abortUpdateCursor","_changingCursorPos","_cursorChanging","setTimeout","on","handler","off","hIndex","splice","details","tailPos","removed","lastInputPos","removeDirection","inserted","preventDefault","stopPropagation","destroy","selectionEnd","activeElement","setSelectionRange"],"mappings":"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"}