{"version":3,"sources":["utils.js","imask.js","masks/base.js","masks/regexp.js","masks/func.js","masks/pattern.js","masks/pipe.js"],"names":["isString","str","String","conform","res","fallback","arguments","length","undefined","extendDetailsAdjustments","details","cursorPos","oldSelection","oldValue","startChangePos","Math","min","start","insertedCount","removedCount","max","end","head","substring","tail","inserted","substr","removed","IMask","el","opts","mask","MaskFactory","bindEvents","rawValue","value","BaseMask","_listeners","_refreshingCount","_rawValue","_unmaskedValue","saveSelection","this","bind","_onInput","_onDrop","ev","handler","push","hIndex","indexOf","splice","addEventListener","removeEventListener","listeners","forEach","l","inputValue","_selection","unmaskedValue","resolve","updateElement","warn","selectionStart","unbindEvents","_calcUnmasked","isChanged","updateCursor","_fireChangeEvents","fireEvent","_delayUpdateCursor","_abortUpdateCursor","_changingCursorPos","_cursorChanging","setTimeout","_this","processInput","preventDefault","stopPropagation","selectionEnd","pos","setSelectionRange","RegExpMask","test","FuncMask","apply","PatternMask","_hollows","placeholder","definitions","_extends","DEFINITIONS","_alignCursor","_alignCursorFriendly","_initialized","_definitions","_charDefs","pattern","unmaskingBlock","optionalBlock","i","ch","type","DEF_TYPES","INPUT","FIXED","unmasking","optional","_buildResolvers","_resolvers","defKey","skipUnresolvedInput","placeholderBuffer","hollows","slice","overflow","ci","di","_mapPosToDefIndex","def","resolver","char","chres","isResolved","_placeholder","fromPos","input","_isHiddenHollow","_isHollow","defIndex","filter","h","_this2","_hollowsBefore","hi","insertSteps","_appendTail","_appendTail3","tailInput","_extractInput","lastHollowIndex","_generateInsertSteps","istep","step","_insertSteps$istep","tres","_appendTail5","thollows","_ref","appended","_appendFixedEnd","hasHollows","_appendPlaceholderEnd","isComplete","show","unmasked","cursorDefIndex","rPos","rDef","lPos","lDef","_mapDefIndexToPos","_this3","_appendTail7","document","activeElement","ph","DEFAULT_PLACEHOLDER","map","_this4","join","defs","_installDefinitions","_mask","PipeMask","multipass","_compiledMasks","m","_pipe","stepRes","tempRes","reduce","s","d","prototype","RegExp","Array","Function","window"],"mappings":"gLACA,SAASA,GAAUC,SACK,gBAARA,IAAoBA,YAAeC,QAGnD,QACSC,GAASC,EAAKH,MAAKI,GAAaC,UAAAC,OAAA,GAAAC,SAAAF,UAAA,GAAAA,UAAA,GAAJ,SAC5BN,GAASI,GACdA,EACAA,EACEH,EACAI,EAGN,QACSI,GAAyBR,EAAKS,MACjCC,GAAYD,EAAQC,UACpBC,EAAeF,EAAQE,aACvBC,EAAWH,EAAQG,SAEnBC,EAAiBC,KAAKC,IAAIL,EAAWC,EAAaK,OAClDC,EAAgBP,EAAYG,EAE5BK,EAAeJ,KAAKK,IAAKR,EAAaS,IAAMP,KAErCP,OAASN,EAAIM,OAAQ,GAC5Be,EAAOrB,EAAIsB,UAAU,EAAGT,GACxBU,EAAOvB,EAAIsB,UAAUT,EAAiBI,GACtCO,EAAWxB,EAAIyB,OAAOZ,EAAgBI,GACtCS,EAAU1B,EAAIyB,OAAOZ,EAAgBK,kEAQpCT,GC3BP,QAASkB,GAAOC,MAAIC,GAASxB,UAAAC,OAAA,GAAAC,SAAAF,UAAA,GAAAA,UAAA,MACvByB,EAAOH,EAAMI,YAAYH,EAAIC,YAC5BG,eAEAC,SAAWL,EAAGM,MACZJ,4nDCXHK,EAAAA,sBACSP,EAAIC,kBACVD,GAAKA,OACLE,KAAOD,EAAKC,UAEZM,mBACAC,iBAAmB,OACnBC,UAAY,QACZC,eAAiB,QAEjBC,cAAgBC,KAAKD,cAAcE,KAAKD,WACxCE,SAAWF,KAAKE,SAASD,KAAKD,WAC9BG,QAAUH,KAAKG,QAAQF,KAAKD,2CAG/BI,EAAIC,SACDL,MAAKL,WAAWS,KAAKJ,KAAKL,WAAWS,YACrCT,WAAWS,GAAIE,KAAKD,GAClBL,iCAGJI,EAAIC,MACFL,KAAKL,WAAWS,QAChBC,oBACIL,MAAKL,WAAWS,MAGrBG,GAASP,KAAKL,WAAWS,GAAII,QAAQH,SACrCE,IAAU,GAAGP,KAAKL,WAAWc,OAAOF,EAAQ,GACzCP,gDA4BFb,GAAGuB,iBAAiB,UAAWV,KAAKD,oBACpCZ,GAAGuB,iBAAiB,QAASV,KAAKE,eAClCf,GAAGuB,iBAAiB,OAAQV,KAAKG,qDAIjChB,GAAGwB,oBAAoB,UAAWX,KAAKD,oBACvCZ,GAAGwB,oBAAoB,QAASX,KAAKE,eACrCf,GAAGwB,oBAAoB,OAAQX,KAAKG,2CAGhCC,MACLQ,GAAYZ,KAAKL,WAAWS,SACtBS,QAAQ,SAAAC,SAAKA,4CAGXC,EAAY/C,kBAEXgC,KAAK/B,uBACF+B,KAAKgB,oBACThB,KAAKR,0BACGQ,KAAKiB,eACpBjD,KAGKD,EAAyBgD,EAAY/C,MAE3CN,GAAMD,EAAQuC,KAAKkB,QAAQH,EAAY/C,GACzC+C,EACAf,KAAKR,sBAEF2B,cAAczD,EAAKM,EAAQC,WACzBP,wCAuBM0C,GACTJ,KAAKR,WAAaQ,KAAKb,GAAGM,eACpB2B,KAAK,0DAEVJ,kBACIhB,KAAKqB,mBACPrB,KAAK/B,kDAKPqD,oBACA3B,WAAW9B,OAAS,wCAGZ4B,EAAOxB,MAChBgD,GAAgBjB,KAAKuB,cAAc9B,GACnC+B,EAAaxB,KAAKiB,gBAAkBA,GACtCjB,KAAKR,WAAaC,OAEfK,eAAiBmB,OACjBpB,UAAYJ,EAEbO,KAAKb,GAAGM,QAAUA,IAAOO,KAAKb,GAAGM,MAAQA,QACxCgC,aAAaxD,GAEduD,GAAWxB,KAAK0B,qEAIfC,UAAU,+CAGH1D,GACK,MAAbA,SACCA,UAAYA,OAGZ2D,mBAAmB3D,+CAGNA,mBACb4D,0BACAC,mBAAqB7D,OACrB8D,gBAAkBC,WAAW,aAC3BH,uBACA5D,UAAYgE,EAAKH,oBACrB,iDAIC9B,KAAK+B,+BACM/B,KAAK+B,uBACX/B,MAAK+B,kDAIN3B,QACHyB,0BACAK,aAAalC,KAAKb,GAAGM,uCAGnBW,KACJ+B,mBACAC,kDAII7E,EAAKS,SAAkBT,yCAEjBkC,SAAgBA,0CArJtBO,MAAKH,wBAGAtC,QACP2E,aAAa3E,aACLA,EAAIM,gBACLmC,KAAKR,6BAEN,MACFQ,KAAKR,SAAS3B,sDAMhBmC,MAAKF,6BAGKL,QACZD,SAAWC,+CA0CTO,MAAK+B,gBACV/B,KAAK8B,mBAEL9B,KAAKb,GAAGkC,uDAIHrB,MAAK+B,gBACV/B,KAAK8B,mBAEL9B,KAAKb,GAAGkD,2BAGGC,QACRnD,GAAGoD,kBAAkBD,EAAKA,QAC1BvC,yBC7GHyC,EAAAA,SAAAA,wJACKjF,SACAyC,MAAKX,KAAKoD,KAAKlF,UAFDmC,GCAnBgD,EAAAA,SAAAA,gKAEK1C,MAAKX,KAALsD,MAAA3C,KAAApC,kBAFY8B,GCCjBkD,EAAAA,SAAAA,cACSzD,EAAIC,4EACTD,EAAIC,aAELyD,cACAC,YAAc1D,EAAK0D,cACnBC,YAALC,KACKJ,EAAYK,YACZ7D,EAAK2D,eAGLG,aAAejB,EAAKiB,aAAajD,KAAlBgC,KACfkB,qBAAuBlB,EAAKkB,qBAAqBlD,KAA1BgC,KAEvBmB,cAAe,oEAIhBpD,KAAKqB,iBAAmBrB,KAAK/B,gBAC5BiF,mJAKA/D,GAAGuB,iBAAiB,QAASV,KAAKmD,8JAKlChE,GAAGwB,oBAAoB,QAASX,KAAKmD,kEAGvBJ,QACdM,aAAeN,OACfO,gBACDC,GAAUvD,KAAKX,QAEdkE,GAAYR,OAIZ,GAFDS,IAAiB,EACjBC,GAAgB,EACXC,EAAE,EAAGA,EAAEH,EAAQ1F,SAAU6F,EAAG,IAC/BC,GAAKJ,EAAQG,GACbE,GAAQJ,GAAkBG,IAAMZ,GAClCH,EAAYiB,UAAUC,MACtBlB,EAAYiB,UAAUE,MACpBC,EAAYJ,IAAShB,EAAYiB,UAAUC,OAASN,EACpDS,EAAWL,IAAShB,EAAYiB,UAAUC,OAASL,KAE5C,MAAPE,GAAqB,MAAPA,KAKP,MAAPA,GAAqB,MAAPA,MAKP,OAAPA,EAAa,MACbD,IACGH,EAAQG,IAERC,EAAI,QACFf,EAAYiB,UAAUE,WAG1BT,UAAUhD,WACPqD,OACAC,WACIK,YACCD,YAhBMP,UALCD,OAyBjBU,kEAIAC,kBACA,GAAIC,KAAUpE,MAAK+C,iBACjBoB,WAAWC,GAAUlF,MAAMI,YAAYU,KAAKb,SACzCa,KAAK+C,YAAYqB,yCAKhB7G,EAAKuB,OAKX,GALiBuF,KAA0BzG,UAAAC,OAAA,GAAAC,SAAAF,UAAA,KAAAA,UAAA,GAC5C0G,EAAoB,GACpBC,EAAUvE,KAAK6C,SAAS2B,QACxBC,GAAW,EAENC,EAAG,EAAGC,EAAG3E,KAAK4E,kBAAkBrH,EAAIM,QAAS6G,EAAK5F,EAAKjB,QAAS,IACnE8F,GAAK7E,EAAK4F,GACVG,EAAM7E,KAAKsD,UAAUqB,OAGpBE,EAAK,IACG,WAITA,EAAIjB,OAAShB,EAAYiB,UAAUC,MAAO,IACxCgB,GAAW9E,KAAKmE,WAAWU,EAAIE,MAC/BC,EAAQF,EAAS5D,QAAQyC,EAAIgB,EAAIpH,EAAM+G,IAAsB,GAC7DW,IAAeD,CAGfA,KACMvH,EAAQuH,EAAOrB,KAElBkB,EAAIZ,UAAYI,IAAqBW,EAAQhF,KAAKkF,aAAaH,MAChER,EAAQ/D,QAAQmE,GAAM,GAAGJ,EAAQjE,KAAKqE,IAGxCK,OACKV,EAAoB7G,EAAQuH,EAAOrB,KACtB,KAElBqB,GAASH,EAAIZ,WAAaI,MAAuBM,GACjDM,IAAeJ,EAAIZ,WAAaI,MAAuBK,UAEtCG,EAAIE,KAErBpB,IAAOkB,EAAIE,QAAQL,IACrBC,SAIEpH,EAAKgH,EAASE,yCAGTlH,OAGR,GAHa4H,GAAWvH,UAAAC,OAAA,GAAAC,SAAAF,UAAA,GAAAA,UAAA,GAAH,EACtBwH,EAAQ,GAEHV,EAAG,EAAGC,EAAG3E,KAAK4E,kBAAkBO,GAAUT,EAAGnH,EAAIM,QAAU8G,EAAG3E,KAAKsD,UAAUzF,SAAU8G,EAAI,IAC9FhB,GAAKpG,EAAImH,GACTG,EAAM7E,KAAKsD,UAAUqB,EAErB3E,MAAKqF,gBAAgBV,KAErBE,EAAIjB,OAAShB,EAAYiB,UAAUC,OAAU9D,KAAKsF,UAAUX,KAAKS,GAASzB,KAC5Ee,SAEGU,qCAGEG,SACFvF,MAAK6C,SAASrC,QAAQ+E,IAAa,0CAG3BA,SACRvF,MAAKsF,UAAUC,IACpBvF,KAAKsD,UAAUiC,IAAavF,KAAKsD,UAAUiC,GAAUtB,gDAGzCsB,oBACPvF,MAAK6C,SAAS2C,OAAO,SAAAC,SAAKA,GAAIF,GAAYG,EAAKL,gBAAgBI,+CAGrDF,SACVA,GAAWvF,KAAK2F,eAAeJ,GAAU1H,iDAG/ByE,OAEZ,GADDiD,GAAWjD,EACNsD,EAAG,EAAGA,EAAG5F,KAAK6C,SAAShF,SAAU+H,EAAI,IACxCH,GAAIzF,KAAK6C,SAAS+C,MAClBH,GAAKF,EAAU,KACfvF,MAAKqF,gBAAgBI,MAAMF,QAE1BA,gDAGa3G,EAAMG,OAQrB,GAPD0F,IAAW,EAGXF,EAAUvE,KAAK6C,SAEfgD,IAAgBjH,EAAM2F,EAAQC,UAEzBE,EAAG,EAAGA,EAAG3F,EAASlB,SAAW4G,IAAYC,EAAI,IAChDf,GAAK5E,EAAS2F,KACa1E,KAAK8F,YAAYlH,EAAM+E,GAAI,YAArDjG,EAF+CqI,EAAA,GAE1CxB,EAF0CwB,EAAA,GAEjCtB,EAFiCsB,EAAA,QAG/ClD,SAAW0B,EACXE,GAAY/G,IAAQkB,MACX0B,MAAM5C,EAAK6G,MAChB7G,eAKNmF,SAAW0B,EAETsB,kCAGAtI,EAAKS,MACRC,GAAYD,EAAQC,UACpBG,EAAiBJ,EAAQI,eACzBW,EAAWf,EAAQe,SACnBN,EAAeT,EAAQiB,QAAQpB,OAC/BmI,EAAYhG,KAAKiG,cAAcjI,EAAQc,KAAMV,EAAiBK,GAG9DyH,EAAkBlG,KAAK4E,kBAAkBxG,QACxCyE,SAAW7C,KAAK6C,SAAS2C,OAAO,SAAAC,SAAKA,GAAIS,QAMzC,GAJDxI,GAAMM,EAAQY,KAGdiH,EAAc7F,KAAKmG,qBAAqBzI,EAAKqB,GACxCqH,EAAMP,EAAYhI,OAAO,EAAGuI,GAAS,IAAKA,EAAO,IACpDC,OACoBR,EAAYO,GAFoB,KAAAE,EAAA,QAE5CzD,SAF4CyD,EAAA,SAGvBtG,KAAK8F,YAAYO,EAAML,YAAnDO,EAHmDC,EAAA,GAG7CC,EAH6CD,EAAA,GAGnC/B,EAHmC+B,EAAA,OAInD/B,EAAU,QACW8B,EAAME,KADjBC,EAAA,QACF7D,SADE6D,EAAA,KAEDL,EAAKxI,iBAMjBkB,GAAYd,IAAcP,EAAIG,OAAQ,IAEpC8I,GAAW3G,KAAK4G,gBAAgBlJ,MACvBiJ,EAAS9I,OAASH,EAAIG,SAC7B8I,MAGH5H,GAAYN,EAAc,IAEzBT,EAAQE,aAAaS,MAAQV,UACtBA,EAAW,IACd0G,GAAG3E,KAAK4E,kBAAkB3G,GAC1B4G,EAAM7E,KAAKsD,UAAUqB,OACpBE,GAAOA,EAAIjB,OAAShB,EAAYiB,UAAUE,MAAO,SAKtD9F,IAAcP,EAAIG,OAAQ,QACxB8G,GAAK3E,KAAK4E,kBAAkB3G,EAAU,GACtC4I,GAAa,EACVlC,EAAK,IAAKA,EAAI,IACfE,GAAM7E,KAAKsD,UAAUqB,MACrBE,EAAIjB,OAAShB,EAAYiB,UAAUC,MAAO,KACxC9D,KAAKsF,UAAUX,GACd,KADmBkC,IAAa,GAIrCA,IAAYnJ,EAAMA,EAAI8G,MAAM,EAAGG,EAAK,cAKtC3E,KAAK8G,sBAAsBpJ,KACzBO,UAAYA,EAEbP,+IAMHsC,KAAK+G,YAAY/G,KAAK2B,UAAU,oDASrBjE,OACV,GAAIiH,GAAG3E,KAAK4E,kBAAkBlH,EAAIG,WAAY8G,EAAI,IACjDE,GAAM7E,KAAKsD,UAAUqB,OACpBE,EAAK,UAEN7E,KAAKqF,gBAAgBV,OACrBE,EAAIjB,OAAShB,EAAYiB,UAAUC,MAAO,KAC1Ca,IAAMjH,EAAIG,SAAQH,GAAOmH,EAAIE,aAE5BrH,iDAGcA,OAChB,GAAIiH,GAAG3E,KAAK4E,kBAAkBlH,EAAIG,QAAS8G,EAAG3E,KAAKsD,UAAUzF,SAAU8G,EAAI,IAC1EE,GAAM7E,KAAKsD,UAAUqB,EACrBE,GAAIjB,OAAShB,EAAYiB,UAAUC,OAAU9D,KAAKsF,UAAUX,SACzD9B,SAASvC,KAAKqE,GAEU,WAA3B3E,KAAKkF,aAAa8B,UACbnC,EAAIjB,OAAShB,EAAYiB,UAAUE,MACxCc,EAAIE,KACHF,EAAIZ,SAEH,GADAjE,KAAKkF,aAAaH,YAInBrH,yCAGMH,OAER,GADD0J,GAAW,GACNvC,EAAG,EAAGC,EAAG,EAAGD,EAAGnH,EAAIM,QAAU8G,EAAG3E,KAAKsD,UAAUzF,SAAU8G,EAAI,IAChEhB,GAAKpG,EAAImH,GACTG,EAAM7E,KAAKsD,UAAUqB,EAErB3E,MAAKqF,gBAAgBV,KAErBE,EAAIb,YAAchE,KAAKsF,UAAUX,KAClCE,EAAIjB,OAAShB,EAAYiB,UAAUC,OAAS9D,KAAKmE,WAAWU,EAAIE,MAAM7D,QAAQyC,EAAIe,EAAInH,IACrFsH,EAAIE,OAASpB,QACHA,KAEZe,SAEGuC,8CAmDF,GADDC,GAAiBlH,KAAK4E,kBAAkB5E,KAAK/B,WACxCkJ,EAAOD,EAAgBC,GAAQ,IAAKA,EAAM,IAC7CC,GAAOpH,KAAKsD,UAAU6D,GACtBE,EAAOF,EAAK,EACZG,EAAOtH,KAAKsD,UAAU+D,OACtBrH,KAAKqF,gBAAgBgC,MAEnBD,GAAQA,EAAKxD,OAAShB,EAAYiB,UAAUC,OAAS9D,KAAKsF,UAAU6B,KAAUnH,KAAKqF,gBAAgB8B,MACtGnH,KAAKsF,UAAU+B,OACCF,GACZG,GAAQA,EAAK1D,OAAShB,EAAYiB,UAAUC,OAAO,WAGvD7F,UAAY+B,KAAKuH,kBAAkBL,wDAhHhClH,KAAKsD,UAAUkC,OAAO,SAACX,EAAKF,SAClCE,GAAIjB,OAAShB,EAAYiB,UAAUC,QAAUe,EAAIZ,UACjDuD,EAAKlC,UAAUX,KAAK9G,mDAmDfmC,MAAKF,6BAGKvC,QACZsF,SAAShF,OAAS,KACnBH,KACmBsC,KAAK8F,YAAY,GAAIvI,cAHtBkK,EAAA,QAGX5E,SAHW4E,EAAA,QAIjBtG,cAAcnB,KAAK8G,sBAAsBpJ,IAE1CsC,KAAKb,KAAOuI,SAASC,eAAe3H,KAAKkD,yDAGnBlD,MAAKkF,2BAEhB0C,QACV1C,aAALlC,KACKJ,EAAYiF,oBACZD,GAED5H,KAAKoD,eAAcpD,KAAKiB,cAAgBjB,KAAKiB,yEAI1CjB,MAAKsD,UAAUwE,IAAI,SAAAjD,SACxBA,GAAIjB,OAAShB,EAAYiB,UAAUE,MACjCc,EAAIE,KACHF,EAAIZ,SAEH,GADA8D,EAAK7C,aAAaH,OACdiD,KAAK,8CAGWhI,MAAKqD,2BAEhB4E,QACVC,oBAAoBD,GACrBjI,KAAKoD,eAAcpD,KAAKiB,cAAgBjB,KAAKiB,kDAG9BjB,MAAKmI,oBAEhB9I,QACH8I,MAAQ9I,EACTW,KAAKoD,eAAcpD,KAAK+C,YAAc/C,KAAK+C,oBA9WzBrD,EAkY1BkD,GAAYK,eACL,OACA,0nIACA,KAEPL,EAAYiB,iBACH,cACA,SAETjB,EAAYiF,0BACJ,YACA,QC7YFO,GAAAA,SAAAA,cACSjJ,EAAIC,4EACTD,EAAIC,aAELiJ,UAAYjJ,EAAKiJ,YAEjBC,eAAiBrG,EAAK5C,KAAKyI,IAAI,SAAAS,SAAKrJ,OAAMI,YAAYH,EAAIoJ,wDAGxDhL,EAAKS,MACRN,GAAMsC,KAAKwI,MAAMjL,EAAKS,OACrBgC,KAAKqI,UAAW,MAAO3K,UAIxB+K,GAFAxK,EAAYD,EAAQC,UAGpByK,EAAUhL,EAEP+K,IAAYC,KACPA,IACA1I,KAAKwI,MAAMC,aACRA,EAAQ5K,gBACT4K,sBAED,MACFA,EAAQ5K,mBAKXI,UAAYA,GAAaP,EAAIG,OAAS4K,EAAQ5K,QAE/C4K,gCAGFlL,EAAKS,SACHgC,MAAKsI,eAAeK,OAAO,SAACC,EAAGL,MAChCM,GAAI9K,EAAyB6K,EAAG5K,GAChCN,EAAM6K,EAAErH,QAAQ0H,EAAGC,YACf5K,UAAY4K,EAAE5K,UACfP,GACNH,uIAKE+K,eAAezH,QAAQ,SAAA0H,KACxBhJ,eAEOuJ,UAAUxH,aAAaqB,MAAM4F,6IAMnCD,eAAezH,QAAQ,SAAA0H,SAAKA,GAAEjH,wBAvDhB5B,SLavBR,GAAMI,YAAc,SAAUH,EAAIC,MAC5BC,GAAOD,EAAKC,WACZA,aAAgBK,GAAiBL,EACjCA,YAAgB0J,QAAe,GAAIvG,GAAWrD,EAAIC,GAClDC,YAAgB2J,OAAc,GAAIZ,GAASjJ,EAAIC,GAC/C9B,EAAS+B,GAAc,GAAIuD,GAAYzD,EAAIC,GAC3CC,EAAKyJ,oBAAqBpJ,GAAiB,GAAIL,GAAKF,EAAIC,GACxDC,YAAgB4J,UAAiB,GAAIvG,GAASvD,EAAIC,GAC/C,GAAIM,GAASP,EAAIC,IAE1BF,EAAMQ,SAAWA,EACjBR,EAAMwD,SAAWA,EACjBxD,EAAMsD,WAAaA,EACnBtD,EAAM0D,YAAcA,EACpBsG,OAAOhK,MAAQA","file":"imask.min.js","sourcesContent":["export\r\nfunction isString (str) {\r\n  return typeof str === 'string' || str instanceof String;\r\n}\r\n\r\nexport\r\nfunction conform (res, str, fallback='') {\r\n  return isString(res) ?\r\n    res :\r\n    res ?\r\n      str :\r\n      fallback;\r\n}\r\n\r\nexport\r\nfunction extendDetailsAdjustments(str, details) {\r\n  var cursorPos = details.cursorPos;\r\n  var oldSelection = details.oldSelection;\r\n  var oldValue = details.oldValue;\r\n\r\n  var startChangePos = Math.min(cursorPos, oldSelection.start);\r\n  var insertedCount = cursorPos - startChangePos;\r\n  // Math.max for opposite operation\r\n  var removedCount = Math.max((oldSelection.end - startChangePos) ||\r\n    // for Delete\r\n    oldValue.length - str.length, 0);\r\n  var head = str.substring(0, startChangePos);\r\n  var tail = str.substring(startChangePos + insertedCount);\r\n  var inserted = str.substr(startChangePos, insertedCount);\r\n  var removed = str.substr(startChangePos, removedCount);\r\n\r\n  return {\r\n    startChangePos,\r\n    head,\r\n    tail,\r\n    inserted,\r\n    removed,\r\n    ...details\r\n  };\r\n}\r\n","import {isString} from './utils';\r\n\r\nimport BaseMask from './masks/base';\r\nimport RegExpMask from './masks/regexp';\r\nimport FuncMask from './masks/func';\r\nimport PatternMask from './masks/pattern';\r\nimport PipeMask from './masks/pipe';\r\n\r\n\r\nexport default\r\nfunction IMask (el, opts={}) {\r\n  var mask = IMask.MaskFactory(el, opts);\r\n  mask.bindEvents();\r\n  // refresh\r\n  mask.rawValue = el.value;\r\n  return mask;\r\n}\r\n\r\nIMask.MaskFactory = function (el, opts) {\r\n  var mask = opts.mask;\r\n  if (mask instanceof BaseMask) return mask;\r\n  if (mask instanceof RegExp) return new RegExpMask(el, opts);\r\n  if (mask instanceof Array) return new PipeMask(el, opts);\r\n  if (isString(mask)) return new PatternMask(el, opts);\r\n  if (mask.prototype instanceof BaseMask) return new mask(el, opts);\r\n  if (mask instanceof Function) return new FuncMask(el, opts);\r\n  return new BaseMask(el, opts);\r\n}\r\nIMask.BaseMask = BaseMask;\r\nIMask.FuncMask = FuncMask;\r\nIMask.RegExpMask = RegExpMask;\r\nIMask.PatternMask = PatternMask;\r\nwindow.IMask = IMask;\r\n","import {conform, extendDetailsAdjustments} from '../utils';\r\n\r\n\r\nexport default\r\nclass BaseMask {\r\n  constructor (el, opts) {\r\n    this.el = el;\r\n    this.mask = opts.mask;\r\n\r\n    this._listeners = {};\r\n    this._refreshingCount = 0;\r\n    this._rawValue = \"\";\r\n    this._unmaskedValue = \"\";\r\n\r\n    this.saveSelection = this.saveSelection.bind(this);\r\n    this._onInput = this._onInput.bind(this);\r\n    this._onDrop = this._onDrop.bind(this);\r\n  }\r\n\r\n  on (ev, handler) {\r\n    if (!this._listeners[ev]) this._listeners[ev] = [];\r\n    this._listeners[ev].push(handler);\r\n    return this;\r\n  }\r\n\r\n  off (ev, handler) {\r\n    if (!this._listeners[ev]) return;\r\n    if (!handler) {\r\n      delete this._listeners[ev];\r\n      return;\r\n    }\r\n    var hIndex = this._listeners[ev].indexOf(handler);\r\n    if (hIndex >= 0) this._listeners.splice(hIndex, 1);\r\n    return this;\r\n  }\r\n\r\n  get rawValue () {\r\n    return this._rawValue;\r\n  }\r\n\r\n  set rawValue (str) {\r\n    this.processInput(str, {\r\n      cursorPos: str.length,\r\n      oldValue: this.rawValue,\r\n      oldSelection: {\r\n        start: 0,\r\n        end: this.rawValue.length\r\n      }\r\n    });\r\n  }\r\n\r\n  get unmaskedValue () {\r\n    return this._unmaskedValue;\r\n  }\r\n\r\n  set unmaskedValue (value) {\r\n    this.rawValue = value;\r\n  }\r\n\r\n\r\n  bindEvents () {\r\n    this.el.addEventListener('keydown', this.saveSelection);\r\n    this.el.addEventListener('input', this._onInput);\r\n    this.el.addEventListener('drop', this._onDrop);\r\n  }\r\n\r\n  unbindEvents () {\r\n    this.el.removeEventListener('keydown', this.saveSelection);\r\n    this.el.removeEventListener('input', this._onInput);\r\n    this.el.removeEventListener('drop', this._onDrop);\r\n  }\r\n\r\n  fireEvent (ev) {\r\n    var listeners = this._listeners[ev] || [];\r\n    listeners.forEach(l => l());\r\n  }\r\n\r\n  processInput (inputValue, details) {\r\n    details = {\r\n      cursorPos: this.cursorPos,\r\n      oldSelection: this._selection,\r\n      oldValue: this.rawValue,\r\n      oldUnmaskedValue: this.unmaskedValue,\r\n      ...details\r\n    };\r\n\r\n    details = extendDetailsAdjustments(inputValue, details);\r\n\r\n    var res = conform(this.resolve(inputValue, details),\r\n      inputValue,\r\n      this.rawValue);\r\n\r\n    this.updateElement(res, details.cursorPos);\r\n    return res;\r\n  }\r\n\r\n\r\n  get selectionStart () {\r\n    return this._cursorChanging ?\r\n      this._changingCursorPos :\r\n\r\n      this.el.selectionStart;\r\n  }\r\n\r\n  get cursorPos () {\r\n    return this._cursorChanging ?\r\n      this._changingCursorPos :\r\n\r\n      this.el.selectionEnd;\r\n  }\r\n\r\n  set cursorPos (pos) {\r\n    this.el.setSelectionRange(pos, pos);\r\n    this.saveSelection();\r\n  }\r\n\r\n  saveSelection (ev) {\r\n    if (this.rawValue !== this.el.value) {\r\n      console.warn(\"Uncontrolled input change, refresh mask manually!\");\r\n    }\r\n    this._selection = {\r\n      start: this.selectionStart,\r\n      end: this.cursorPos\r\n    };\r\n  }\r\n\r\n  destroy () {\r\n    this.unbindEvents();\r\n    this._listeners.length = 0;\r\n  }\r\n\r\n  updateElement (value, cursorPos) {\r\n    var unmaskedValue = this._calcUnmasked(value);\r\n    var isChanged = (this.unmaskedValue !== unmaskedValue ||\r\n      this.rawValue !== value);\r\n\r\n    this._unmaskedValue = unmaskedValue;\r\n    this._rawValue = value;\r\n\r\n    if (this.el.value !== value) this.el.value = value;\r\n    this.updateCursor(cursorPos);\r\n\r\n    if (isChanged) this._fireChangeEvents();\r\n  }\r\n\r\n  _fireChangeEvents () {\r\n    this.fireEvent(\"accept\");\r\n  }\r\n\r\n  updateCursor (cursorPos) {\r\n    if (cursorPos == null) return;\r\n    this.cursorPos = cursorPos;\r\n\r\n    // also queue change cursor for mobile browsers\r\n    this._delayUpdateCursor(cursorPos);\r\n  }\r\n\r\n  _delayUpdateCursor (cursorPos) {\r\n    this._abortUpdateCursor();\r\n    this._changingCursorPos = cursorPos;\r\n    this._cursorChanging = setTimeout(() => {\r\n      this._abortUpdateCursor();\r\n      this.cursorPos = this._changingCursorPos;\r\n    }, 10);\r\n  }\r\n\r\n  _abortUpdateCursor() {\r\n    if (this._cursorChanging) {\r\n      clearTimeout(this._cursorChanging);\r\n      delete this._cursorChanging;\r\n    }\r\n  }\r\n\r\n  _onInput (ev) {\r\n    this._abortUpdateCursor();\r\n    this.processInput(this.el.value);\r\n  }\r\n\r\n  _onDrop (ev) {\r\n    ev.preventDefault();\r\n    ev.stopPropagation();\r\n  }\r\n\r\n  // override\r\n  resolve (str, details) { return str; }\r\n\r\n  _calcUnmasked (value) { return value; }\r\n}\r\n","import BaseMask from './base';\r\n\r\n\r\nexport default\r\nclass RegExpMask extends BaseMask {\r\n  resolve (str) {\r\n    return this.mask.test(str);\r\n  }\r\n}\r\n","import BaseMask from './base';\r\n\r\n\r\nexport default\r\nclass FuncMask extends BaseMask {\r\n  resolve (...args) {\r\n    return this.mask(...args);\r\n  }\r\n}\r\n","import {conform} from '../utils';\r\nimport BaseMask from './base';\r\n\r\n\r\nexport default\r\nclass PatternMask extends BaseMask {\r\n  constructor (el, opts) {\r\n    super(el, opts);\r\n\r\n    this._hollows = [];\r\n    this.placeholder = opts.placeholder;\r\n    this.definitions = {\r\n      ...PatternMask.DEFINITIONS,\r\n      ...opts.definitions\r\n    };\r\n\r\n    this._alignCursor = this._alignCursor.bind(this);\r\n    this._alignCursorFriendly = this._alignCursorFriendly.bind(this);\r\n\r\n    this._initialized = true;\r\n  }\r\n\r\n  _alignCursorFriendly () {\r\n    if (this.selectionStart !== this.cursorPos) return;\r\n    this._alignCursor();\r\n  }\r\n\r\n  bindEvents () {\r\n    super.bindEvents();\r\n    this.el.addEventListener('click', this._alignCursorFriendly);\r\n  }\r\n\r\n  unbindEvents () {\r\n    super.unbindEvents();\r\n    this.el.removeEventListener('click', this._alignCursorFriendly);\r\n  }\r\n\r\n  _installDefinitions (definitions) {\r\n    this._definitions = definitions;\r\n    this._charDefs = [];\r\n    var pattern = this.mask;\r\n\r\n    if (!pattern || !definitions) return;\r\n\r\n    var unmaskingBlock = false;\r\n    var optionalBlock = false;\r\n    for (var i=0; i<pattern.length; ++i) {\r\n      var ch = pattern[i];\r\n      var type = !unmaskingBlock && ch in definitions ?\r\n        PatternMask.DEF_TYPES.INPUT :\r\n        PatternMask.DEF_TYPES.FIXED;\r\n      var unmasking = type === PatternMask.DEF_TYPES.INPUT || unmaskingBlock;\r\n      var optional = type === PatternMask.DEF_TYPES.INPUT && optionalBlock;\r\n\r\n      if (ch === '{' || ch === '}') {\r\n        unmaskingBlock = !unmaskingBlock;\r\n        continue;\r\n      }\r\n\r\n      if (ch === '[' || ch === ']') {\r\n        optionalBlock = !optionalBlock;\r\n        continue;\r\n      }\r\n\r\n      if (ch === '\\\\') {\r\n        ++i;\r\n        ch = pattern[i];\r\n        // TODO validation\r\n        if (!ch) break;\r\n        type = PatternMask.DEF_TYPES.FIXED;\r\n      }\r\n\r\n      this._charDefs.push({\r\n        char: ch,\r\n        type: type,\r\n        optional: optional,\r\n        unmasking: unmasking\r\n      });\r\n    }\r\n\r\n    this._buildResolvers();\r\n  }\r\n\r\n  _buildResolvers () {\r\n    this._resolvers = {};\r\n    for (var defKey in this.definitions) {\r\n      this._resolvers[defKey] = IMask.MaskFactory(this.el, {\r\n        mask: this.definitions[defKey]\r\n      });\r\n    }\r\n  }\r\n\r\n  _appendTail (str, tail, skipUnresolvedInput=true) {\r\n    var placeholderBuffer = '';\r\n    var hollows = this._hollows.slice();\r\n    var overflow = false;\r\n\r\n    for (var ci=0, di=this._mapPosToDefIndex(str.length); ci < tail.length;) {\r\n      var ch = tail[ci];\r\n      var def = this._charDefs[di];\r\n\r\n      // failed\r\n      if (!def) {\r\n        overflow = true;\r\n        break;\r\n      }\r\n\r\n      if (def.type === PatternMask.DEF_TYPES.INPUT) {\r\n        var resolver = this._resolvers[def.char];\r\n        var chres = resolver.resolve(ch, di, str + placeholderBuffer) || '';\r\n        var isResolved = !!chres;\r\n\r\n        // if ok - next di\r\n        if (chres) {\r\n          chres = conform(chres, ch);\r\n        } else {\r\n          if (!def.optional && skipUnresolvedInput) chres = this._placeholder.char;\r\n          if (hollows.indexOf(di) < 0) hollows.push(di);\r\n        }\r\n\r\n        if (chres) {\r\n          str += placeholderBuffer + conform(chres, ch);\r\n          placeholderBuffer = '';\r\n        }\r\n        if (chres || def.optional || !skipUnresolvedInput) ++di;\r\n        if (isResolved || !def.optional && !skipUnresolvedInput) ++ci;\r\n      } else {\r\n        placeholderBuffer += def.char;\r\n\r\n        if (ch === def.char) ++ci;\r\n        ++di;\r\n      }\r\n    }\r\n\r\n    return [str, hollows, overflow];\r\n  }\r\n\r\n  _extractInput (str, fromPos=0) {\r\n    var input = '';\r\n\r\n    for (var ci=0, di=this._mapPosToDefIndex(fromPos); ci<str.length && di<this._charDefs.length; ++di) {\r\n      var ch = str[ci];\r\n      var def = this._charDefs[di];\r\n\r\n      if (this._isHiddenHollow(di)) continue;\r\n\r\n      if (def.type === PatternMask.DEF_TYPES.INPUT && !this._isHollow(di)) input += ch;\r\n      ++ci;\r\n    }\r\n    return input;\r\n  }\r\n\r\n  _isHollow (defIndex) {\r\n    return this._hollows.indexOf(defIndex) >= 0;\r\n  }\r\n\r\n  _isHiddenHollow (defIndex) {\r\n    return this._isHollow(defIndex) &&\r\n      this._charDefs[defIndex] && this._charDefs[defIndex].optional;\r\n  }\r\n\r\n  _hollowsBefore (defIndex) {\r\n    return this._hollows.filter(h => h < defIndex && this._isHiddenHollow(h));\r\n  }\r\n\r\n  _mapDefIndexToPos (defIndex) {\r\n    return defIndex - this._hollowsBefore(defIndex).length;\r\n  }\r\n\r\n  _mapPosToDefIndex (pos) {\r\n    var defIndex = pos;\r\n    for (var hi=0; hi<this._hollows.length; ++hi) {\r\n      var h = this._hollows[hi];\r\n      if (h >= defIndex) break;\r\n      if (this._isHiddenHollow(h)) ++defIndex;\r\n    }\r\n    return defIndex;\r\n  }\r\n\r\n  _generateInsertSteps (head, inserted) {\r\n    var overflow = false;\r\n\r\n    // save hollow during generation\r\n    var hollows = this._hollows;\r\n\r\n    var insertSteps = [[head, hollows.slice()]];\r\n\r\n    for (var ci=0; ci<inserted.length && !overflow; ++ci) {\r\n      var ch = inserted[ci];\r\n      var [res, hollows, overflow] = this._appendTail(head, ch, false);\r\n      this._hollows = hollows;\r\n      if (!overflow && res !== head) {\r\n        insertSteps.push([res, hollows]);\r\n        head = res;\r\n      }\r\n    }\r\n\r\n    // pop hollows back\r\n    this._hollows = hollows;\r\n\r\n    return insertSteps;\r\n  }\r\n\r\n  resolve (str, details) {\r\n    var cursorPos = details.cursorPos;\r\n    var startChangePos = details.startChangePos;\r\n    var inserted = details.inserted;\r\n    var removedCount = details.removed.length;\r\n    var tailInput = this._extractInput(details.tail, startChangePos + removedCount);\r\n\r\n    // remove hollows after cursor\r\n    var lastHollowIndex = this._mapPosToDefIndex(startChangePos);\r\n    this._hollows = this._hollows.filter(h => h < lastHollowIndex);\r\n\r\n    var res = details.head;\r\n\r\n    // insert available\r\n    var insertSteps = this._generateInsertSteps(res, inserted);\r\n    for (var istep=insertSteps.length-1; istep >= 0; --istep) {\r\n      var step;\r\n      [step, this._hollows] = insertSteps[istep];\r\n      var [tres, thollows, overflow] = this._appendTail(step, tailInput);\r\n      if (!overflow) {\r\n        [res, this._hollows] = [tres, thollows];\r\n        cursorPos = step.length;\r\n        break;\r\n      }\r\n    }\r\n\r\n    // if input at the end - append fixed\r\n    if (inserted && cursorPos === res.length) {\r\n      // append fixed at end\r\n      var appended = this._appendFixedEnd(res);\r\n      cursorPos += appended.length - res.length;\r\n      res = appended;\r\n    }\r\n\r\n    if (!inserted && removedCount) {\r\n      // if delete at right\r\n      if (details.oldSelection.end === cursorPos) {\r\n        for (;;++cursorPos) {\r\n          var di=this._mapPosToDefIndex(cursorPos);\r\n          var def = this._charDefs[di];\r\n          if (!def || def.type !== PatternMask.DEF_TYPES.FIXED) break;\r\n        }\r\n      }\r\n\r\n      // remove head fixed and hollows if removed at end\r\n      if (cursorPos === res.length) {\r\n        var di = this._mapPosToDefIndex(cursorPos-1);\r\n        var hasHollows = false;\r\n        for (; di > 0; --di) {\r\n          var def = this._charDefs[di];\r\n          if (def.type === PatternMask.DEF_TYPES.INPUT) {\r\n            if (this._isHollow(di)) hasHollows = true;\r\n            else break;\r\n          }\r\n        }\r\n        if (hasHollows) res = res.slice(0, di + 1);\r\n      }\r\n    }\r\n\r\n    // append placeholder\r\n    res = this._appendPlaceholderEnd(res);\r\n    details.cursorPos = cursorPos;\r\n\r\n    return res;\r\n  }\r\n\r\n  _fireChangeEvents () {\r\n    // fire 'complete' after 'accept' event\r\n    super._fireChangeEvents();\r\n    if (this.isComplete) this.fireEvent(\"complete\");\r\n  }\r\n\r\n  get isComplete () {\r\n    return !this._charDefs.filter((def, di) =>\r\n      def.type === PatternMask.DEF_TYPES.INPUT && !def.optional &&\r\n      this._isHollow(di)).length;\r\n  }\r\n\r\n  _appendFixedEnd (res) {\r\n    for (var di=this._mapPosToDefIndex(res.length);; ++di) {\r\n      var def = this._charDefs[di];\r\n      if (!def) break;\r\n\r\n      if (this._isHiddenHollow(di)) continue;\r\n      if (def.type === PatternMask.DEF_TYPES.INPUT) break;\r\n      if (di >= res.length) res += def.char;\r\n    }\r\n    return res;\r\n  }\r\n\r\n  _appendPlaceholderEnd (res) {\r\n    for (var di=this._mapPosToDefIndex(res.length); di<this._charDefs.length; ++di) {\r\n      var def = this._charDefs[di];\r\n      if (def.type === PatternMask.DEF_TYPES.INPUT && !this._isHollow(di)) {\r\n        this._hollows.push(di);\r\n      }\r\n      if (this._placeholder.show === 'always') {\r\n        res += def.type === PatternMask.DEF_TYPES.FIXED ?\r\n          def.char :\r\n          !def.optional ?\r\n            this._placeholder.char :\r\n            '';\r\n      }\r\n    }\r\n    return res;\r\n  }\r\n\r\n  _calcUnmasked (str) {\r\n    var unmasked = '';\r\n    for (var ci=0, di=0; ci<str.length && di<this._charDefs.length; ++di) {\r\n      var ch = str[ci];\r\n      var def = this._charDefs[di];\r\n\r\n      if (this._isHiddenHollow(di)) continue;\r\n\r\n      if (def.unmasking && !this._isHollow(di) &&\r\n        (def.type === PatternMask.DEF_TYPES.INPUT && this._resolvers[def.char].resolve(ch, ci, str) ||\r\n          def.char === ch)) {\r\n        unmasked += ch;\r\n      }\r\n      ++ci;\r\n    }\r\n    return unmasked;\r\n  }\r\n\r\n  get unmaskedValue () {\r\n    return this._unmaskedValue;\r\n  }\r\n\r\n  set unmaskedValue (str) {\r\n    this._hollows.length = 0;\r\n    var res;\r\n    [res, this._hollows] = this._appendTail('', str);\r\n    this.updateElement(this._appendPlaceholderEnd(res));\r\n\r\n    if (this.el === document.activeElement) this._alignCursor();\r\n  }\r\n\r\n  get placeholder () { return this._placeholder; }\r\n\r\n  set placeholder (ph) {\r\n    this._placeholder = {\r\n      ...PatternMask.DEFAULT_PLACEHOLDER,\r\n      ...ph\r\n    };\r\n    if (this._initialized) this.unmaskedValue = this.unmaskedValue;\r\n  }\r\n\r\n  get placeholderLabel () {\r\n    return this._charDefs.map(def =>\r\n      def.type === PatternMask.DEF_TYPES.FIXED ?\r\n        def.char :\r\n        !def.optional ?\r\n          this._placeholder.char :\r\n          '').join('');\r\n  }\r\n\r\n  get definitions () { return this._definitions; }\r\n\r\n  set definitions (defs) {\r\n    this._installDefinitions(defs);\r\n    if (this._initialized) this.unmaskedValue = this.unmaskedValue;\r\n  }\r\n\r\n  get mask () { return this._mask; }\r\n\r\n  set mask (mask) {\r\n    this._mask = mask;\r\n    if (this._initialized) this.definitions = this.definitions;\r\n  }\r\n\r\n  _alignCursor () {\r\n    var cursorDefIndex = this._mapPosToDefIndex(this.cursorPos);\r\n    for (var rPos = cursorDefIndex; rPos >= 0; --rPos) {\r\n      var rDef = this._charDefs[rPos];\r\n      var lPos = rPos-1;\r\n      var lDef = this._charDefs[lPos];\r\n      if (this._isHiddenHollow(lPos)) continue;\r\n\r\n      if ((!rDef || rDef.type === PatternMask.DEF_TYPES.INPUT && this._isHollow(rPos) && !this._isHiddenHollow(rPos)) &&\r\n        !this._isHollow(lPos)) {\r\n        cursorDefIndex = rPos;\r\n        if (!lDef || lDef.type === PatternMask.DEF_TYPES.INPUT) break;\r\n      }\r\n    }\r\n    this.cursorPos = this._mapDefIndexToPos(cursorDefIndex);\r\n  }\r\n}\r\nPatternMask.DEFINITIONS = {\r\n  '0': /\\d/,\r\n  'a': /[\\u0041-\\u005A\\u0061-\\u007A\\u00AA\\u00B5\\u00BA\\u00C0-\\u00D6\\u00D8-\\u00F6\\u00F8-\\u02C1\\u02C6-\\u02D1\\u02E0-\\u02E4\\u02EC\\u02EE\\u0370-\\u0374\\u0376\\u0377\\u037A-\\u037D\\u0386\\u0388-\\u038A\\u038C\\u038E-\\u03A1\\u03A3-\\u03F5\\u03F7-\\u0481\\u048A-\\u0527\\u0531-\\u0556\\u0559\\u0561-\\u0587\\u05D0-\\u05EA\\u05F0-\\u05F2\\u0620-\\u064A\\u066E\\u066F\\u0671-\\u06D3\\u06D5\\u06E5\\u06E6\\u06EE\\u06EF\\u06FA-\\u06FC\\u06FF\\u0710\\u0712-\\u072F\\u074D-\\u07A5\\u07B1\\u07CA-\\u07EA\\u07F4\\u07F5\\u07FA\\u0800-\\u0815\\u081A\\u0824\\u0828\\u0840-\\u0858\\u08A0\\u08A2-\\u08AC\\u0904-\\u0939\\u093D\\u0950\\u0958-\\u0961\\u0971-\\u0977\\u0979-\\u097F\\u0985-\\u098C\\u098F\\u0990\\u0993-\\u09A8\\u09AA-\\u09B0\\u09B2\\u09B6-\\u09B9\\u09BD\\u09CE\\u09DC\\u09DD\\u09DF-\\u09E1\\u09F0\\u09F1\\u0A05-\\u0A0A\\u0A0F\\u0A10\\u0A13-\\u0A28\\u0A2A-\\u0A30\\u0A32\\u0A33\\u0A35\\u0A36\\u0A38\\u0A39\\u0A59-\\u0A5C\\u0A5E\\u0A72-\\u0A74\\u0A85-\\u0A8D\\u0A8F-\\u0A91\\u0A93-\\u0AA8\\u0AAA-\\u0AB0\\u0AB2\\u0AB3\\u0AB5-\\u0AB9\\u0ABD\\u0AD0\\u0AE0\\u0AE1\\u0B05-\\u0B0C\\u0B0F\\u0B10\\u0B13-\\u0B28\\u0B2A-\\u0B30\\u0B32\\u0B33\\u0B35-\\u0B39\\u0B3D\\u0B5C\\u0B5D\\u0B5F-\\u0B61\\u0B71\\u0B83\\u0B85-\\u0B8A\\u0B8E-\\u0B90\\u0B92-\\u0B95\\u0B99\\u0B9A\\u0B9C\\u0B9E\\u0B9F\\u0BA3\\u0BA4\\u0BA8-\\u0BAA\\u0BAE-\\u0BB9\\u0BD0\\u0C05-\\u0C0C\\u0C0E-\\u0C10\\u0C12-\\u0C28\\u0C2A-\\u0C33\\u0C35-\\u0C39\\u0C3D\\u0C58\\u0C59\\u0C60\\u0C61\\u0C85-\\u0C8C\\u0C8E-\\u0C90\\u0C92-\\u0CA8\\u0CAA-\\u0CB3\\u0CB5-\\u0CB9\\u0CBD\\u0CDE\\u0CE0\\u0CE1\\u0CF1\\u0CF2\\u0D05-\\u0D0C\\u0D0E-\\u0D10\\u0D12-\\u0D3A\\u0D3D\\u0D4E\\u0D60\\u0D61\\u0D7A-\\u0D7F\\u0D85-\\u0D96\\u0D9A-\\u0DB1\\u0DB3-\\u0DBB\\u0DBD\\u0DC0-\\u0DC6\\u0E01-\\u0E30\\u0E32\\u0E33\\u0E40-\\u0E46\\u0E81\\u0E82\\u0E84\\u0E87\\u0E88\\u0E8A\\u0E8D\\u0E94-\\u0E97\\u0E99-\\u0E9F\\u0EA1-\\u0EA3\\u0EA5\\u0EA7\\u0EAA\\u0EAB\\u0EAD-\\u0EB0\\u0EB2\\u0EB3\\u0EBD\\u0EC0-\\u0EC4\\u0EC6\\u0EDC-\\u0EDF\\u0F00\\u0F40-\\u0F47\\u0F49-\\u0F6C\\u0F88-\\u0F8C\\u1000-\\u102A\\u103F\\u1050-\\u1055\\u105A-\\u105D\\u1061\\u1065\\u1066\\u106E-\\u1070\\u1075-\\u1081\\u108E\\u10A0-\\u10C5\\u10C7\\u10CD\\u10D0-\\u10FA\\u10FC-\\u1248\\u124A-\\u124D\\u1250-\\u1256\\u1258\\u125A-\\u125D\\u1260-\\u1288\\u128A-\\u128D\\u1290-\\u12B0\\u12B2-\\u12B5\\u12B8-\\u12BE\\u12C0\\u12C2-\\u12C5\\u12C8-\\u12D6\\u12D8-\\u1310\\u1312-\\u1315\\u1318-\\u135A\\u1380-\\u138F\\u13A0-\\u13F4\\u1401-\\u166C\\u166F-\\u167F\\u1681-\\u169A\\u16A0-\\u16EA\\u1700-\\u170C\\u170E-\\u1711\\u1720-\\u1731\\u1740-\\u1751\\u1760-\\u176C\\u176E-\\u1770\\u1780-\\u17B3\\u17D7\\u17DC\\u1820-\\u1877\\u1880-\\u18A8\\u18AA\\u18B0-\\u18F5\\u1900-\\u191C\\u1950-\\u196D\\u1970-\\u1974\\u1980-\\u19AB\\u19C1-\\u19C7\\u1A00-\\u1A16\\u1A20-\\u1A54\\u1AA7\\u1B05-\\u1B33\\u1B45-\\u1B4B\\u1B83-\\u1BA0\\u1BAE\\u1BAF\\u1BBA-\\u1BE5\\u1C00-\\u1C23\\u1C4D-\\u1C4F\\u1C5A-\\u1C7D\\u1CE9-\\u1CEC\\u1CEE-\\u1CF1\\u1CF5\\u1CF6\\u1D00-\\u1DBF\\u1E00-\\u1F15\\u1F18-\\u1F1D\\u1F20-\\u1F45\\u1F48-\\u1F4D\\u1F50-\\u1F57\\u1F59\\u1F5B\\u1F5D\\u1F5F-\\u1F7D\\u1F80-\\u1FB4\\u1FB6-\\u1FBC\\u1FBE\\u1FC2-\\u1FC4\\u1FC6-\\u1FCC\\u1FD0-\\u1FD3\\u1FD6-\\u1FDB\\u1FE0-\\u1FEC\\u1FF2-\\u1FF4\\u1FF6-\\u1FFC\\u2071\\u207F\\u2090-\\u209C\\u2102\\u2107\\u210A-\\u2113\\u2115\\u2119-\\u211D\\u2124\\u2126\\u2128\\u212A-\\u212D\\u212F-\\u2139\\u213C-\\u213F\\u2145-\\u2149\\u214E\\u2183\\u2184\\u2C00-\\u2C2E\\u2C30-\\u2C5E\\u2C60-\\u2CE4\\u2CEB-\\u2CEE\\u2CF2\\u2CF3\\u2D00-\\u2D25\\u2D27\\u2D2D\\u2D30-\\u2D67\\u2D6F\\u2D80-\\u2D96\\u2DA0-\\u2DA6\\u2DA8-\\u2DAE\\u2DB0-\\u2DB6\\u2DB8-\\u2DBE\\u2DC0-\\u2DC6\\u2DC8-\\u2DCE\\u2DD0-\\u2DD6\\u2DD8-\\u2DDE\\u2E2F\\u3005\\u3006\\u3031-\\u3035\\u303B\\u303C\\u3041-\\u3096\\u309D-\\u309F\\u30A1-\\u30FA\\u30FC-\\u30FF\\u3105-\\u312D\\u3131-\\u318E\\u31A0-\\u31BA\\u31F0-\\u31FF\\u3400-\\u4DB5\\u4E00-\\u9FCC\\uA000-\\uA48C\\uA4D0-\\uA4FD\\uA500-\\uA60C\\uA610-\\uA61F\\uA62A\\uA62B\\uA640-\\uA66E\\uA67F-\\uA697\\uA6A0-\\uA6E5\\uA717-\\uA71F\\uA722-\\uA788\\uA78B-\\uA78E\\uA790-\\uA793\\uA7A0-\\uA7AA\\uA7F8-\\uA801\\uA803-\\uA805\\uA807-\\uA80A\\uA80C-\\uA822\\uA840-\\uA873\\uA882-\\uA8B3\\uA8F2-\\uA8F7\\uA8FB\\uA90A-\\uA925\\uA930-\\uA946\\uA960-\\uA97C\\uA984-\\uA9B2\\uA9CF\\uAA00-\\uAA28\\uAA40-\\uAA42\\uAA44-\\uAA4B\\uAA60-\\uAA76\\uAA7A\\uAA80-\\uAAAF\\uAAB1\\uAAB5\\uAAB6\\uAAB9-\\uAABD\\uAAC0\\uAAC2\\uAADB-\\uAADD\\uAAE0-\\uAAEA\\uAAF2-\\uAAF4\\uAB01-\\uAB06\\uAB09-\\uAB0E\\uAB11-\\uAB16\\uAB20-\\uAB26\\uAB28-\\uAB2E\\uABC0-\\uABE2\\uAC00-\\uD7A3\\uD7B0-\\uD7C6\\uD7CB-\\uD7FB\\uF900-\\uFA6D\\uFA70-\\uFAD9\\uFB00-\\uFB06\\uFB13-\\uFB17\\uFB1D\\uFB1F-\\uFB28\\uFB2A-\\uFB36\\uFB38-\\uFB3C\\uFB3E\\uFB40\\uFB41\\uFB43\\uFB44\\uFB46-\\uFBB1\\uFBD3-\\uFD3D\\uFD50-\\uFD8F\\uFD92-\\uFDC7\\uFDF0-\\uFDFB\\uFE70-\\uFE74\\uFE76-\\uFEFC\\uFF21-\\uFF3A\\uFF41-\\uFF5A\\uFF66-\\uFFBE\\uFFC2-\\uFFC7\\uFFCA-\\uFFCF\\uFFD2-\\uFFD7\\uFFDA-\\uFFDC]/,  // http://stackoverflow.com/a/22075070\r\n  '*': /./\r\n};\r\nPatternMask.DEF_TYPES = {\r\n  INPUT: 'input',\r\n  FIXED: 'fixed'\r\n}\r\nPatternMask.DEFAULT_PLACEHOLDER = {\r\n  show: 'lazy',\r\n  char: '_'\r\n};\r\n","import BaseMask from './base';\r\nimport {extendDetailsAdjustments} from '../utils';\r\n\r\n\r\nexport default\r\nclass PipeMask extends BaseMask {\r\n  constructor (el, opts) {\r\n    super(el, opts);\r\n\r\n    this.multipass = opts.multipass;\r\n\r\n    this._compiledMasks = this.mask.map(m => IMask.MaskFactory(el, m));\r\n  }\r\n\r\n  resolve (str, details) {\r\n    var res = this._pipe(str, details);\r\n    if (!this.multipass) return res;\r\n\r\n    var cursorPos = details.cursorPos;\r\n\r\n    var stepRes;\r\n    var tempRes = res;\r\n\r\n    while (stepRes !== tempRes) {\r\n      stepRes = tempRes;\r\n      tempRes = this._pipe(stepRes, {\r\n        cursorPos: stepRes.length,\r\n        oldValue: stepRes,\r\n        oldSelection: {\r\n          start: 0,\r\n          end: stepRes.length\r\n        }\r\n      });\r\n    }\r\n\r\n    details.cursorPos = cursorPos - (res.length - stepRes.length);\r\n\r\n    return stepRes;\r\n  }\r\n\r\n  _pipe (str, details) {\r\n    return this._compiledMasks.reduce((s, m) => {\r\n      var d = extendDetailsAdjustments(s, details);\r\n      var res = m.resolve(s, d);\r\n      details.cursorPos = d.cursorPos;\r\n      return res;\r\n    }, str);\r\n  }\r\n\r\n  bindEvents () {\r\n    super.bindEvents();\r\n    this._compiledMasks.forEach(m => {\r\n      m.bindEvents();\r\n      // disable basemask events for child masks\r\n      BaseMask.prototype.unbindEvents.apply(m);\r\n    });\r\n  }\r\n\r\n  unbindEvents () {\r\n    super.unbindEvents();\r\n    this._compiledMasks.forEach(m => m.unbindEvents());\r\n  }\r\n}\r\n"]}